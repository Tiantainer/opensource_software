number,title,state,created_at,closed_at,reporter,labels,comments_count,body,type,component,severity,priority,has_reproduction,fix_time_days
2227,Clarify items in `.config-schema.json`,closed,2025-01-21 04:54:38,2025-01-22 04:52:38,rhamzeh,['bug'],0,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

As a follow-up on the fixes @renan-r-santos submitted in https://github.com/openfga/openfga/pull/2217, there's a few more items to consider as the https://github.com/openfga/openfga/blob/main/.config-schema.json file still has a few invalid or missing properties:

1. `OPENFGA_HTTP_TLS_KEY` and `OPENFGA_GRPC_TLS_KEY`: should have type ""string"", currently doesn't have any
2. `OPENFGA_DATASTORE_CONN_MAX_LIFETIME` and `OPENFGA_DATASTORE_CONN_MAX_IDLE_TIME`: should have default value and the current section moved to the description field
3. `OPENFGA_AUTHN_PRESHARED_KEYS`, `OPENFGA_HTTP_CORS_ALLOWED_ORIGINS` and `OPENFGA_HTTP_CORS_ALLOWED_HEADERS` have no description
4. Boolean values are sometimes written as boolean strings, e.g. (`OPENFGA_CONTEXT_PROPAGATION_TO_DATASTORE` is `false` vs `OPENFGA_TRACE_ENABLED` is `""false""`)

### OpenFGA version

1.8.4

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

N/A

### Logs

_No response_",性能问题,前端,未指定,未指定,False,0.0
2205,"""[...] relation is referenced in at least one tupleset and thus must be a direct relation"" and we don't get why",open,2025-01-10 09:37:10,,geoffroybraun,['bug'],1,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Hi there,

recently, we faced an issue we are not able to fix. As usual, here is an example with simplified business rules to understand the problem:
* an entity belongs to a `parent` organization.
* an organization has `children` entities.
* entities can have a `subscription`.
* custom features can be enabled on entities.
* if an entity has custom features enabled and a subscription, then the parent organization also has access to the custom features.

Of course, these are not our current business rules, we simplified them, the point still is the same: if a child has access to something, we want to transmit it to its parent. Here is the model and tests we use for this example (keep in mind that types and relations are modelized that way because this is exactly what we want from a business point of view).

```yaml
---
name: tests

model: |
  model
    schema 1.2
  type user
  type entity
    relations
      define parent: [organization]
      define subscription: [entity]
      define custom_features: [entity]
      define has_custom_features_enabled: custom_features and subscription
      define has_organization_custom_features_enabled: parent from has_custom_features_enabled
  type organization
    relations
      define children: [file]
      define has_custom_features_enabled: has_organization_custom_features_enabled from children

tuples:
  - user: entity:a
    relation: children
    object: organization:a
  - user: organization:a
    relation: parent
    object: entity:a
tests:
  - name: Custom features enabled on an entity are also enabled on the parent organization
    description: Ensure custom features are transmitted to an entity parent organization when enabled
    tuples:
      - user: entity:a
        relation: enable_custom_features
        object: entity:a
    check:
      - user: organization:a
        object: organization:a
        assertions:
          has_custom_features_enabled: true
  - name: Custom features disabled on an entity are also disabled on the parent organization
    description: Ensure custom features are not transmitted to an entity parent organization when disabled
    check:
      - user: organization:a
        object: organization:a
        assertions:
          has_custom_features_enabled: false
```

As explained in the title, when running the command `fga model test --tests my-test-file.fga.yaml` using the CLI, we receive the following log error:

> Error: error running tests due to rpc error: code = Code(2056) desc = the 'entity#has_custom_features_enabled' relation is referenced in at least one tupleset and thus must be a direct relation

We don't understand why the `has_custom_features_enabled` relation on the `file` type is considered as a _tupleset_ one, we simply want to redirect to the entity itself if custom features are enabled. We discussed this _trick_ with @aaguiarz months ago and we are actively using it, it's perfectly working. The difference with this current example is that we move from a type to another, and this seems to break the model.

I saw issue openfga/openfga#2137 while searching for the error message but that is all I found. Please let me know why we can't have concentric relation pointing to concentric relation.

Cheers,

Geoffroy

### OpenFGA version

1.8.3

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

no

### Logs

_No response_",功能错误,前端,未指定,未指定,False,
2189,"When performing Read, an invalid user is allowed to be passed",closed,2025-01-03 15:42:56,2025-01-07 15:42:52,rhamzeh,['bug'],0,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

When issuing a `Read` API Call, the [following](https://github.com/openfga/js-sdk?tab=readme-ov-file#read-relationship-tuples) are the only supported patterns.

```js
// 1. Find if a relationship tuple stating that a certain user is a viewer of a certain document
const body = { tuple_key: {
  user: ""user:81684243-9356-4421-8fbf-a4f8d36aa31b"",
  relation: ""viewer"",
  object: ""document:0192ab2a-d83f-756d-9397-c5ed9f3cb69a"",
} };

// 2. Find all relationship tuples where a certain user has any relation to a certain document
const body = { tuple_key: {
  user: ""user:81684243-9356-4421-8fbf-a4f8d36aa31b"",
  object: ""document:0192ab2a-d83f-756d-9397-c5ed9f3cb69a"",
} };

// 3. Find all relationship tuples where a certain user is a viewer of any document
const body = { tuple_key: {
  user: ""user:81684243-9356-4421-8fbf-a4f8d36aa31b"",
  relation: ""viewer"",
  object: ""document:"",
} };

// 4. Find all relationship tuples where a certain user has any relation with any document
const body = { tuple_key: {
  user: ""user:81684243-9356-4421-8fbf-a4f8d36aa31b"",
  object: ""document:"",
} };

// 5. Find all relationship tuples where any user has any relation with a particular document
const body = { tuple_key: {
  object: ""document:0192ab2a-d83f-756d-9397-c5ed9f3cb69a"",
} };

// 6. Read all stored relationship tuples
const body = {};
```

Some folks are trying an unsupported query:
```js
// Find all relationship tuples where any user of a certain type has any relation with any object of a certain type
const body = { tuple_key: {
  user: ""user:"",
  object: ""document:"",
} };
```

In this case we are currently returning an empty array, because we're treating it like case (4) but not finding any user that matches `user:` (of course, as that is an invalid user).

What we should be doing to help folks is throw a 400 error so that they know that the query is wrong.


Source: https://cloud-native.slack.com/archives/C06G1NNH47N/p1735918049155619

### OpenFGA version

v1.8.2

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

N/A

### Logs

_No response_",性能问题,前端,未指定,未指定,False,3.0
2188,Check API returning unexpected responses,open,2025-01-02 13:18:29,,Bob1008-Call,['bug'],4,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

DSL:

```
type employee
type api
  relations
    define action: [action]
    define can_access: can_access_with_context from action
type action
  relations
    define access: [employee]
    define can_access: access
    define approved_location: [location]
    define can_access_with_context: can_access and user from approved_location
type location
  relations
    define user: [employee]
```

tuples:
![Image](https://github.com/user-attachments/assets/c8f07fc0-f25a-47a3-93ab-18097127972e)

The results are different in different environments, for example, the test environment is normal and abnormal after online.
unexpected responses:

mark: I have not upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.

### OpenFGA version

v1.4.0

### How are you running OpenFGA?

As a binary

### What datastore are you using?

MySQL

### OpenFGA Flags

./bin/openfga run

### Logs

1.
{""level"":""info"",""timestamp"":1735812282.9571292,""msg"":""grpc_req_complete"",""build.version"":""v1.4.0"",""build.commit"":""eca56d26cca39d31ec947e79dd851cdd373e1b52"",""grpc_service"":""openfga.v1.OpenFGAService"",""grpc_method"":""Check"",""grpc_type"":""unary"",""request_id"":""d20f9223-4cc1-401a-95d8-792de824b64a"",""user_agent"":""grpc-go/1.64.0"",""raw_request"":{""store_id"":""01HDG789W56DSQV3XPG9Q6ME9D"",""tuple_key"":{""user"":""employee:910576225745960960"",""relation"":""can_access"",""object"":""api:1253537717002498048""},""contextual_tuples"":{""tuple_keys"":[{""user"":""employee:910576225745960960"",""relation"":""user"",""object"":""location:SASE"",""condition"":null}]},""authorization_model_id"":""01HDG793HXRW3HC7DXQZQ1FD7C"",""trace"":false,""context"":null},""raw_response"":{""allowed"":false,""resolution"":""""},""store_id"":""01HDG789W56DSQV3XPG9Q6ME9D"",""authorization_model_id"":""01HDG793HXRW3HC7DXQZQ1FD7C"",""datastore_query_count"":16,""peer.address"":""10.99.177.87:54990"",""grpc_code"":0}

2.
{""level"":""info"",""timestamp"":1735812282.9626484,""msg"":""grpc_req_complete"",""build.version"":""v1.4.0"",""build.commit"":""eca56d26cca39d31ec947e79dd851cdd373e1b52"",""grpc_service"":""openfga.v1.OpenFGAService"",""grpc_method"":""Check"",""grpc_type"":""unary"",""request_id"":""beae594e-4f00-41b3-a225-ec28008083b8"",""user_agent"":""grpc-go/1.64.0"",""raw_request"":{""store_id"":""01HDG789W56DSQV3XPG9Q6ME9D"",""tuple_key"":{""user"":""employee:910576225745960960"",""relation"":""can_access"",""object"":""api:1253537717002498049""},""contextual_tuples"":{""tuple_keys"":[{""user"":""employee:910576225745960960"",""relation"":""user"",""object"":""location:SASE"",""condition"":null}]},""authorization_model_id"":""01HDG793HXRW3HC7DXQZQ1FD7C"",""trace"":false,""context"":null},""raw_response"":{""allowed"":false,""resolution"":""""},""peer.address"":""10.99.177.87:54990"",""store_id"":""01HDG789W56DSQV3XPG9Q6ME9D"",""authorization_model_id"":""01HDG793HXRW3HC7DXQZQ1FD7C"",""datastore_query_count"":16,""grpc_code"":0}",兼容性问题,前端,未指定,未指定,False,
2179,Inconsistent error behaviour when check is called with tuples missing condition when experimental flag is set to enable-check-optimizations,open,2024-12-19 16:02:11,,adriantam,['bug'],0,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

For the following model

```
model
  schema 1.1

type user

type group
  relations
    define allmembers: member or member_cond
    define member: [user]
    define member_cond: [user with xcond]

type folder
  relations
    define viewer: [group#allmembers]

condition xcond(x: string) {
  x == '1'
}
```

with the following tuples, 

```
folder:1#viewer@group:1#allmembers
folder:1#viewer@group:2#allmembers
group:1#member@user:1
group:2#member_condr@user:1 (with condition x)
```

calling check(user:1, viewer: folder:1) with NO context for x will yield error when `enable-check-optimizations` is enabled while returning true when `enable-check-optimizations` is not enabled.

Similarly, for the above model and the following tuples
```
folder:1#viewer@group:2#allmembers
group:1#member@user:1
```
calling check(user:1, viewer: folder:1) with NO context for x will yield error when `enable-check-optimizations` is enabled while returning false when `enable-check-optimizations` is not enabled.


### OpenFGA version

1.8.2

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

OPENFGA_EXPERIMENTALS=enable-check-optimizations

### Logs

```
2024/12/19 10:01:50 stdout: 2024-12-19T10:01:50.797-0500	INFO	grpc_req_complete	{""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""user_agent"": ""PostmanRuntime/7.43.0"", ""raw_request"": {""store_id"":""01JFFPVN92HPXBFXR36FGFD8ZE"",""tuple_key"":{""user"":""user:condmixed"",""relation"":""viewer"",""object"":""folder:1""},""contextual_tuples"":null,""authorization_model_id"":"""",""trace"":false,""context"":null,""consistency"":""UNSPECIFIED""}, ""raw_response"": {""code"":""validation_error"",""message"":""failed to evaluate relationship condition: 'xcond' - tuple 'group:1#member_cond@user:condmixed' is missing context parameters '[x]'""}, ""query_duration_ms"": ""29"", ""peer.address"": ""127.0.0.1:56399"", ""request_id"": ""2781a464-c2c5-4641-bda5-c703c58f7cea"", ""store_id"": ""01JFFPVN92HPXBFXR36FGFD8ZE"", ""authorization_model_id"": ""01JFFPXP45QCHG8DDYXM87DQGW"", ""grpc_code"": 2000, ""error"": ""rpc error: code = Code(2000) desc = failed to evaluate relationship condition: 'xcond' - tuple 'group:1#member_cond@user:condmixed' is missing context parameters '[x]'""}
```",性能问题,前端,未指定,未指定,False,
2134,config.schema was not updated with BatchCheck,closed,2024-12-02 21:45:58,2024-12-09 19:59:02,rhamzeh,"['bug', 'documentation']",0,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

In [v1.8.0](https://github.com/openfga/openfga/releases/tag/v1.8.0), support for BatchCheck was added and with it [two new flags](https://github.com/openfga/openfga/blob/736af79c9e6df7845dd32d66feaf22f07cbc1535/cmd/run/flags.go#L164-L168):
- `OPENFGA_MAX_CHECKS_PER_BATCH_CHECK`
- `OPENFGA_MAX_CONCURRENT_CHECKS_PER_BATCH_CHECK`

The [Config Schema file](https://github.com/openfga/openfga/blob/main/.config-schema.json) however was not updated with those options.


### OpenFGA version

v1.8.0

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

N/A

### Logs

_No response_",性能问题,前端,未指定,未指定,False,6.0
2112,listUser in Java client bug,closed,2024-11-21 10:02:16,2024-11-21 15:03:59,Omni-star,['bug'],1,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Hi, when i use the listUser method for OpenFgaClient in Java it arise an exception that say method listUser not found. Description and stack trace are reported in the log section.

### OpenFGA version

openfga-sdk:0.7.1

### How are you running OpenFGA?

As a binary

### What datastore are you using?

Postgres

### OpenFGA Flags

-

### Logs

listUsers
dev.openfga.sdk.errors.FgaApiNotFoundError: listUsers
	at dev.openfga.sdk.errors.FgaError.getError(FgaError.java:51)
	at dev.openfga.sdk.api.client.HttpRequestAttempt.lambda$attemptHttpRequest$2(HttpRequestAttempt.java:97)
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.postFire(CompletableFuture.java:614)
	at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:844)
	at java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)",兼容性问题,前端,未指定,未指定,False,0.0
2111,OpenFGA upgrade from 1.3.0 to 1.5.4 has DB migration issue.,closed,2024-11-21 04:54:57,2024-11-26 06:00:04,Charish-Spotdraft,['bug'],3,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

## Summary
After upgrading OpenFGA from version 1.3.0 to 1.5.4, requests to the /check endpoint fail with the error message: `""type <my_entity> not found""`. This issue occurs despite the entity type being defined and working correctly in version 1.3.0.

## Steps to Reproduce

- used the [docker compose file](https://github.com/openfga/openfga/blob/main/docker-compose.yaml)(updated it to have volumes for postgres mounted). updated file: [docker-compose.yml.txt](https://github.com/user-attachments/files/17835607/docker-compose.yml.txt) (remove `.txt` to use it, had to add it as github would not let me upload `.yml` files).
- initially use v1.3.0 of openfga i.e `image: openfga/openfga:v1.3.0` in the docker compose file
- `docker-compose up -d`
- add sample data: store.fga.yaml can look like [contract.fga.yaml.txt](https://github.com/user-attachments/files/17840004/contract.fga.yaml.txt)
- make `/read` and `/check` calls for the tuple and observe that there are no issues
- `docker-compose down`
- update the docker compose file to set the version to 1.5.4 i.e `image: openfga/openfga:v1.5.4`
- `docker-compose up -d`
- `/read` call is successful but `/check` throws an error with message `""type 'contract' not found""`

There seems to be an issue with migrate where the DB is not gracefully migrated so the entities are not recognized in newer version.

### Relevant Links
Had raised in slack community channel ([thread](https://cloud-native.slack.com/archives/C06G1NNH47N/p1730099521667279))  earlier
### OpenFGA version

1.5.4

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

Postgres

### OpenFGA Flags

NA

### Logs

logline for the failed `/check` call
```
{""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""user_agent"": ""PostmanRuntime/7.42.0"", ""raw_request"": {""store_id"":""01JD6G2SCP9KVR3T14EVFM76XK"",""tuple_key"":{""user"":""user:1"",""relation"":""viewer"",""object"":""contract:1""},""contextual_tuples"":null,""authorization_model_id"":"""",""trace"":false,""context"":null}, ""raw_response"": {""code"":""validation_error"",""message"":""type 'contract' not found""}, ""peer.address"": ""127.0.0.1:59482"", ""request_id"": ""aea60c53-ea73-4301-823f-529884983990"", ""store_id"": ""01JD6G2SCP9KVR3T14EVFM76XK"", ""authorization_model_id"": ""01JD6G34V18EXDVMS77WV1X42A"", ""grpc_code"": 2000, ""error"": ""rpc error: code = Code(2000) desc = type 'contract' not found""}
```",兼容性问题,前端,未指定,未指定,True,5.0
2073,docker pull: specifying --platform=linux/amd64 results in linux/arm64 image on macos for version v1.7.0,open,2024-11-06 18:08:14,,mapsam,['bug'],2,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Update

This issue appears to be less related to ECR and more related to the `docker pull` command and specifying architecture types.

### Description

Hello! Thank you for all the work on Open FGA.

Starting with version v1.5.5+ - I'm unable to use the docker images with AWS ECR and ECS. ECR reports the following when scanning the image for security vulnerabilities:

```
Image not supported
UnsupportedImageError: The operating system and/or package manager are not supported.
```

### How we vendor the image

The containers are run on standard Fargate x84_64/amd64 instances. We distribute the image in an ECR repository as-is, without any modifications or additional dependencies to the image. Here's how I do that on my machine:

```sh
# set the open fga version
export VERSION=v1.5.5

# log into ecr
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com

# pull the specific image
docker pull openfga/openfga:$VERSION

# tag the newly pulled image
docker tag openfga/openfga:$VERSION $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/vendored/openfga/openfga:$VERSION

# push the image to the ECR remote
docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/vendored/openfga/openfga:$VERSION
```

When I update the task definition to use the new image, I get the following startup error, which typically signals the architectures are mismatching:

```
exec /openfga: exec format error
```

### Specs

* Apple M3 Pro
* Sonoma 14.3
* Docker version 27.3.1, build ce1223035a
* Docker desktop 4.34.3

### Debugging

My initial thought was that I need to specify `--platform linux/amd64` when pulling the image. Inspecting the images locally I can see they are all linux/amd64. 

The sha256 values match between the vendored ECR image and the docker hub images.

```sh
$ aws ecr describe-images --repository-name vendored/openfga/openfga --image-ids imageTag=v1.5.5
# {
#     ""imageDetails"": [
#         {
#             ""registryId"": ""641603309031"",
#             ""repositoryName"": ""vendored/openfga/openfga"",
#             ""imageDigest"": ""sha256:5c2f35804fe5afe912f81c068f17ca12073df266e105ddb74ee0700c5f9414ad"",
#             ""imageTags"": [
#                 ""v1.5.5""
#             ],
#             ""imageSizeInBytes"": 14544624,
#             ""imagePushedAt"": ""2024-11-05T16:22:55.611000-08:00"",
#             ""imageManifestMediaType"": ""application/vnd.docker.distribution.manifest.v2+json"",
#             ""artifactMediaType"": ""application/vnd.docker.container.image.v1+json"",
#             ""lastRecordedPullTime"": ""2024-11-06T09:39:56.859000-08:00""
#         }
#     ]
# }

$ docker manifest inspect openfga/openfga:v1.5.5
# {
#     ""schemaVersion"": 2,
#     ""mediaType"": ""application/vnd.docker.distribution.manifest.list.v2+json"",
#     ""manifests"": [
#        {
#           ""mediaType"": ""application/vnd.docker.distribution.manifest.v2+json"",
#           ""size"": 1158,
#           ""digest"": ""sha256:5c2f35804fe5afe912f81c068f17ca12073df266e105ddb74ee0700c5f9414ad"",
#           ""platform"": {
#              ""architecture"": ""amd64"",
#              ""os"": ""linux""
#           }
#        },
#        {
#           ""mediaType"": ""application/vnd.docker.distribution.manifest.v2+json"",
#           ""size"": 1158,
#           ""digest"": ""sha256:56a79106958fdf005574597dee5afc5ab0ebea86e1000bb205a5e0a3845e2a06"",
#           ""platform"": {
#              ""architecture"": ""arm64"",
#              ""os"": ""linux""
#           }
#        }
#     ]
# }
```



### OpenFGA version

v1.5.5

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

./openfga run

### Logs

_No response_",兼容性问题,前端,未指定,未指定,False,
2070,OpenFGA Docker Image 1.7.0 not reflecting updated maximum contextual tuples limit.,closed,2024-11-05 12:45:45,2024-11-12 18:39:27,erlingto,['bug'],2,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

In the release notes for [OpenFGA v1.7.0](https://github.com/openfga/openfga/releases/tag/v1.7.0), the maximum number of contextual tuples was increased from 20 to 100. However, this change doesn’t appear to be applied in the Docker image for v1.7.0.

When testing with a new container, calls to /stores/{storeId}/list-objects or /stores/{storeId}/check still result in a 400 Bad Request error, with the message: ""invalid ContextualTupleKeys.TupleKeys: value must contain no more than 20 item(s)"".

Also, is there any plans to let developers override this limit? 




### OpenFGA version

1.7.0

### How are you running OpenFGA?

In Docker

### What datastore are you using?

In-Memory

### OpenFGA Flags

no

### Logs

   INFO    grpc_req_complete       {""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""user_agent"": ""bruno-runtime/1.34.0"", ""raw_request"": {""store_id"":""01JBY25P4A8ASRSAZBG474ZEE6"",""tuple_key"":null,""contextual_tuples"":{""tuple_keys"":[{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null},{""user"":"""",""relation"":"""",""object"":"""",""condition"":null}]},""authorization_model_id"":""01G5JAVJ41T49E9TT3SKVS7X1J"",""trace"":false,""context"":null,""consistency"":""UNSPECIFIED""}, ""raw_response"": {""code"":""validation_error"",""message"":""invalid ContextualTupleKeys.TupleKeys: value must contain no more than 20 item(s)""}, ""query_duration_ms"": ""0"", ""peer.address"": ""127.0.0.1:49972"", ""request_id"": ""b2ce74cb-8995-4ffa-bbd3-ed2f3f7dc138"", ""store_id"": ""01JBY25P4A8ASRSAZBG474ZEE6"", ""grpc_code"": 2000, ""error"": ""rpc error: code = InvalidArgument desc = invalid CheckRequest.TupleKey: value is required; invalid CheckRequest.ContextualTuples: embedded message failed validation | caused by: invalid ContextualTupleKeys.TupleKeys: value must contain no more than 20 item(s)""}",性能问题,前端,未指定,未指定,False,7.0
2048,internal error with nested userset with public wildcard,closed,2024-10-28 18:01:08,2024-10-28 19:32:46,adriantam,['bug'],0,"### Checklist

- [x] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [x] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [x] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [x] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [x] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [x] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Define the following model

```
model
  schema 1.1

type user

type group
  relations
    define member: [user, user:*, group#member]
```

with the following tuples

```
group:1#member@user:*
```

Running check for (user:any, member, group:1) will result in internal error

### OpenFGA version

latest (unofficial release)

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

enable-check-optimizations

### Logs

_No response_",性能问题,前端,未指定,未指定,False,0.0
1957,MySQL Indexes need optimization,open,2024-09-23 15:57:52,,meldsza,"['bug', 'performance', 'storage-adapter']",0,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

We have a usecase where we create a group and then list the groups in the UI with all the permissions assigned to the group.
When we run read tuples with the particular group or a particular object type on a large enough set of tuples, the api timeouts out with sql error 

Looking into the DB we saw the below sql statement run
```sql
SELECT store, object_type, object_id, relation, _user, condition_name, condition_context, ulid, inserted_at FROM tuple WHERE store = '01HY2AB17XACTGSZ8E2MPZ2W6B' AND object_type = 'organization' AND _user = 'group:99#member' ORDER BY ulid LIMIT 51
```
Running an explain on this sql statement, we get the following:
```md
# id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	tuple		index	PRIMARY,idx_reverse_lookup_user	idx_tuple_ulid	104		102	5.00	Using where
```
It uses the idx_tuple_ulid index instead of the PRIMARY or idx_reverse_lookup_user possibly because of the ORDER BY ULID statement.
The result takes about 65 seconds to complete on a table with 12044739 rows. 

Forcing the use of `PRIMARY` index results in a drastic reduction of query time to 3.5 seconds. 

Creating a purpose built index for this operation:
```sql
CREATE INDEX idx_tuple_list_permissions on tuple (store, object_type, _user);
```
Reduces the query time down to 0.2 seconds.


**Env Details**:
MySQL: 8.0.37
OpenFGA: v1.6.1


### OpenFGA version

v1.6.1

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

MySQL

### OpenFGA Flags

None

### Logs

_No response_",性能问题,前端,未指定,未指定,False,
1940,Treating `user` and `object` type-only values inconsistently when reading tuples in postgres,closed,2024-09-18 19:20:25,2024-10-01 12:28:36,iamolegga,['bug'],4,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

I don't know if this is a bug or a feature, but it looks strange and unexpected.

When getting tuples passing full user (type+id) and type only for the object it works:

```sh
λ  builder main ✓ fga tuple read --store-id=01J82JPK1AVKSJQJAK35DNWWNB --user user:ybwtv2146mir --object organization:
{
  ""continuation_token"":"""",
  ""tuples"": [
    {
      ""key"": {
        ""object"":""organization:b7851d2d-79a8-4c07-915d-286f1b308716"",
        ""relation"":""owner"",
        ""user"":""user:ybwtv2146mir""
      },
      ""timestamp"":""2024-09-18T14:37:15.560864Z""
    }
  ]
}
```

When doing the same the opposite way (type only for the user and full for the object) it doesn't:

```sh
λ  builder main ✓ fga tuple read --store-id=01J82JPK1AVKSJQJAK35DNWWNB --user user: --object organization:b7851d2d-79a8-4c07-915d-286f1b308716
{
  ""continuation_token"":"""",
  ""tuples"": []
}
```

Omitting the `user` field works fine:

```sh
λ  builder main ✓ fga tuple read --store-id=01J82JPK1AVKSJQJAK35DNWWNB --object organization:b7851d2d-79a8-4c07-915d-286f1b308716
{
  ""continuation_token"":"""",
  ""tuples"": [
    {
      ""key"": {
        ""object"":""organization:b7851d2d-79a8-4c07-915d-286f1b308716"",
        ""relation"":""owner"",
        ""user"":""user:ybwtv2146mir""
      },
      ""timestamp"":""2024-09-18T14:37:15.560864Z""
    }
  ]
}
λ  builder main ✓
```

If I'm not mistaken, this behavior is due to this part of the code:

https://github.com/openfga/openfga/blob/main/pkg/storage/postgres/postgres.go#L195-L197

which is different from how `object` is handled:

https://github.com/openfga/openfga/blob/main/pkg/storage/postgres/postgres.go#L185-L191



### OpenFGA version

latest

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

no

### Logs

_No response_",功能错误,前端,未指定,未指定,False,12.0
1910,Connection closed abruptly because of SIGTERM is not handled.,closed,2024-09-05 06:10:21,2024-09-13 16:32:46,flex-seongbok,['bug'],4,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

When restarting OpenFGA, our server experiencing forced connection close.
When OpenFGA receives SIGTERM signal it continue processing ongoing requests and shutdown only when nothing left.
SIGTERM should also added to handled signals at [code](https://github.com/openfga/openfga/blob/v1.6.1/cmd/run/run.go#L438)

Kubernetes sends SIGTERM on graceful termination period. [link](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination)
> Typically, with this graceful termination of the pod, kubelet makes requests to the container runtime to attempt to stop the containers in the pod by first sending a TERM (aka. SIGTERM) signal, with a grace period timeout, to the main process in each container.


originally from https://github.com/openfga/openfga/issues/1909

### OpenFGA version

v1.6.0

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

MySQL

### OpenFGA Flags

no

### Logs

upstream connect error or disconnect/reset before headers. reset reason: connection termination

dev.openfga.sdk.errors.FgaApiInternalError: check",性能问题,前端,未指定,未指定,False,8.0
1886,Internal Runtime Error from OpenFGA Read API,closed,2024-08-28 05:00:07,2024-09-05 01:36:42,flex-seongbok,['bug'],6,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

https://cloud-native.slack.com/archives/C06G1NNH47N/p1724746907702059
Got internal error response from OpenFGA Read API

### OpenFGA version

v1.5.9

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

MySQL

### OpenFGA Flags

no

### Logs

Log left on our application
{""code"":""internal_error"",""message"":""Internal Server Error""}
```
d.o.s.e.FgaApiInternalError: read
	at d.o.s.e.FgaError.getError(FgaError.java:55)
	at d.o.s.a.c.HttpRequestAttempt.lambda$attemptHttpRequest$2(HttpRequestAttempt.java:56)
	at j.u.c.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	at j.u.c.CompletableFuture.postComplete(CompletableFuture.java:510)
	at j.u.c.CompletableFuture.complete(CompletableFuture.java:2179)
	at i.o.j.s.i.h.i.CompletableFutureWrapper.lambda$wrap$0(CompletableFutureWrapper.java:28)
	at j.u.c.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	at j.u.c.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	at j.u.c.CompletableFuture.postComplete(CompletableFuture.java:510)
	at j.u.c.CompletableFuture.postFire(CompletableFuture.java:614)
	at j.u.c.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:844)
	at j.u.c.CompletableFuture$Completion.exec(CompletableFuture.java:483)
	at j.u.c.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at j.u.c.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at j.u.c.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at j.u.c.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at j.u.c.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
```

Log left on OpenFGA
```
{
  ""level"": ""error"",
  ""timestamp"": 1724813999.986411,
  ""msg"": ""HTTPPanicRecoveryHandler has recovered a panic"",
  ""build.version"": ""v1.5.9"",
  ""build.commit"": ""3993c7f30bbf6128fd5e13061b9543cbcfcff49a"",
  ""error"": ""runtime error: index out of range [128] with length 128""
}
```
",兼容性问题,前端,未指定,未指定,False,7.0
1882,OpenFGA Playground Not Running on Brave Browser Due to Network Errors.,open,2024-08-27 16:03:38,,PrassesKhadka,['bug'],2,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

### Checklist

- [x]  I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Describe the problem you'd like to have solved

While attempting to run the OpenFGA Playground on the Brave browser, I encountered a network error that prevented the application from functioning correctly. The error message observed in the console was:

```
POST http://127.0.0.1:9000/stores net::ERR_BLOCKED_BY_CLIENT
AxiosError: Network Error
```
This issue appears to be related to Brave's built-in privacy features or browser extensions that block certain network requests, such as ad blockers or privacy tools.(not sure why though)

### Steps to Reproduce

    1. Open the Brave browser.
    2. Navigate to the OpenFGA Playground.
    3. Observe the network error in the console when trying to interact with the playground.

### Describe the ideal solution

Consider providing a warning or notification within the OpenFGA Playground that informs users about potential issues with Brave or similar browsers. This could help users troubleshoot the problem more effectively.

### Alternatives and current workarounds

Didn't dig into it too much, switched to Chrome and works fine there.

### Additional context

- ***Browser***: Brave
- ***Operating System***: Linux Mint 21.3
- ***OpenFGA Version***: 1.5.9


### OpenFGA version

1.5.9

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

no

### Logs

```
POST http://127.0.0.1:9000/stores net::ERR_BLOCKED_BY_CLIENT
Uncaught (in promise) AxiosError: Network Error
```",功能错误,前端,未指定,未指定,True,
1874,Missing server config validations in case server is used as a library,open,2024-08-24 03:01:17,,miparnisari,"['bug', 'good first issue', 'hacktoberfest']",8,"https://github.com/openfga/openfga/blob/88fd6dd6c5715d0036a47427b162b393fe6a8b20/pkg/server/config/config.go#L313-L465

None of these validations are being executed if you use OpenFGA as a library. Proof:

```go
openfga, err := NewServerWithOpts(WithDatastore(datastore),
		WithMaxConcurrentReadsForListUsers(0),
		WithListUsersDeadline(-1*time.Second),
	)
if err != nil {
	panic(err)
}
```

this doesn't panic, even though the `deadline`  is a negative number.

We should split out validations into:

- Validations specific to the server settings (e.g. deadlines, maxConcurrentReads, experimentals, metrics buckets)
- Validations specific to the binary, i.e. applicable to the middlewares (e.g. request timeout, playground, HTTP, GRPC, logging)",性能问题,后端,未指定,未指定,False,
1867,enabling TLS problem in docker,closed,2024-08-22 07:24:47,2024-08-24 10:19:21,paneda1998,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

when i tring to enabling TLS in container(my setup is kebernetes) i got 	{""error"": ""open /var/lib/data/data/server.crt: no such file or directory""}

i check path several times and use differnt approach to mount file in container
secret configmap pvc...
in all scenario i got this
i also check permissions and they are ok.

### OpenFGA version

latest

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

Postgres

### OpenFGA Flags

/openfga run --playground-enabled --authn-method=preshared --authn-preshared-keys=""cwescsvcdscHJBCDSCIBNDC21,132421dEFDEFefwefefwf"" --http-tls-enabled=true --http-tls-cert=/var/lib/data/data/server.crt --http-tls-key=/var/lib/data/data/server.key

### Logs

_No response_",兼容性问题,前端,未指定,未指定,False,2.0
1832,`migrate` returns 1 when migration already done,open,2024-08-12 09:53:07,,smndtrl,['bug'],2,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

As part of our deployments we run a `migrate` every time before we start a `run` container. Now we discovered that, because we had to re-deploy the same version of openfga twice, the second time the migration errors.

`Error: failed to get db version: ERROR: relation ""goose_db_version"" already exists (SQLSTATE 42P07)`

We assume this might be unintended and something like a return `0` with a no migration necessary log should have happened.


### Expectation

When migration is already applied return code would be `0`

### Reproduction

1. Run migrate
2. Run migrate

### Store data

```yaml
model_file: |
  model
    schema 1.1
  type user
  type organization
    relations
      define member: [user]
tuples:
  - user: user:anne
    relation: member
    object: organization:openfga
  - user: user:bob
    relation: member
    object: organization:openfga
tests: # remove this if not a bug in Check or ListObjects API
  - name: test-1
    check:
      - user: user:anne
        object: organization:openfga
        assertions:
          member: true
    list_objects:
      - user: user:anne
        type: organization
        assertions:
          member:
            - organization:openfga
```


### OpenFGA version

latest

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

-

### Logs

_No response_",兼容性问题,前端,未指定,未指定,False,
1806,Incorrect implementation of `tuple.SplitObject`,open,2024-07-30 06:13:17,,miparnisari,['bug'],4,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

It seems to me that `tuple.SplitObject(obj)` is incorrectly implemented.
1. it supports an input such as `group#member:fga`, which is invalid.
2. for a valid input `group:fga#member` it returns `group, fga#member `. It should be `group`, `member`, `fga`.

Luckily, when we pass a userset as input, we always discard the second return value, so this doesn't manifest in any bugs.

### Expectation

- `tuple.SplitObject` should accept correctly formatted usersets as inputs.
- If it's possible, I recommend changing the return types from `(typeAndRelation, id)` to `(type, relation, id)` and deprecate `SplitObjectRelation`. These two functions almost always are called together, which is a code smell.

### Reproduction

n/a

### Store data

_No response_

### OpenFGA version

1.5.7

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

none

### Logs

_No response_",功能错误,前端,未指定,未指定,False,
1801,OpenFGA is logging to `stderr`,closed,2024-07-29 17:51:09,2024-08-14 21:35:25,miparnisari,['bug'],0,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

This was originally reported in Slack: https://cloud-native.slack.com/archives/C06G1NNH47N/p1721883467423289

```go
[29/07/24 10:49:29] ~/GitHub/openfga (main) $ make dev-run
 🚀  Installing the OpenFGA binary within /Users/maria.inesparnisari/go/bin  
 🚀  Starting OpenFGA server                                                 
==> Running OpenFGA with In-Memory data storage
2024/07/29 10:49:34 Running build command!
2024/07/29 10:49:35 Build ok.
2024/07/29 10:49:35 Restarting the given command.
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.852-0700        INFO    using 'memory' storage engine
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.852-0700        INFO    using 'preshared' authentication
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.852-0700        WARN    gRPC TLS is disabled, serving connections using insecure plaintext
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.852-0700        INFO    📈 starting prometheus metrics server on '0.0.0.0:2112'
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.852-0700        INFO    starting openfga service...    {""version"": ""dev"", ""date"": ""unknown"", ""commit"": ""none"", ""go-version"": ""go1.22.5"", ""config"": {""ListObjectsDeadline"":3000000000,""ListObjectsMaxResults"":1000,""ListUsersDeadline"":3000000000,""ListUsersMaxResults"":1000,""MaxTuplesPerWrite"":100,""MaxTypesPerAuthorizationModel"":100,""MaxAuthorizationModelSizeInBytes"":262144,""MaxConcurrentReadsForListObjects"":4294967295,""MaxConcurrentReadsForCheck"":4294967295,""MaxConcurrentReadsForListUsers"":4294967295,""MaxConditionEvaluationCost"":100,""ChangelogHorizonOffset"":0,""Experimentals"":[],""ResolveNodeLimit"":25,""ResolveNodeBreadthLimit"":100,""RequestTimeout"":3000000000,""Datastore"":{""Engine"":""memory"",""Username"":"""",""MaxCacheSize"":100000,""MaxOpenConns"":30,""MaxIdleConns"":10,""ConnMaxIdleTime"":0,""ConnMaxLifetime"":0,""Metrics"":{""Enabled"":false}},""GRPC"":{""Addr"":""0.0.0.0:8081"",""TLS"":{""Enabled"":false,""CertPath"":"""",""KeyPath"":""""}},""HTTP"":{""Enabled"":true,""Addr"":""0.0.0.0:8080"",""TLS"":{""Enabled"":false,""CertPath"":"""",""KeyPath"":""""},""UpstreamTimeout"":5000000000,""CORSAllowedOrigins"":[""*""],""CORSAllowedHeaders"":[""*""]},""Authn"":{""Method"":""preshared"",""Issuer"":"""",""IssuerAliases"":[],""Audience"":""""},""Log"":{""Format"":""text"",""Level"":""info"",""TimestampFormat"":""Unix""},""Trace"":{""Enabled"":false,""OTLP"":{""Endpoint"":""0.0.0.0:4317"",""TLS"":{""Enabled"":false}},""SampleRatio"":0.2,""ServiceName"":""openfga""},""Playground"":{""Enabled"":true,""Port"":3000},""Profiler"":{""Enabled"":false,""Addr"":"":3001""},""Metrics"":{""Enabled"":true,""Addr"":""0.0.0.0:2112"",""EnableRPCHistograms"":false},""CheckQueryCache"":{""Enabled"":false,""Limit"":10000,""TTL"":10000000000},""DispatchThrottling"":{""Enabled"":false,""Frequency"":10000,""Threshold"":100,""MaxThreshold"":0},""CheckDispatchThrottling"":{""Enabled"":false,""Frequency"":10000,""Threshold"":100,""MaxThreshold"":0},""ListObjectsDispatchThrottling"":{""Enabled"":false,""Frequency"":10000,""Threshold"":100,""MaxThreshold"":0},""RequestDurationDatastoreQueryCountBuckets"":[""50"",""200""],""RequestDurationDispatchCountBuckets"":[""50"",""200""],""CheckTrackerEnabled"":false}}
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.852-0700        INFO    🚀 starting gRPC server on '0.0.0.0:8081'...
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.853-0700        INFO    🛝 starting openfga playground on http://localhost:3000/playground
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.853-0700        INFO    🚀 starting HTTP server on '0.0.0.0:8080'...
2024/07/29 10:49:35 stderr: 2024-07-29T10:49:35.853-0700        WARN    HTTP TLS is disabled, serving connections using insecure plaintext

```

### Expectation

Logs to stdout

### Reproduction

```make dev-run```

### Store data

_No response_

### OpenFGA version

1.5.7

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

no

### Logs

_No response_",性能问题,前端,未指定,未指定,False,16.0
1795,fix: flakey test,closed,2024-07-26 13:39:00,2024-07-26 15:35:07,senojj,['bug'],1,"The TestServerLogs/streamed_list_objects_success test is flakey. This PR changes the test to read the entire streaming HTTP response before closing the body and attempting to read the logs.

## Description
The suspected cause of this issue: Currently, the test does not read the response body data for HTTP requests, and instead closes the body immediately after the client returns. This causes the client to close and discard the TCP connection immediately and move on. The `StreamedListObjects` sends response objects concurrently, and will attempt to send all objects, regardless of the state of the connection. This creates a race condition between the server sending all of the response objects before emitting the log, and the test attempting to read the logs. Hence the flakiness of this test.

To fix the issue, we will now read the entire streaming response body, to EOF, before attempting to read the logs. This will ensure that the test waits until the server has processed and sent all response objects and had a chance to emit the log that the test is expecting.

## References
This PR attempts to address the same issue stated in #1762

## Review Checklist
- [x] I have clicked on [""allow edits by maintainers""](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/allowing-changes-to-a-pull-request-branch-created-from-a-fork).
- [x] I have added documentation for new/changed functionality in this PR or in a PR to [openfga.dev](https://github.com/openfga/openfga.dev) [Provide a link to any relevant PRs in the references section above]
- [x] The correct base branch is being used, if not `main`
- [x] I have added tests to validate that the change in functionality is working as expected
",功能错误,后端,未指定,未指定,False,0.0
1771,Postgres deadlock on write,open,2024-07-15 19:48:32,,ben-mays-cs,"['bug', 'storage-adapter']",4,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

While executing 2-3 `Write` calls per second, we're observing a consistent low rate of `4000` internal server errors from OpenFGA. The logs indicate this is a SQL Deadlock: `""internal_error"":""sql error: ERROR: deadlock detected (SQLSTATE 40P01)""`. There are only 2 other processes writing to OpenFGA but they are competing to write the same tuples.

We're running on AWS RDS, using the official container image. 

Given the consistency of the error, I believe it is pathological in the sql_common implementation. I suspect adding a ""SELETE FOR UPDATE"" clause would resolve this deadlock, as the current implementation in-deterministically locks rows on update.

Technically this behavior isn't incorrect but requires the client to continue to retry (i.e. pessimistic). Rather, it'd be probably more ergonomic to block on the lock and execute afterwards.

### Expectation

Multiple writers can issue Write requests without erroring.

### Reproduction

1. openfga v1.5.4 running via docker
2. Run multiple writer go routines to create ""Write"" traffic at a rate of 2-3 RPS.
3. Observe 4000 error codes, SQL deadlock logs.

### Store data

_No response_

### OpenFGA version

v1.5.4

### How are you running OpenFGA?

As a binary

### What datastore are you using?

Postgres

### OpenFGA Flags

N/A

### Logs
SQL Logs
```
2024-07-12 21:10:10 UTC:10.245.196.18(62770):user@openfga:[12549]:ERROR: deadlock detected
2024-07-12 21:10:10 UTC:10.245.196.18(62770):user@openfga:[12549]:DETAIL: Process 12549 waits for ShareLock on transaction 19518924; blocked by process 6065.
Process 6065 waits for ShareLock on transaction 19518923; blocked by process 12549.
Process 12549: INSERT INTO tuple (store,object_type,object_id,relation,_user,user_type,condition_name,condition_context,ulid,inserted_at) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,NOW())
Process 6065: INSERT INTO tuple (store,object_type,object_id,relation,_user,user_type,condition_name,condition_context,ulid,inserted_at) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,NOW())
2024-07-12 21:10:10 UTC:10.245.196.18(62770):user@openfga:[12549]:HINT: See server log for query details.
```",功能错误,前端,未指定,未指定,False,
1766,"""Internal Server Error"" on Check and ListUsers",closed,2024-07-12 23:32:57,2024-07-16 14:55:35,miparnisari,['bug'],0,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Both of the requests below throw a 500: `folder1#viewer relation is undefined`

<img width=""1166"" alt=""image"" src=""https://github.com/user-attachments/assets/868bea6d-df0d-468b-ae48-4f085e9e4469"">


### Expectation

Check should return allowed=false and ListUsers should return an empty array

### Reproduction

See below

### Store data

```
name: Test

model: |+
    model
      schema 1.1

    type user
    type folder1
    type folder2
      relations
        define viewer: [user]
    type doc
      relations
        define viewer: viewer from parent
        define parent: [folder1, folder2]

tuples:
  - user: folder1:x
    relation: parent
    object: doc:x
tests:
  - name: internal-server-error
    check:
      - user: user:maria
        object: doc:x
        assertions:
          viewer: false
    list_users:
      - object: doc:x
        user_filter:
          - type: user
        assertions:
          viewer:
```

### OpenFGA version

Commit 518606928ded775a86a6ed69c4e6faa245e9b372

### How are you running OpenFGA?

As a binary

### What datastore are you using?

Postgres

### OpenFGA Flags

no

### Logs

_No response_",兼容性问题,前端,未指定,未指定,False,3.0
1671,In multiple 'blocked' relationships the 'usersets' logic does not work as expected.,closed,2024-06-07 22:08:51,2024-06-09 18:09:23,xXAvoraXx,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Imagine a river and we have a boat on this river, imagine that this river bifurcates towards the end of the road and splits into two. Assume that one of the paths has an obstacle and the other does not. When our boat on the river approaches this fork in the road, you would expect it to go to the road without obstacles instead of the one with obstacles, right? This is exactly what I'm trying to explain, in 'blocked' relationships, it always chooses the 'blocked' relationship in dual path situations. Whereas the other path is open and accessible from that path.


When I add the blocking relation below, members of the group:management continue to access the group even though I have blocked members of the group:management from accessing the group.

```
  - user: group:management#member
    relation: blocked
    object: group:management
```


![scheme drawio](https://github.com/openfga/openfga/assets/6988989/fa61604a-80f1-4102-b280-e7b4c01f72d4)


### Expectation

- The admin user should have access to the management group's action named 'management'.
- The president user should not be able to access the management group's action named 'management' because the members of the management group are blocked from accessing the management group.

When I use usersets, I expect the userset block of that relationship to be blocked, but it is not blocking at the moment.
When the following tuple is added, my expectation from the system is that the 'access_member' relationship returns 'false' but currently it returns 'true'.

```
  - user: group:management#member
    relation: blocked
    object: group:management
```


![image](https://github.com/openfga/openfga/assets/6988989/86c1bb21-322f-4674-aaf5-f6a83dfb72d9)


### Reproduction

-

### Store data

```yaml
model_file: |
  model
    schema 1.1
  type user
  type group
    relations
      define assignee: [parent_group]
      define member: [role, group]
      define blocked: [user, role#access, parent_group#access, group#member, group#assignee]
      define access_member: access from member but not blocked
      define access_assigne: access from assignee but not blocked
      define access: access_member or access_assigne
      define can_access: access
  type parent_group
    relations
      define parent: [parent_group, role]
      define sibling: [parent_group, role]
      define blocked: [user, parent_group#access, role#access]
      define access: (access from parent or access from sibling) but not blocked
      define can_access: access
  type role
    relations
      define parent: [role, parent_group]
      define sibling: [role, parent_group]
      define member: [user]
      define blocked: [user, role#access, parent_group#access]
      define access: (member or access from parent or access from sibling) but not blocked
      define can_access: access
  type action
    relations
      define blocked: [user, role#access, group#access]
      define direct_access: [user, role#access, group#access]
      define access_decision: direct_access
      define can_access: access_decision but not blocked
tuples:
  - user: parent_group:admin
    relation: assignee
    object: group:admin
  - user: parent_group:admin
    relation: parent
    object: parent_group:management
  - user: group:management
    relation: member
    object: group:admin
  - user: role:admin
    relation: parent
    object: parent_group:admin
  - user: parent_group:management
    relation: assignee
    object: group:management
  - user: parent_group:management
    relation: parent
    object: role:president
  - user: role:president
    relation: member
    object: group:management
  - user: group:management#access
    relation: direct_access
    object: action:management
  - user: user:admin
    relation: member
    object: role:admin
  - user: user:president
    relation: member
    object: role:president
  - user: group:management#member
    relation: blocked
    object: group:management
tests:
  - name: Test for restricting access of management group members to the management group and its resources.
    check:
      - user: user:admin
        object: action:management
        assertions:
          can_access: true
      - user: user:president
        object: action:management
        assertions:
          can_access: false
```


### OpenFGA version

openfga/cli#v0.4.1

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

none

### Logs

_No response_",性能问题,前端,未指定,未指定,False,1.0
1668,Type validation errors in versions > v1.4.3 due to old authorization_model format,closed,2024-06-06 18:41:28,2024-10-01 20:56:20,ben-mays-cs,['bug'],4,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

We experienced an issue trying to upgrade OpenFGA from `v1.4.3` to `v1.5.4`. The migration runs (via docker) fine but any subsequent `Check` or `ListObject` calls returns a validation error (`type %s not found`). Notably, the `Expand` operation still recognizes the types, along with the Playground. 

```
$ fga query expand read doc:abcd
{
  ""tree"": {
   ... results
}

$ fga query check user:u read doc:abcd
Error: failed to check due to failed to check due to Check validation error for POST Check with body {""code"":""validation_error"",""message"":""type 'doc' not found""}
 with error code validation_error error message: type 'doc' not found
```

We're currently running on `v1.43` but have been running since `v1.12`. I noticed that the authorization model storage has changed and suspect that we have an older authorization model with explicit `type` columns and serialized `type_definition` columns. 

```
openfga=# select * from authorization_model where authorization_model_id='y';

store                  | s
authorization_model_id | y
type                   |
type_definition        |
schema_version         | 1.1
serialized_protobuf    |  <protobuf serialized>

openfga=# select * from authorization_model where authorization_model_id='x';
-[ RECORD 1 ]----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
store                  | s
authorization_model_id | x
type                   | doc
type_definition        |  <protobuf serialized>
schema_version         | 1.1
serialized_protobuf    |
```

To fix this issue, I did the following:
1. Re-save the same model as a new model id ""y"" via `fga model write --file`
2. Update the model in postgres via: `update authorization_model set authorization_model_id='x' where authorization_model_id='y';`
3. Delete older format: `delete from authorization_model where authorization_model_id='x' and type != '';` 
4. Upgrade to v1.5.4

This resolved the issue and did not break traffic, as the model-id did not change.

I did a pass through the code and couldn't find a smoking gun, notably https://github.com/openfga/openfga/blame/main/pkg/storage/sqlcommon/sqlcommon.go#L502-L518 looks correct in that it always exits with the deserialized model iff one exists. The behavior when one doesn't exist seems sound.

This change does seem correlated with the breakage: https://github.com/openfga/openfga/pull/1387

### Expectation

I expected the older format schema to work with the newer request validation logic. This is a breaking change somewhere in >`v1.4.3`.

### Reproduction

1. Given a older row-per-type authorization_model stored in Postgres
2. Validation fails in Check/ListObject calls due to missing type information

### Store data

_No response_

### OpenFGA version

v1.4.3

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

No

### Logs

_No response_",兼容性问题,前端,未指定,未指定,False,117.0
1664,ReadChanges return no continuation on empty changes even when continuation token is provided,closed,2024-06-05 16:12:30,2024-06-05 17:22:42,adriantam,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

According to OpenFGA API docs, if there are no changes after the provided continuation token, the same token will be returned in order for it to be used when new changes are recorded. If the store never had any tuples added or removed, this token will be empty.

However,  current behaviour is that if record is empty, it will not return any continuation token even if the continuation token is provided.  This is seen in [unit test](https://github.com/openfga/openfga/blob/4b47d50594b9c7e436d64cf783c0aedba30b940f/pkg/storage/test/tuples.go#L175).

### Expectation

Same continuation token should be returned if  continuation token was provided in the request.

### Reproduction

See unit test - https://github.com/openfga/openfga/blob/4b47d50594b9c7e436d64cf783c0aedba30b940f/pkg/storage/test/tuples.go#L175

### Store data

```yaml
model_file: |
  model
    schema 1.1
  type user
  type organization
    relations
      define member: [user]
tuples:
  - user: user:anne
    relation: member
    object: organization:openfga
  - user: user:bob
    relation: member
    object: organization:openfga
tests: # remove this if not a bug in Check or ListObjects API
  - name: test-1
    check:
      - user: user:anne
        object: organization:openfga
        assertions:
          member: true
    list_objects:
      - user: user:anne
        type: organization
        assertions:
          member:
            - organization:openfga
```


### OpenFGA version

1.5.4

### How are you running OpenFGA?

As a binary

### What datastore are you using?

Postgres

### OpenFGA Flags

any

### Logs

_No response_",兼容性问题,前端,未指定,未指定,False,0.0
1640,Database performance issue: indexes recommandations,open,2024-05-27 12:51:43,,paulinejamin,"['bug', 'storage-adapter']",2,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Hi Team,
We spotted with our recommendation tool for PostgreSQL (pghero) that the Tuple table needs an index. We are a little bit surprised that we need to create it ourself. According to your documentation, it says that 'Bootstrapped and managed with the openfga migrate command. This will ensure the appropriate database indexes are created.' 
Thanks a lot!

### Expectation

No recommandations for indexes creation.

### Reproduction

We have OpenFGA 1.5.3 with Cloud SQL for PostgreSQL 14.10. We have 1 vcpu and 3,75 Gb RAM.
When we launch pghero on this database, it recommends us to create the following index: 
![image](https://github.com/openfga/openfga/assets/31284703/ddf8bc97-01c7-4e1c-9266-fc5e4b48a4ca)
![image](https://github.com/openfga/openfga/assets/31284703/2e3680ed-9bf7-4551-97a6-bdd23c2f0bd7)


### Store data

_No response_

### OpenFGA version

1.5.3

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

Postgres

### OpenFGA Flags

none

### Logs

_No response_",性能问题,前端,未指定,未指定,False,
1625,OpenFGA `migrate` fails to start using k8s on GCP,closed,2024-05-17 15:39:06,2024-05-20 10:06:01,gr-bump,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Using k8s on the GCP platform, I'm trying to set up an API container with an OpenFGA container.
Before starting these containers, I initialize a first OpenFGA container (as k8s `initContainers`) to run the `migrate` command.

When I run `kubectl apply`, I get this error when the OpenFga migrate container tries to start:

`failed to create containerd task: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: ""migrate"": executable file not found in $PATH: unknown`

### Expectation

Container should deploy and start up correctly.

### Reproduction

Here is my k8s yaml file:

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  xxx-authorization-manager-deployment
  labels:
    app: xxx-authorization-manager
    tags.datadoghq.com/service: ""xxx-authorization-manager""
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xxx-authorization-manager
  template:
    metadata:
      labels:
        app: xxx-authorization-manager
        admission.datadoghq.com/enabled: ""true""
        tags.datadoghq.com/service: ""xxx-authorization-manager""
    spec:
      initContainers:
        - name: openfga-migrate
          image: openfga/openfga:latest
          command: [ ""migrate"" ]
          envFrom:
            - configMapRef:
                name: xxx-authorization-manager-from-env-map
            - secretRef:
                name: xxx-authorization-manager
      containers:
        - name: xxx-authorization-manager-container
          image: europe-west1-docker.pkg.dev/xxx-dev-350111/xxx/xxx-authorization-manager:1.0.0
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: xxx-authorization-manager-from-env-map 
            - secretRef:
                name: xxx-authorization-manager
          resources:
            requests:
              cpu: ""50m""
              
        - name: openfga
          image: openfga/openfga:latest
          command: [ ""run"",
                     ""--metrics-enabled"",
                     ""--datastore-metrics-enabled"",
                     ""--trace-enabled"",
                     ""--trace-sample-ratio=0.3""
          ]
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: xxx-authorization-manager-from-env-map
            - secretRef:
                name: xxx-authorization-manager
          ports:
            - containerPort: 8080
            - containerPort: 8081
```

### Store data

_No response_

### OpenFGA version

1.5.3

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

Postgres

### OpenFGA Flags

No Response

### Logs

_No response_",性能问题,前端,未指定,未指定,False,2.0
1607,Optimising high dispatch and db query counts in broad model,open,2024-05-07 11:02:57,,KlausVii,"['bug', 'performance']",10,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

We are experiencing high latency and failing Check queries in production using the auth model below. The problem seems to stem from a particular set of users who have relations with multiple tenants and projects. When a check is performed with one of these users as the object, we are seeing dispatch counts in the hundreds and db query counts over a 100. 

This is causing queries to timeout and putting undue pressure on the db.

Is there anything we could do to make the model perform better while still maintaining the same intent of the model. For example we tried to substitute `owner_tenant` and `owner_project` with `[tenant#can_view_users, project#can_view_users]`, but this made the performance even worse. 

Another option I am aware of is decreasing the `OPENFGA_RESOLVE_NODE_BREADTH_LIMIT`, but I'm afraid that will lead to an unacceptable number of false negatives.

Any ideas would be appreciated?

### Expectation

I'd expect to be able check relations in a timely manner even for objects that have many relations.

### Reproduction

1. Use the model below.
2. Create a user[0] with many `owner_tenant` and `owner_project` relations
3. Create another user[1] with one shared tenant
4. Check `user[1] can_view user[0]`
5. Observe high dispatch and db query counts 

### Store data

```yaml
model
  schema 1.1

type project
  relations
    define admin: [user] or owner
    define can_view: viewer
    define can_view_users: viewer
    define editor: [user] or admin
    define member: [user] or viewer
    define owner: [user] or super_admin from owner_tenant
    define owner_tenant: [tenant]
    define revoked: [user] or revoked from owner_tenant
    define viewer: [user] or editor

type tenant
  relations
    define admin: [user] or super_admin
    define can_view: (member or external_member) but not revoked
    define can_view_users: member but not revoked
    define editor: [user] or admin
    define external_member: [user]
    define member: [user] or editor
    define revoked: [user]
    define super_admin: [user]

type user
  relations
    define can_edit: owner
    define can_list_memberships: owner
    define can_view: owner or can_view_users from owner_tenant or can_view_users from owner_project
    define owner: [user]
    define owner_project: [project]
    define owner_tenant: [tenant]
```


### OpenFGA version

1.5.3

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

Postgres

### OpenFGA Flags

OPENFGA_CHECK_QUERY_CACHE_ENABLED, OPENFGA_CHECK_QUERY_CACHE_TTL=30s, OPENFGA_DATASTORE_MAX_OPEN_CONNS=500, OPENFGA_MAX_CONCURRENT_READS_FOR_CHECK=4000000, OPENFGA_MAX_CONCURRENT_READS_FOR_LIST_OBJECTS=4000000

### Logs

```
{
	""content"": {
		""timestamp"": ""2024-05-07T09:05:15.952Z"",
		""service"": ""openfga"",
		""message"": ""grpc_req_complete"",
		""attributes"": {
			""store_id"": ""01HAM89A85W7HT9MS4KTBN4NPT"",
			""raw_request"": {
				""store_id"": ""01HAM89A85W7HT9MS4KTBN4NPT"",
				""trace"": false,
				""tuple_key"": {
					""user"": ""user:c03fbcc5-5fd8-4711-9be6-33ae29384606"",
					""relation"": ""can_view"",
					""object"": ""user:2d65e2c0-5a9a-47b6-bb8c-236d76f50fdb""
				},
				""authorization_model_id"": ""01HQ8AZT8BPM228F1E0F5258Y2""
			},
			""level"": ""info"",
			""grpc_service"": ""openfga.v1.OpenFGAService"",
			""datastore_query_count"": 515,
			""grpc_code"": 0,
			""grpc_method"": ""Check"",
			""grpc_type"": ""unary"",
			""build"": {
				""commit"": ""ebf39989ec19c8c3d8a7646e308bcffca5748874"",
				""version"": ""v1.5.3""
			},
			""peer"": {
				""address"": ""127.0.0.1:37840""
			},
			""dispatch_count"": 658,
			""timestamp_milli"": ""1715072715952"",
			""raw_response"": {
				""allowed"": false,
				""resolution"": """"
			},
			""request_id"": ""629dbfe5-17af-4be2-a9cd-5004be4947eb"",
			""user_agent"": ""openfga-sdk js/0.3.5"",
			""timestamp"": 1715072715.9523919,
			""authorization_model_id"": ""01HQ8AZT8BPM228F1E0F5258Y2""
		}
	}
}
```",性能问题,前端,未指定,未指定,False,
1570,SQL Error: Context canceled,closed,2024-04-25 07:18:35,2024-05-01 17:09:04,ruppo-912116,['bug'],2,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

When carrying out openfga write operation for a tuple, I am getting this issue.  I am using docker to run the openfga service.

### Expectation

The write operation should have been successful. The write operations are successful most of the times because all the client configurations are correct. This issue is seen on interval i.e. in few days. It goes away on rerunning the container and this issue will reoccur after few days.

### Reproduction

I don't have any steps to reproduce...

### Store data

I cannot provide this information, sorry.

Tuple

```
{""tuple_keys"":[{""user"":""user:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"",""relation"":""owner"",""object"":""organization:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"",""condition"":null}]}
```



### OpenFGA version

 image: openfga/openfga:latest

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

OPENFGA_LOG_LEVEL: debug; OPENFGA_LOG_FORMAT: text; OPENFGA_PLAYGROUND_ENABLED: ""true"";OPENFGA_DATASTORE_MAX_OPEN_CONNS: ""100""; OPENFGA_PLAYGROUND_ENABLED: ""true""

### Logs

```
2024-04-25T06:34:02.543Z	ERROR	rpc error: code = Code(4000) desc = Internal Server Error	{""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Write"", ""grpc_type"": ""unary"", ""request_id"": ""xxxx"", ""user_agent"": ""Java-http-client/21"", ""raw_request"": {""store_id"":""xxxxxxxxx"",""writes"":{""tuple_keys"":[{""user"":""user:xxxxx"",""relation"":""owner"",""object"":""organization:xxxx"",""condition"":null}]},""deletes"":null,""authorization_model_id"":""xxxxx""}, ""raw_response"": {""code"":""internal_error"",""message"":""Internal Server Error""}, ""authorization_model_id"": ""xxxx"", ""peer.address"": ""127.0.0.1:53268"", ""store_id"": ""xxxx"", ""grpc_code"": 4000, ""internal_error"": ""sql error: context canceled""}

```
",兼容性问题,前端,未指定,未指定,True,6.0
1567,Check / ListObjects API inconsistency,open,2024-04-23 21:56:33,,miparnisari,['bug'],0,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

Check and ListObjects APIs are inconsistent with respect to the treatment of condition evaluation errors.

https://github.com/openfga/openfga/blob/b40a1e73fa5d845bb1f7f29dca84ac4b255e2e1c/assets/tests/abac_tests.yaml#L1740-L1757

### Expectation

Document the inconsistency, or fix the inconsistency.

### Reproduction

See https://github.com/openfga/openfga/pull/1566 for a test case

### Store data

_No response_

### OpenFGA version

1.5.3

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

n/a

### Logs

_No response_",性能问题,前端,未指定,未指定,False,
1524,with error code validation_error error message: modular models (schema version 1.2) are not supported,closed,2024-04-10 02:48:58,2024-05-27 18:53:42,xuanlongvts,['bug'],1,"### Checklist

- [ ] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [ ] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [ ] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [ ] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [ ] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [ ] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

when i run:  fga model write --store-id=$FGA_STORE_ID --file fga.mod

this is the tutorial: https://openfga.dev/docs/modeling/modular-models

Then, it happ:  with error code validation_error error message: modular models (schema version 1.2) are not supported

### Expectation

I think it genegrated  a dsl file

### Reproduction

https://github.com/xuanlongvts/authen-autho/tree/main/open-fga/16_modular_models

### Store data

_No response_

### OpenFGA version

latest

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

fga model write --store-id=$FGA_STORE_ID --file fga.mod

### Logs

Error: failed to write model due to WriteAuthorizationModel validation error for POST WriteAuthorizationModel with body {""code"":""validation_error"",""message"":""modular models (schema version 1.2) are not supported""}
 with error code validation_error error message: modular models (schema version 1.2) are not supported",性能问题,前端,未指定,未指定,False,47.0
1511,Ignore Conditional Relationship Tuple evaluation errors if ListObjects result is already determined,open,2024-04-03 20:24:33,,jon-whit,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

`tl;dr` - We should avoid returning an error in ListObjects for Conditional Relationship Tuple evaluation errors if we've already determined a determinate result for that object.

Given an FGA model such as:
```
type user

type org
  relations
    define viewer: [user]

type folder
  relations
    define viewer: [user]

type document
  relations
    define parent: [folder with condx, org with condy]
    define viewer: viewer from parent

condition condx(x: int) {
  x < 10
}

condition condy(y: int) {
  y > 25
}
```

- document:1#parent@folder:x, condition: condx
- document:1#parent@org:acme, condition: condy
- folder:x#viewer@user:jon
- org:acme#viewer@user:jon

`Check(document:1#viewer@user:jon, context: {""x"": 5})` will always return `{allowed: true}` through the branch of evaluation that involves `folder:x#viewer@user:jon`.

`ListObjects(document#viewer, user:jon, context: {""x"": 5})` will return an error (error code 2000). This is because we'll see the `document:1#parent@org:acme` relationship, but we won't be able to evaluate it because context parameter `y` is missing.

The OpenFGA server shouldn't return an error for the ListObjects case, because it is able to find `document:1` through the `folder:x#viewer` branch and so the other parent relationship with `org:acme` that is unresolvable should be irrelevant.

### Expectation

I expect the following:

`Check(document:1#viewer@user:jon, context: {""x"": 5})` --> `{allowed: true}` - through `folder:x#viewer`
`Check(document:1#viewer@user:jon, context: {""y"": 26})` --> `{allowed: true}` - through `org:acme#viewer`

`ListObjects(document#viewer, user:jon, context: {""x"": 5})` --> `[""document:1""]` - through `folder:x#viewer`
`ListObjects(document#viewer, user:jon, context: {""y"": 26})` --> `[""document:1""]` - through `org:acme#viewer`

### Reproduction

1. Write the authorization model
```
curl --location 'http://localhost:8080/stores/01HSNVPXRVE6MGW080RPZ4C880/authorization-models' \
--header 'Content-Type: application/json' \
--data '{
  ""schema_version"": ""1.1"",
  ""type_definitions"": [
    {
      ""type"": ""user"",
      ""relations"": {},
      ""metadata"": null
    },
    {
      ""type"": ""org"",
      ""relations"": {
        ""viewer"": {
          ""this"": {}
        }
      },
      ""metadata"": {
        ""relations"": {
          ""viewer"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              }
            ]
          }
        }
      }
    },
    {
      ""type"": ""folder"",
      ""relations"": {
        ""viewer"": {
          ""this"": {}
        }
      },
      ""metadata"": {
        ""relations"": {
          ""viewer"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              }
            ]
          }
        }
      }
    },
    {
      ""type"": ""document"",
      ""relations"": {
        ""parent"": {
          ""this"": {}
        },
        ""viewer"": {
          ""tupleToUserset"": {
            ""computedUserset"": {
              ""relation"": ""viewer""
            },
            ""tupleset"": {
              ""relation"": ""parent""
            }
          }
        }
      },
      ""metadata"": {
        ""relations"": {
          ""parent"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""folder"",
                ""condition"": ""condx""
              },
              {
                ""type"": ""org"",
                ""condition"": ""condy""
              }
            ]
          },
          ""viewer"": {
            ""directly_related_user_types"": []
          }
        }
      }
    }
  ],
  ""conditions"": {
    ""condx"": {
      ""name"": ""condx"",
      ""expression"": ""x < 10"",
      ""parameters"": {
        ""x"": {
          ""type_name"": ""TYPE_NAME_INT""
        }
      }
    },
    ""condy"": {
      ""name"": ""condy"",
      ""expression"": ""y > 25"",
      ""parameters"": {
        ""y"": {
          ""type_name"": ""TYPE_NAME_INT""
        }
      }
    }
  }
}'
```

2. Write the tuples
```
curl --location 'http://localhost:8080/stores/01HSNVPXRVE6MGW080RPZ4C880/write' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img2d2J4LXVEckxLOVU5TTBPby1rNiJ9.eyJodHRwczovL2ZnYS5kZXYvY2xhaW1zL3N0b3JlX3RpZXIiOiJmcmVlIiwiaHR0cHM6Ly9mZ2EuZGV2L2NsYWltcy9jdXN0b21lcl9pZCI6IjAxR1YxVERaSkFGVjNCRzEzWU1aQ1JKUUJNIiwiaHR0cHM6Ly9mZ2EuZGV2L2NsYWltcy9zdG9yZV9pZCI6IjAxR1YxVEUxMDhOOEVaSjBTUDFOWDBDNDJEIiwiaXNzIjoiaHR0cHM6Ly9zYW5kY2FzdGxlLWRldi51cy5hdXRoMC5jb20vIiwic3ViIjoicndYUGxocHBzOE1rZjZmNmJQVkRnWEJTSVVNU0dyVlZAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vYXBpLnN0YWdpbmcuZmdhLmRldi8iLCJpYXQiOjE2NzgzMjAzMjQsImV4cCI6MTY3ODQwNjcyNCwiYXpwIjoicndYUGxocHBzOE1rZjZmNmJQVkRnWEJTSVVNU0dyVlYiLCJzY29wZSI6InJlYWQ6dHVwbGVzIHdyaXRlOnR1cGxlcyBjaGVjazp0dXBsZXMgZXhwYW5kOnR1cGxlcyByZWFkOmF1dGhvcml6YXRpb25fbW9kZWxzIHdyaXRlOmF1dGhvcml6YXRpb25fbW9kZWxzIHJlYWQ6YXNzZXJ0aW9ucyB3cml0ZTphc3NlcnRpb25zIHJlYWQ6Y2hhbmdlcyBsaXN0Om9iamVjdHMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.q2w4oNPrlZrv8ms29U3vPK0ZCZOOcbMOuSBeoC5MiD_bHN_RG2Xf4wuw21aCbF0ZOWqyfRTzEAhBxtfHjiIX5GEvIUEHdFPy-EE03LssQx11q1l3mKvef_ud1JpTqRVKlhaxGeURAwb8Y4ru0ahs0S2xW6hTjvb19NEsrDOMJkAixwru-Qy-UkoD9GYPKW9uWQ7YSx1TidboETdTs9bXfBtL5JPIGd6dpHNGOFGftFUw-dx0c7ntXWiKJEAH7CYoI1rmxtgnx7brKdpLTpFf0L3HQoIgy8xc6JteZxxOK51BstzL25imYTak9iPDnOVMGCeFRCvRU0aWLNBp5AasAw' \
--data '{
    ""writes"": {
      ""tuple_keys"": [
          {
            ""object"": ""document:1"",
            ""relation"": ""parent"",
            ""user"": ""folder:x"",
            ""condition"": {
                ""name"": ""condx""
            }
          },
          {
            ""object"": ""document:1"",
            ""relation"": ""parent"",
            ""user"": ""org:acme"",
            ""condition"": {
                ""name"": ""condy""
            }
          },
          {
            ""object"": ""folder:x"",
            ""relation"": ""viewer"",
            ""user"": ""user:jon""
          },
          {
            ""object"": ""org:acme"",
            ""relation"": ""viewer"",
            ""user"": ""user:jon""
          }
      ]
    }
}'
```

3. Call ListObjects
```
curl --location 'http://localhost:8080/stores/01HSNVPXRVE6MGW080RPZ4C880/list-objects' \
--header 'Content-Type: application/json' \
--data '{
    ""type"": ""document"",
    ""relation"": ""viewer"",
    ""user"": ""user:jon"",
    ""context"": {
        ""x"": 5
    }
}'
```

I expect step #3 above to return `[""document:1""]` not an error. Similarly,

### Store data

_No response_

### OpenFGA version

v1.5.1

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

./openfga run

### Logs

_No response_",性能问题,前端,未指定,未指定,False,
1509,OpenFGA Migrate Job Fails with Unescaped URI,open,2024-04-03 05:57:33,,joshmorningstar,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

When trying to deploy OpenFGA with Postgres via Kubernetes we ran into a “userinfo” parsing error. We are providing the Job the credentials via external secrets as outlined in the helm template conditional. The final manifest produces the following URI (redacted to remove all production references): `”uri”: “postgres://postgres:<password-containing-unescaped-characters>@host:port/database”`. The password contains hyphens, curly brackets, and parenthesis; looking into url.parse() in Golang it looks like it is expecting escaped characters. 

```
case ""postgres"":
	driver = ""pgx""
	migrationsPath = assets.PostgresMigrationDir

	// Parse the database uri with url.Parse() and update username/password, if set via flags
	dbURI, err := url.Parse(uri)
```

### Expectation

I would expect this to sanitize the URI string on the backend and not expect the URI to be escaped. For instance, the following URI should be valid:

`postgres://postgres:JdnKsnd83$;):”-&:jaj]^]*}hs/ns\l@example.com:5432/postgres`

Due to the way `url.parse()` currently handles this, this string would fail due to unescaped non-alpha-numeric characters being present in the password.

### Reproduction

1. Configure OpenFGA in Kubernetes
1. Configure OpenFGA to use Postgres
1. Configure Postgres to use a URI
1. Configure the Postgres URI to contain unescaped non-alpha-numeric characters

### Store data
N/A

### OpenFGA version

v1.5.1

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

Postgres

### OpenFGA Flags

None

### Logs

_No response_",兼容性问题,前端,未指定,未指定,False,
1504,grpc-health-probe in Dockerfile and in the published docker image are different,closed,2024-04-02 21:25:53,2024-04-03 14:22:13,rhamzeh,['bug'],0,"### Discussed in https://github.com/orgs/openfga/discussions/290

<div type='discussions-op-text'>

<sup>Originally posted by **jakereps** April  2, 2024</sup>
Hi 👋 We're currently investigating some issues related to vulnerability scans, and it led me to discover that the docker container for openfga v1.5.1 does not match the source code in Github for v1.5.1. The Dockerfile on v1.5.1 specifies to use the grpc health probe v0.4.25 (fixed version, with no CVEs), but in reality the v1.5.1 openfga image still contains v0.4.24 (triggers CVE scanners).

**Expectation**: 

The v1.5.1 Dockerfile specifies v0.4.25, https://github.com/openfga/openfga/blob/v1.5.1/Dockerfile#L1

```
$ docker run -ti --rm ghcr.io/grpc-ecosystem/grpc-health-probe:v0.4.25@sha256:6cc1dc0af87b35db2ca5fa9b1fbbc389e7570d8ad90ff84a54b6f7ac35cdb423 -addr :8080 -connect-timeout 1h
$ docker cp 81b6492ff918:/ko-app/grpc-health-probe .
Successfully copied 11.8MB to /Users/me/.
$ go version -m grpc-health-probe
grpc-health-probe: go1.22.1
	path	github.com/grpc-ecosystem/grpc-health-probe
	mod	github.com/grpc-ecosystem/grpc-health-probe	(devel)
	dep	github.com/go-jose/go-jose/v3	v3.0.3	h1:fFKWeig/irsp7XD2zBxvnmA/XaRWp5V3CBsZXJF7G7k=
	dep	github.com/golang/protobuf	v1.5.4	h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=
	dep	github.com/spiffe/go-spiffe/v2	v2.1.7	h1:VUkM1yIyg/x8X7u1uXqSRVRCdMdfRIEdFBzpqoeASGk=
	dep	github.com/zeebo/errs	v1.3.0	h1:hmiaKqgYZzcVgRL1Vkc1Mn2914BbzB0IBxs+ebeutGs=
	dep	golang.org/x/crypto	v0.21.0	h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=
	dep	golang.org/x/net	v0.22.0	h1:9sGLhx7iRIHEiX0oAJ3MRZMUCElJgy7Br1nO+AMN3Tc=
	dep	golang.org/x/sync	v0.6.0	h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=
	dep	golang.org/x/sys	v0.18.0	h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=
	dep	golang.org/x/text	v0.14.0	h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=
	dep	google.golang.org/genproto/googleapis/rpc	v0.0.0-20240308144416-29370a3891b7	h1:em/y72n4XlYRtayY/cVj6pnVzHa//BDA1BdoO+z9mdE=
	dep	google.golang.org/grpc	v1.62.1	h1:B4n+nfKzOICUXMgyrNd19h/I9oH0L1pizfk1d4zSgTk=
	dep	google.golang.org/protobuf	v1.33.0	h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=
	build	-buildmode=exe
	build	-compiler=gc
	build	-ldflags=""-w -X main.versionTag=${GITHUB_REF_NAME#v}""
	build	-tags=netgo
	build	DefaultGODEBUG=httplaxcontentlength=1,httpmuxgo121=1,panicnil=1,tls10server=1,tlsrsakex=1,tlsunsafeekm=1
	build	CGO_ENABLED=0
	build	GOARCH=amd64
	build	GOOS=linux
	build	GOAMD64=v1
	build	vcs=git
	build	vcs.revision=2c814fcadd44e38afd1755a2b8c036d3576db502
	build	vcs.time=2024-03-10T03:23:19Z
	build	vcs.modified=false
```

`vcs.revision=2c814fcadd44e38afd1755a2b8c036d3576db502` is v0.4.25 of the health probe as expected: https://github.com/search?q=repo%3Agrpc-ecosystem%2Fgrpc-health-probe+2c814fcadd44e38afd1755a2b8c036d3576db502&type=commits

**Reality**
```
 ~ docker ps
CONTAINER ID   IMAGE                    COMMAND          CREATED         STATUS         PORTS     NAMES
b0da865fefad   openfga/openfga:v1.5.1   ""/openfga run""   3 seconds ago   Up 3 seconds             quizzical_saha
 ~ docker exec -it b0da865fefad /usr/local/bin/grpc_health_probe --version
${GITHUB_REF_NAME#v}; commit 645566fc4b06a8d51552166a34717ce7090fddf7
 ~ docker cp b0da865fefad:/usr/local/bin/grpc_health_probe .
Successfully copied 11.5MB to /Users/me/.
 ~ go version -m grpc_health_probe
grpc_health_probe: go1.21.5
	path	github.com/grpc-ecosystem/grpc-health-probe
	mod	github.com/grpc-ecosystem/grpc-health-probe	(devel)
	dep	github.com/go-jose/go-jose/v3	v3.0.1	h1:pWmKFVtt+Jl0vBZTIpz/eAKwsm6LkIxDVVbFHKkchhA=
	dep	github.com/golang/protobuf	v1.5.3	h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=
	dep	github.com/spiffe/go-spiffe/v2	v2.1.6	h1:4SdizuQieFyL9eNU+SPiCArH4kynzaKOOj0VvM8R7Xo=
	dep	github.com/zeebo/errs	v1.3.0	h1:hmiaKqgYZzcVgRL1Vkc1Mn2914BbzB0IBxs+ebeutGs=
	dep	golang.org/x/crypto	v0.17.0	h1:r8bRNjWL3GshPW3gkd+RpvzWrZAwPS49OmTGZ/uhM4k=
	dep	golang.org/x/net	v0.19.0	h1:zTwKpTd2XuCqf8huc7Fo2iSy+4RHPd10s4KzeTnVr1c=
	dep	golang.org/x/sync	v0.5.0	h1:60k92dhOjHxJkrqnwsfl8KuaHbn/5dl0lUPUklKo3qE=
	dep	golang.org/x/sys	v0.15.0	h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=
	dep	golang.org/x/text	v0.14.0	h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=
	dep	google.golang.org/genproto/googleapis/rpc	v0.0.0-20231212172506-995d672761c0	h1:/jFB8jK5R3Sq3i/lmeZO0cATSzFfZaJq1J2Euan3XKU=
	dep	google.golang.org/grpc	v1.60.1	h1:26+wFr+cNqSGFcOXcabYC0lUVJVRa2Sb2ortSK7VrEU=
	dep	google.golang.org/protobuf	v1.31.0	h1:g0LDEJHgrBl9N9r17Ru3sqWhkIx2NB67okBHPwC7hs8=
	build	-buildmode=exe
	build	-compiler=gc
	build	-ldflags=""-w -X main.versionTag=${GITHUB_REF_NAME#v}""
	build	-tags=netgo
	build	DefaultGODEBUG=panicnil=1
	build	CGO_ENABLED=0
	build	GOARCH=amd64
	build	GOOS=linux
	build	GOAMD64=v1
	build	vcs=git
	build	vcs.revision=645566fc4b06a8d51552166a34717ce7090fddf7
	build	vcs.time=2023-12-18T23:27:55Z
	build	vcs.modified=false
```

`vcs.revision=645566fc4b06a8d51552166a34717ce7090fddf7` is still v0.4.24 of the health probe, and what is included in v1.5.1 of openfga's Docker image: https://github.com/search?q=repo%3Agrpc-ecosystem%2Fgrpc-health-probe+645566fc4b06a8d51552166a34717ce7090fddf7&type=commits

This slightly worries me that there may even be code changes missing. What does the process for release -> docker image updates look like and should something like this be expected, or should they always mirror each other for each stable version cut?</div>",性能问题,前端,未指定,未指定,False,0.0
1498,FGA model with one type defining 0 relations no longer passes validation,closed,2024-04-01 16:32:28,2024-04-02 17:48:32,jon-whit,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

On `main` right now, with the following FGA model:
```
model
  schema 1.1

type user

type document
  relations
    define viewer: [user]
```

If I try to write this model with:
```
curl --location 'http://localhost:8080/stores/01HSNVPXRVE6MGW080RPZ4C880/authorization-models' \
--header 'Content-Type: application/json' \
--data '{
  ""schema_version"": ""1.1"",
  ""type_definitions"": [
    {
      ""type"": ""user"",
      ""relations"": {},
      ""metadata"": null
    },
    {
      ""type"": ""document"",
      ""relations"": {
        ""viewer"": {
          ""this"": {}
        }
      },
      ""metadata"": {
        ""relations"": {
          ""viewer"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              }
            ]
          }
        }
      }
    }
  ]
}'
```
I get the following error:
**status_code:** 400 (Bad Request)
```
{
    ""code"": ""relations_too_few_items"",
    ""message"": ""invalid TypeDefinition.Relations: value must contain at least 1 pair(s)""
}
```

I tested the same workflow above with the most recent release `v1.5.1` and the issue does not exist, so a regression has been introduced in `main` specifically.

### Expectation

I expected no error and the model to be written successfully (status_code: 200).

### Reproduction

```
curl --location 'http://localhost:8080/stores/01HSNVPXRVE6MGW080RPZ4C880/authorization-models' \
--header 'Content-Type: application/json' \
--data '{
  ""schema_version"": ""1.1"",
  ""type_definitions"": [
    {
      ""type"": ""user"",
      ""relations"": {},
      ""metadata"": null
    },
    {
      ""type"": ""document"",
      ""relations"": {
        ""viewer"": {
          ""this"": {}
        }
      },
      ""metadata"": {
        ""relations"": {
          ""viewer"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              }
            ]
          }
        }
      }
    }
  ]
}'
```

returns **status_code:** 400 (Bad Request)
```
{
    ""code"": ""relations_too_few_items"",
    ""message"": ""invalid TypeDefinition.Relations: value must contain at least 1 pair(s)""
}
```

### Store data

_No response_

### OpenFGA version

`main`

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

./openfga run

### Logs

_No response_",性能问题,前端,未指定,未指定,False,1.0
1475,"Authorization model returning ""invalid: no entrypoints defined"" error",closed,2024-03-20 16:41:59,2024-09-24 18:10:32,tylernix,['bug'],2,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

A valid model returns an error `error running tests due to rpc error: code = Code(2056) desc = the definition of relation 'can_purchase' in object type 'card' is invalid: no entrypoints defined`

The DSL seems to parse correctly (CLI transforms it and VS Code shows no validation errors), but the server still returns an error.

### Expectation

Tests run successfully on this model. 

### Reproduction

Run `> fga model test --tests stripe.fga.yaml` in console



### Store data

**stripe.fga.yaml model**
```
model: |
  model
    schema 1.1

  # Stripe Core Module
  type user

  type account
    relations
      define owner: [user]
      define admin: [user] or owner
      define iam_admin: [user] or admin
      define developer: [user] or admin
      define transfer_analyst: [user] or admin
      define view_only: [user] or admin
      define transfer_analyst_in_test_mode: transfer_analyst but not transfer_analyst from test_mode # intermediate relations, just used for evaluating other relations
      
      define card: [card] # dual-writes relationships, when you need to traverse relations on two types both ways (starting at card up or account down)
      define cardholder: cardholder from card 
      define cardholder_in_test_mode: cardholder but not cardholder from test_mode    

      define test_mode: [account]

      define can_close_account: owner
      define can_change_owner: owner
      define can_invite: iam_admin
      define can_add_bank_account: admin but not admin from test_mode # exclusion operator
      define can_delete_default_bank_account: owner

  type bank_account
    relations
      define account: [account]
      define can_delete_bank_account: admin from account
      define can_view: admin from account
      define can_transfer_balance: transfer_analyst from account but not transfer_analyst_in_test_mode from account

  # Stripe Payments Module
  type payment
  type subscription
  type invoice

  # Stripe Issuing Module
  type card
    relations
      define account: [account]
      define cardholder: [user]
      define digital_wallet: [digital_wallet]
      define active: [card]
      define can_purchase: cardholder from active but not cardholder_in_test_mode from account
      define can_view_transactions: cardholder or admin from account
      define spending_limit_policy: [card#cardholder with spending_limit]
  
  type transaction 
    relations
      define card: [card]
      define can_view: can_view_transactions from card
```

### OpenFGA version

just testing model

### How are you running OpenFGA?

In Docker

### What datastore are you using?

In-Memory

### OpenFGA Flags

n/a

### Logs

_No response_",性能问题,前端,未指定,未指定,False,188.0
1434,authn oidc missing in openfga/openfga:v1.5,closed,2024-03-09 15:15:19,2024-03-10 06:24:10,tafaust,['bug'],3,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

The error message I received:
```
panic: the playground only supports authn methods 'none' and 'preshared'

goroutine 1 [running]:
github.com/openfga/openfga/cmd/run.run(0xc00009b600?, {0x1e111c0?, 0x4?, 0x1287dbd?})
        /home/runner/work/openfga/openfga/cmd/run/run.go:271 +0x10e
github.com/spf13/cobra.(*Command).execute(0xc0002aac00, {0x1e111c0, 0x0, 0x0})
        /home/runner/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:987 +0xaa3
github.com/spf13/cobra.(*Command).ExecuteC(0xc0002aa900)
        /home/runner/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:1115 +0x3ff
github.com/spf13/cobra.(*Command).Execute(0xc0002aa900?)
        /home/runner/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:1039 +0x13
main.main()
        /home/runner/work/openfga/openfga/cmd/openfga/main.go:28 +0x12f
```

### Expectation

I expect no error message

### Reproduction

I followed https://openfga.dev/docs/getting-started/setup-openfga/docker#oidc-authentication without TLS. I have OpenFGA running behind a traefik3 reverse proxy.

### Store data

_No response_

### OpenFGA version

v1.5

### How are you running OpenFGA?

In Docker

### What datastore are you using?

Postgres

### OpenFGA Flags

none

### Logs

See the description.",兼容性问题,前端,未指定,未指定,False,0.0
1431,Authorization Model not found,closed,2024-03-08 12:27:34,2024-03-08 15:58:48,vfarcic,['bug'],5,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

It seems that writing tuples randomly fails with the `Authorization Model not found` message.

### Expectation

It always works.

### Reproduction

Take a look at the output of executing the same command 3 times.

```sh
$ fga tuple write --store-id $FGA_STORE_ID \
    --model-id $FGA_MODEL_ID user:vfarcic owner document:Z

Error: failed to write tuple: Write validation error for POST Write with body {""code"":""authorization_model_not_found"",""message"":""Authorization Model '01HREZ3T0XGGGBMSW8S5HJP90A' not found""}
 with error code authorization_model_not_found error message: Authorization Model '01HREZ3T0XGGGBMSW8S5HJP90A' not found

$ fga tuple write --store-id $FGA_STORE_ID \
    --model-id $FGA_MODEL_ID user:vfarcic owner document:Z

Error: failed to write tuple: Write validation error for POST Write with body {""code"":""authorization_model_not_found"",""message"":""Authorization Model '01HREZ3T0XGGGBMSW8S5HJP90A' not found""}
 with error code authorization_model_not_found error message: Authorization Model '01HREZ3T0XGGGBMSW8S5HJP90A' not found

$ fga tuple write --store-id $FGA_STORE_ID \
    --model-id $FGA_MODEL_ID user:vfarcic owner document:Z

{
  ""successful"": [
    {
      ""object"":""document:Z"",
      ""relation"":""owner"",
      ""user"":""user:vfarcic""
    }
  ]
}
```

### Store data

```json
{
    ""schema_version"": ""1.1"",
    ""type_definitions"": [
        { ""type"": ""user"" },
        {
            ""type"": ""document"",
            ""relations"": {
                ""reader"": { ""this"": {} },
                ""writer"": { ""this"": {} },
                ""owner"": { ""this"": {} }
            },
            ""metadata"": {
                ""relations"": {
                    ""reader"": { ""directly_related_user_types"": [ { ""type"": ""user"" } ] },
                    ""writer"": { ""directly_related_user_types"": [ { ""type"": ""user"" } ] },
                    ""owner"": { ""directly_related_user_types"": [ { ""type"": ""user"" } ] }
                }
            }
        }
    ]
}
```


### OpenFGA version

fga version v`0.2.6` (commit: `dc4e39648ec5b626fc5c44c4f9f77a1e15806ab7`, date: `2024-02-28T12:47:25Z`)

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

In-Memory

### OpenFGA Flags

No

### Logs

_No response_",性能问题,前端,未指定,未指定,False,0.0
1419,HandleTupleValidateError throw 500 errors when condition is invalid ,closed,2024-03-04 19:46:58,2024-03-04 21:22:25,adriantam,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [OpenFGA Community](https://openfga.dev/community) and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

OpenFGA server throws ""Internal Server Error"" when condition is invalid

### Expectation

Should throw HTTP 400 error instead

### Reproduction

1. Run check with the model / data below and see 500 error thrown with the following error message



### Store data

```yaml
model_file: |
model
  schema 1.1

type user

type group
  relations
    define member: [user]
    define can_access: [user with less_than_hundred]
    
condition less_than_hundred(x: int) {
  x < 100
}


tuples:
  - user: user:test
    relation: can_access
    object: group:8
    context:
       ""x"": ""b""

```


### OpenFGA version

1.5.0

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

N/A

### Logs

2024-03-04T14:38:41.639-0500	ERROR	rpc error: code = Code(4000) desc = Internal Server Error	{""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""request_id"": ""6e1745c8-eb89-47db-8b1c-ae11c1aec3e9"", ""user_agent"": ""PostmanRuntime/7.36.3"", ""raw_request"": {""store_id"":""01HR5EK73WXEHTHPJKV7PSCK0W"",""tuple_key"":{""user"":""user:test"",""relation"":""can_access"",""object"":""group:8""},""contextual_tuples"":{""tuple_keys"":[{""user"":""user:test"",""relation"":""can_access"",""object"":""group:8"",""condition"":{""name"":""less_than_hundred"",""context"":{""x"":""b""}}}]},""authorization_model_id"":"""",""trace"":false,""context"":null}, ""raw_response"": {""code"":""internal_error"",""message"":""Internal Server Error""}, ""peer.address"": ""127.0.0.1:61663"", ""store_id"": ""01HR5EK73WXEHTHPJKV7PSCK0W"", ""authorization_model_id"": ""01HR5ESB7EK9ZCSTCT2TNZ86T8"", ""grpc_code"": 4000, ""internal_error"": ""Invalid tuple 'group:8#can_access@user:test (condition name:\""less_than_hundred\"" context:{fields:{key:\""x\"" value:{string_value:\""b\""}}})'. Reason: parameter type error on condition 'less_than_hundred' - failed to convert context parameter 'x': expected a int64 value, but found invalid string value 'b'""}
",性能问题,前端,未指定,未指定,False,0.0
1399,MySQL & Postgres: treat zero datetimes as nil,open,2024-02-26 19:14:06,,miparnisari,"['bug', 'Stale', 'storage-adapter']",1,"### Checklist

- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Describe the problem you'd like to have solved

If the strict mode isn't set, or if NO_ZERO_IN_DATE is set, ListStores and other APIs silently stop working (as in, they don't return data).

Two issues reported about this: 

- https://github.com/openfga/openfga/issues/1255
- https://github.com/openfga/openfga/issues/449


### Describe the ideal solution

Let's work on treating the zero value for `time.Time` as nullable/nil so that API responses such as the response for the [ListStores API](https://openfga.dev/api/service#/Stores/ListStores) omits the `updated_at` or `deleted_at fields` if it is nil or the zero value.

This task includes writing tests (TODO where?)

### Alternatives and current workarounds

_No response_

### Additional context

_No response_",崩溃,后端,未指定,未指定,False,
1386,Suboptimal performance if model ID is not specified in Check and ListObjects APIs,closed,2024-02-23 17:02:22,2024-02-26 23:59:51,adriantam,"['bug', 'performance']",0,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [Discord](https://discord.gg/8naAwJfWN6) community and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

When auth model ID is not specified, it requires 2 DB lookup instead of 1 to fetch the latest.

Split from https://github.com/openfga/openfga/issues/1289

### Expectation

1 DB lookup should be sufficient to fetch the latest model.

### Reproduction

Call Check API and not specified auth model ID, you will observe that two DB lookups are needed in typesystem resolver

### Store data

```yaml
model_file: |
  model
    schema 1.1
  type user
  type organization
    relations
      define member: [user]
tuples:
  - user: user:anne
    relation: member
    object: organization:openfga
  - user: user:bob
    relation: member
    object: organization:openfga
tests: # remove this if not a bug in Check or ListObjects API
  - name: test-1
    check:
      - user: user:anne
        object: organization:openfga
        assertions:
          member: true
    list_objects:
      - user: user:anne
        type: organization
        assertions:
          member:
            - organization:openfga
```


### OpenFGA version

1.4.3

### How are you running OpenFGA?

As a binary

### What datastore are you using?

MySQL

### OpenFGA Flags

N/A

### Logs

_No response_",性能问题,前端,未指定,未指定,False,3.0
1385,`no entrypoints defined` error when saving a valid model,closed,2024-02-23 13:31:25,2024-03-07 19:58:49,aaguiarz,['bug'],1,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [Discord](https://discord.gg/8naAwJfWN6) community and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

When I try to save a valid model I get 

`""error"":""the definition of relation 'can_enable_logging' in object type 'entity' is invalid: no entrypoints defined""`

If I delete the `can_enable_logging` relation or if I remove the `but not` from the `has_access_to_logging` relation 


### Expectation

It should not return an error.



### Reproduction

1. Try to save the model  or run `fga model validate --file model.fga`
2. It returns
```
{
  ""is_valid"":false,
  ""error"":""the definition of relation 'can_enable_logging' in object type 'entity' is invalid: no entrypoints defined""
}
```

### Store data

```
model
  schema 1.1

type user

type entity
  relations
    define member : [user] 

    define contextual_user: [user]
    define contextual_member : member and contextual_user

    define has_logging_product: [entity]
    define block_logging : [user] and contextual_user

    # If you don't include the ""But not"", the model validates
    define has_access_to_logging : contextual_member from has_logging_product but not block_logging from has_logging_product

    # If you comment this line, the model validates
    define can_enable_logging : has_access_to_logging

```

### OpenFGA version

Latest version of the CLI

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

no

### Logs

_No response_",性能问题,前端,未指定,未指定,False,13.0
1338,`but not` causes disproportionate latency on both Check and ListObjects,open,2024-02-05 11:50:38,,KlausVii,"['bug', 'performance', 'Stale']",3,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [Discord](https://discord.gg/8naAwJfWN6) community and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

I am reopening this [old issue](https://github.com/openfga/openfga/issues/942), as it we are still suffering from bad performance with using `but not`. So much so that we have just removed it from our models.

Doing a single check went from requiring 1-3 db queries to 10+ and avg latency of ~10ms to ~80ms. Large listObjects calls went from ~100-200ms to timing out at around 3s.


### Expectation

I'd expect `but not` to be a viable thing to use when modelling with minimal performance hits.

### Reproduction

Create a model with `but not` exclusions, watch performance suffer.

### Store data

A simplified sample of our model
```
model
  schema 1.1

type project
  relations
    ...
    define can_edit: editor
    define can_view: viewer
    
    define editor: [user] but not revoked
    define viewer: ([user] or editor) but not revoked
    define revoked: [user] or revoked from owner_tenant
    
    define owner_tenant: [tenant]


type tenant
  relations
    ... 
    define revoked: [user]

type user
  relations
   ...
```


### OpenFGA version

1.4.2

### How are you running OpenFGA?

In Kubernetes

### What datastore are you using?

Postgres

### OpenFGA Flags

OPENFGA_CHECK_QUERY_CACHE_ENABLED, OPENFGA_DATASTORE_MAX_OPEN_CONNS=240, OPENFGA_MAX_CONCURRENT_READS_FOR_CHECK=120, OPENFGA_MAX_CONCURRENT_READS_FOR_LIST_OBJECTS=120

### Logs

_No response_",性能问题,前端,未指定,未指定,False,
1296,GoRoutine leak for list objects when there are more than 1000 items to return,closed,2024-01-08 18:53:04,2024-01-09 21:19:46,adriantam,['bug'],0,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [Discord](https://discord.gg/8naAwJfWN6) community and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

PProf shows that there are goroutine leaks in ListObjects when the number of items > max items for list objects

### Expectation

No goroutine leaks

### Reproduction

1. Set profiler enabled by specifying `--profiler-enabled`.  It does not matter what the datastore is
2. Create new model 
```
model
  schema 1.1

type user

type group
  relations
    define member: [user]
```
3. Adding tuples `group:1#member@user:A` to `group:10000#member@user:A`
4. Call list objects with `group#member@user:A`
5. Inspect profiler http://localhost:3001/debug/pprof/goroutine?debug=1 .  See that the number of goroutine increases per list object call.

### Store data

```yaml
model_file: |
model
  schema 1.1

type user

type group
  relations
    define member: [user]

tuples:
  - user: user:A
    relation: member
    object: group:1
...
  - user: user:A
    relation: member
    object: group:10000
tests: # remove this if not a bug in Check or ListObjects API
  - name: test-1
    list_objects:
      - user: user:A
        type: group
        relation: member
```


### OpenFGA version

1.4.1

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

--profiler-enabled

### Logs

_No response_",性能问题,前端,未指定,未指定,False,1.0
1286,"If two conditions share the same parameter name but with different types, you get evaluation errors when calling Check or ListObjects",open,2024-01-04 16:59:04,,miparnisari,"['bug', 'Stale']",2,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [Discord](https://discord.gg/8naAwJfWN6) community and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

We should forbid two or more conditions in a model from sharing the same parameter name.

### Expectation

We should forbid conditions that share the same parameter names. I.e. update this code https://github.com/openfga/openfga/blob/ee1cdd605b7d975ba3331889f14065b27c9cc1aa/pkg/typesystem/typesystem.go#L1127

### Reproduction

If two conditions share the same parameter name and type, issuing a Check or ListObjects call with `context {x = 1}` (for example) will be ambiguous, since `x` can have different meaning for each condition. E.g.

```yaml
model_file: |
  model
    schema 1.1
  type user
  type document
    relations
      define viewer: [user with cond1, user with cond2]

condition cond1(x: string) {
  x == ""19/2/2024"" // here ""x"" means a date
}
condition cond2(x: string) {
   x == ""maria"" // here ""x"" means a name
}
```

If two conditions share the same parameter name but with different types, you get type cast errors when calling Check or ListObjects

```yaml
model_file: |
  model
    schema 1.1
  type user
  type document
    relations
      define viewer: [user with cond1, user with cond2]

condition cond1(x: int) {
  x > 100
}
condition cond2(x: string) {
   x == ""hello""
}
```

For example if you call Check with `context: ""hello""`, you can get
```
{
   ""code"": ""validation_error"",
   ""message"": ""1 error occurred:\n\t* failed to evaluate relationship condition: parameter type error on condition 'cond1' - failed to convert context parameter 'x': expected type value 'int64', but found 'string'""
}
```

or if you call Check with `context: 1`, you can get

```
{
   ""code"": ""validation_error"",
   ""message"": ""1 error occurred:\n\t* failed to evaluate relationship condition: parameter type error on condition 'cond' - failed to convert context parameter 'x': expected type value 'string', but found 'int64'""
}
```

### Store data

_No response_

### OpenFGA version

1.4.0

### How are you running OpenFGA?

As a binary

### What datastore are you using?

In-Memory

### OpenFGA Flags

none

### Logs

_No response_",性能问题,前端,未指定,未指定,False,
1283,ListObjects returns error even if there are `max_results` available,open,2024-01-04 00:44:25,,miparnisari,"['bug', 'Stale']",2,"### Checklist

- [X] I have looked into the [README](https://github.com/openfga/openfga/blob/main/README.md) and have not found a suitable solution or answer.
- [X] I have looked into the [documentation](https://openfga.dev/docs) and have not found a suitable solution or answer.
- [X] I have searched the [issues](https://github.com/openfga/openfga/issues) and have not found a suitable solution or answer.
- [X] I have upgraded to the [latest version](https://github.com/openfga/openfga/releases/latest) of OpenFGA and the issue still persists.
- [X] I have searched the [Discord](https://discord.gg/8naAwJfWN6) community and have not found a suitable solution or answer.
- [X] I agree to the terms within the [OpenFGA Code of Conduct](https://github.com/openfga/.github/blob/main/CODE_OF_CONDUCT.md).

### Description

ListObjects returns error even if there are `max_results` available and it encountered an error evaluating a tuple's condition.

### Expectation

For regular ListObjects API, if there are `max_results` objects available to be returned, they should be returned, even if evaluating `object[max_results+1]` resulted in an error

For streaming ListObjects API, expected behavior is not clear. Should it return all the objects it found and then the error?

### Reproduction

1. Run server with `./openfga run --listObjects-max-results 1`
2. Create a store
```
curl --location 'localhost:8080/stores' \
--header 'Content-Type: application/json' \
--data '{""name"":""issue-1283""}'
```
3. Write model
```
curl --location 'localhost:8080/stores/01HR7V0DFGHMEVJD232SMN0MK1/authorization-models' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data '{""schema_version"":""1.1"",""type_definitions"":[{""type"":""user"",""relations"":{},""metadata"":null},{""type"":""folder"",""relations"":{""viewer"":{""this"":{}}},""metadata"":{""relations"":{""viewer"":{""directly_related_user_types"":[{""type"":""user"",""condition"":""""}],""module"":"""",""source_info"":null}},""module"":"""",""source_info"":null}},{""type"":""document"",""relations"":{""parent"":{""this"":{}},""viewer"":{""union"":{""child"":[{""this"":{}},{""tupleToUserset"":{""tupleset"":{""object"":"""",""relation"":""parent""},""computedUserset"":{""object"":"""",""relation"":""viewer""}}}]}}},""metadata"":{""relations"":{""parent"":{""directly_related_user_types"":[{""type"":""folder"",""condition"":""""}],""module"":"""",""source_info"":null},""viewer"":{""directly_related_user_types"":[{""type"":""user"",""condition"":""condX""}],""module"":"""",""source_info"":null}},""module"":"""",""source_info"":null}}],""conditions"":{""condX"":{""name"":""condX"",""expression"":""x > 100"",""parameters"":{""x"":{""type_name"":""TYPE_NAME_INT"",""generic_types"":[]}},""metadata"":null}}}'
```
4. Write Tuples
```
curl --location 'localhost:8080/stores/01HR7V0DFGHMEVJD232SMN0MK1/write' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data '{
    ""writes"": {
        ""tuple_keys"": [
            {
                ""object"": ""folder:x"",
                ""relation"": ""viewer"",
                ""user"": ""user:jon""
            },
            {
                ""object"": ""document:1"",
                ""relation"": ""parent"",
                ""user"": ""folder:x""
            },
            {
                ""object"": ""document:2"",
                ""relation"": ""viewer"",
                ""user"": ""user:jon"",
                ""condition"": {
                    ""name"": ""condX""
                }
            }
        ]
    }
}'
```

5. Call ListObjects

```
curl --location 'localhost:8080/stores/01HR7V0DFGHMEVJD232SMN0MK1/list-objects' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data '{
    ""type"": ""document"",
    ""relation"": ""viewer"",
    ""user"": ""user:jon""
}'
```

Every now and then you will get the correct answer: `{    ""objects"": [  ""document:1""   ] }`

However, most of the times you will get an error:

```
{
    ""code"": ""validation_error"",
    ""message"": ""1 error occurred:\n\t* failed to evaluate relationship condition: 'condX' - tuple 'document:2#viewer@user:jon' is missing context parameters '[x]'""
}
```

### Store data

```
model
  schema 1.1

type user

type folder
  relations
    define viewer: [user]

type document
  relations
    define parent: [folder]
    define viewer: [user with condX] or viewer from parent

condition condX(x: int) {
  x > 100
}
```

### OpenFGA version

1.4.0

### How are you running OpenFGA?

In Docker

### What datastore are you using?

In-Memory

### OpenFGA Flags

no

### Logs

_No response_",性能问题,前端,未指定,未指定,False,
1275,Error when trying to save the directly pasted authorization models using openfga playground,closed,2023-12-28 07:42:29,2024-03-16 00:58:46,ruppo-912116,"['bug', 'Stale']",7,"**Summary**
I ran the docker compose for openfga locally and was fiddling around on the playground. On pasting the authorization model and saving it says `Something went wrong! Error saving types, try again later:` and thus it cannot be saved. I am only able to save if I edit the already successfully saved authorization model but cannot save on clearing everything and pasting directly.

- Steps to reproduce
- Navigate to the playground
- remove the current authorization model and paste a simple authorization model and try saving

My docker compose file:

```docker
  migrate:
    depends_on:
      postgres:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:example@postgres:5432/openfga?sslmode=disable
    command: migrate
    networks:
      - backend

  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga
    command: run
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:example@postgres:5432/openfga?sslmode=disable
      - OPENFGA_DATASTORE_MAX_OPEN_CONNS=100 
      - OPENFGA_LOG_FORMAT=json # this is added to docker compose
      - OPENFGA_PLAYGROUND_ENABLED=true
    networks:
      - backend
    ports:
      - ""8090:8080"" #http
      - ""8081:8081"" #grpc
      - ""4000:3000"" #playground
      - ""2112:2112"" #prometheus metrics
    healthcheck:
      test: [""CMD"", ""/usr/local/bin/grpc_health_probe"", ""-addr=openfga:8081""]
      interval: 5s
      timeout: 30s
      retries: 3

```

**My authorization model**
```
model
  schema 1.1
  
type user

```

Screenshot

![image](https://github.com/openfga/openfga/assets/84317977/8015a5a1-a743-4844-b7b3-86f4647977ba)|

",性能问题,后端,未指定,未指定,True,78.0
1260,OpenFGA reports that model is invalid - no entrypoints defined,closed,2023-12-21 15:56:54,2024-03-07 19:58:49,netthier,['bug'],2,"**Summary**
I have this model:
```fga
model
  schema 1.1

type user

type state
  relations
    define can_view: [user]
    define associated_transition: [transition]
    define can_transition_with: can_apply from associated_transition

type transition
  relations
    define start: [state]
    define end: [state]
    define can_apply: [user] and can_view from start and can_view from end
```
Attempting to write it results in the error
```json
{
  ""code"":""invalid_authorization_model"",
  ""message"":""the definition of relation 'can_transition_with' in object type 'state' is invalid: no entrypoints defined""
}
```

If I change `can_apply` to
```fga
define can_apply: [user] and can_view from start
```
it works fine.

**OpenFGA version or commit**
v1.4.0

**Store data**
n/a

**Other data**

- How are you running OpenFGA? (As a binary, in Docker, in Kubernetes)
  Container in Kubernetes
- What datastore are you using? (In memory, MySQL, Postgres)
  PostgreSQL
- Are you running OpenFGA with any configuration overrides or with any of the flags mentioned in `./openfga run --help`?
  No
- Do you have any logs or traces that could help us debug the problem?
```
2023-12-21T15:55:19.765Z	INFO	grpc_req_complete	{""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""WriteAuthorizationModel"", ""grpc_type"": ""unary"", ""request_id"": ""131097a2-9e82-4ec7-9319-d527142d0fa1"", ""user_agent"": ""openfga-cli/dev"", ""raw_request"": {""store_id"":""01HJ6HD89BKN743JAKTD8DWZQ6"",""type_definitions"":[{""type"":""user"",""relations"":{},""metadata"":null},{""type"":""state"",""relations"":{""associated_transition"":{""this"":{}},""can_transition_with"":{""tupleToUserset"":{""tupleset"":{""object"":"""",""relation"":""associated_transition""},""computedUserset"":{""object"":"""",""relation"":""can_apply""}}},""can_view"":{""this"":{}}},""metadata"":{""relations"":{""associated_transition"":{""directly_related_user_types"":[{""type"":""transition"",""condition"":""""}]},""can_transition_with"":{""directly_related_user_types"":[]},""can_view"":{""directly_related_user_types"":[{""type"":""user"",""condition"":""""}]}}}},{""type"":""transition"",""relations"":{""can_apply"":{""intersection"":{""child"":[{""this"":{}},{""tupleToUserset"":{""tupleset"":{""object"":"""",""relation"":""start""},""computedUserset"":{""object"":"""",""relation"":""can_view""}}},{""tupleToUserset"":{""tupleset"":{""object"":"""",""relation"":""end""},""computedUserset"":{""object"":"""",""relation"":""can_view""}}}]}},""end"":{""this"":{}},""start"":{""this"":{}}},""metadata"":{""relations"":{""can_apply"":{""directly_related_user_types"":[{""type"":""user"",""condition"":""""}]},""end"":{""directly_related_user_types"":[{""type"":""state"",""condition"":""""}]},""start"":{""directly_related_user_types"":[{""type"":""state"",""condition"":""""}]}}}}],""schema_version"":""1.1"",""conditions"":{}}, ""raw_response"": {""authorization_model_id"":""""}, ""peer.address"": ""127.0.0.1:38396"", ""store_id"": ""01HJ6HD89BKN743JAKTD8DWZQ6"", ""grpc_code"": 2056, ""error"": ""rpc error: code = Code(2056) desc = the definition of relation 'can_transition_with' in object type 'state' is invalid: no entrypoints defined""}
```

Note: This bug was previously discussed on Discord: https://discord.com/channels/759188666072825867/1187387107988226090",性能问题,后端,未指定,未指定,False,77.0
1255,Production MySQL not listing any data,closed,2023-12-20 17:57:13,2024-02-26 19:14:43,kivo360,"['bug', 'Stale']",8,"**Summary**

I'm attempting to deploy openfga to production using the mysql datastore. I've been able to migrate the openfga tables, create store and authorization models. The problem is that I'm unable to list any stores. It's something I need within my code to find existing stores that I can attach to.

I can:

* Create Stores
* Create Authorization Models

I can't:
* List stores
* List authorization models

Once I run certain commands, I'm unable to use any list command on production mysql server. 

When I use docker-compose, I am able to list the stores within my database, and list the authorization models.

How do I debug the problem?

**Other data**

- How are you running OpenFGA? Docker and Binary
- What datastore are you using? MySQL
- Are you running OpenFGA with any configuration overrides or with any of the flags mentioned in `openfga run --datastore-engine mysql --datastore-uri 'sc_xxx:exxx@tcp(10.xxx.xxx.xxx:3306)/sc_xxx?parseTime=true'`?
- Do you have any logs or traces that could help us debug the problem? Not yet.
",安全问题,后端,未指定,未指定,False,68.0
1249,initialize mysql datastore: parse mysql connection dsn: invalid bool value: true,closed,2023-12-19 07:20:55,2023-12-19 07:45:18,Aslanzoghi,['bug'],1,"Hello team 
When I try to follow MySql  Example (https://openfga.dev/docs/getting-started/setup-openfga/docker#using-mysql) I get following error.

panic: initialize mysql datastore: parse mysql connection dsn: invalid bool value: true'

when I remove the ""true"" and use following URI
""mysql://user:password@tcp(172.17.0.3:3306)/openfga?parseTime""
or ""user:password@tcp(172.17.0.3:3306)/openfga?parseTime""

it works but when I try to create Store , I get following error 

 {""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""CreateStore"", ""grpc_type"": ""unary"", ""request_id"": ""16f670e0-a9ec-4e5b-84e0-6310b8be2d02"", ""user_agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"", ""raw_request"": {""name"":""CBase""}, ""raw_response"": {""id"":"""",""name"":"""",""created_at"":null,""updated_at"":null}, ""peer.address"": ""127.0.0.1:56552"", ""grpc_code"": 4000, ""internal_error"": ""sql error: sql: Scan error on column index 2, name \""created_at\"": unsupported Scan, storing driver.Value type []uint8 into type *time.Time""}

Which I believe it mean parseTime is false
MySql verstion : 8.0.28
docker: openfga/openfga:latest and I tried openfga/openfga:v1.4.0
",崩溃,前端,未指定,未指定,False,0.0
1238,Check gives two responses at random if one of the branches of evaluation errors,closed,2023-12-15 17:57:15,2024-01-03 17:34:58,miparnisari,['bug'],0,"**Summary**

Check gives two responses, depending on which branch of the `but not` gets evaluated first:
- allowed=false, or
- ""failed to evaluate relationship condition: 'condX' - context is missing parameters '[x]'""

**OpenFGA version or commit**

1.4.0

**Store data**

```yaml
model_file: |
model
  schema 1.1
type user
type document
  relations
    define admin: [user:*]
    define viewer: [user with condX] but not admin
condition condX(x: int) {
   x > 100
}
tuples:
  - user: user:*
    relation: admin
    object: document:budget
  - user: user:maria
    relation: viewer
    object: document:budget
    condition: 
      name: condX
tests:
  - name: test-1
    check:
      - user: user:maria
        object: document:budget
        assertions:
          viewer: false
    list_objects:
      - user: user:maria
        type: document
        assertions:
          viewer:
```",兼容性问题,数据库,未指定,未指定,False,18.0
1211,"Upgrading to 1.3.8 caused: sql: Scan error on column index 5, name ""condition_name"": converting NULL to string is unsupported",closed,2023-12-05 05:01:43,2023-12-05 19:02:19,jamesharv,['bug'],2,"**Summary**

Immediately after upgrading to 1.3.8 from 1.3.7 we started getting internal server errors. Rolling back to 1.3.7 resolved the issue. In the logs we found the error shown below.

**OpenFGA version or commit**

Immediately after upgrading to 1.3.8

**Store data**
-

**Other data**

- docker on AWS ECS
- Postgres
- Are you running OpenFGA with any configuration overrides or with any of the flags mentioned in `./openfga run --help`?
- Logs:

Example check request:
```
2023-12-05T01:11:41.242Z	ERRORrpc error: code = Code(4000) desc = Internal Server Error
{""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""request_id"": ""e27dc9cb-d13a-4537-b375-b14fca90fb9a"", ""user_agent"": ""openfga-sdk js/0.2.10"", ""raw_request"": {""store_id"":""01H92CEC8HDM58GWGEBRWPQHSS"",""tuple_key"":{""user"":""user:7fd5822a-5e9d-46cb-b97d-f8669d30ab6e"",""relation"":""manager"",""object"":""site:0a5ecb2e-f9b0-463c-a3b1-df0886465bbd""},""contextual_tuples"":{""tuple_keys"":[]},""authorization_model_id"":""01HGSC2RJ3XT4BM1Q27MH50HC8"",""trace"":false,""context"":null}, ""raw_response"": {""allowed"":false,""resolution"":""""}, ""peer.address"": ""127.0.0.1:51082"", ""store_id"": ""01H92CEC8HDM58GWGEBRWPQHSS"", ""authorization_model_id"": ""01HGSC2RJ3XT4BM1Q27MH50HC8"", ""grpc_code"": 4000, ""internal_error"": ""sql: Scan error on column index 5, name \""condition_name\"": converting NULL to string is unsupported""}
```

Example read request:
```
2023-12-05T01:12:16.355Z	ERROR	rpc error: code = Code(4000) desc = Internal Server Error
{""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Read"", ""grpc_type"": ""unary"", ""request_id"": ""12ea7e39-46b7-4480-9b2c-6fde38a61777"", ""user_agent"": ""openfga-sdk js/0.2.10"", ""raw_request"": {""store_id"":""01H92CEC8HDM58GWGEBRWPQHSS"",""tuple_key"":{""user"":""user:8b1ab6bf-bad7-454a-bb4a-c552ff60a6af"",""relation"":""admin"",""object"":""region:US""},""page_size"":1,""continuation_token"":""""}, ""raw_response"": {""tuples"":[],""continuation_token"":""""}, ""peer.address"": ""127.0.0.1:51082"", ""store_id"": ""01H92CEC8HDM58GWGEBRWPQHSS"", ""grpc_code"": 4000, ""internal_error"": ""sql: Scan error on column index 5, name \""condition_name\"": converting NULL to string is unsupported""}
```",兼容性问题,后端,未指定,未指定,False,0.0
1207,OpenFGA v1.3.8 panic,closed,2023-12-05 02:07:27,2023-12-05 04:00:01,stgraber,['bug'],10,"Our CI just caught what looks like a regression in v1.3.8 as it was passing just minutes prior to the new release appearing on Github.

Stack trace looks like:
```
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xf6ad52]

goroutine 576 [running]:
github.com/openfga/openfga/pkg/server/commands.(*WriteCommand).Execute(0x1498c08?, {0x1487640?, 0xc00059fdd0?}, 0x2?)
	/home/runner/work/openfga/openfga/pkg/server/commands/write.go:68 +0x32
github.com/openfga/openfga/pkg/server.(*Server).Write(0xc0002ea000, {0x1487640?, 0xc00059fd70?}, 0xc0005934a0)
	/home/runner/work/openfga/openfga/pkg/server/server.go:527 +0x5cd
github.com/openfga/api/proto/openfga/v1._OpenFGAService_Write_Handler.func1({0x1487640, 0xc00059fd70}, {0x12284a0?, 0xc0005934a0})
	/home/runner/go/pkg/mod/github.com/openfga/api/proto@v0.0.0-20231201195548-7ad5c05e75ca/openfga/v1/openfga_service_grpc.pb.go:371 +0x75
github.com/openfga/openfga/cmd/run.(*ServerContext).Run.UnaryServerInterceptor.func34({0x1487640, 0xc00059fb00}, {0x12284a0, 0xc0005934a0}, 0xc0007aa3c0, 0xc0004d29a8)
	/home/runner/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware/v2@v2.0.1/interceptors/auth/auth.go:48 +0xb0
google.golang.org/grpc.getChainUnaryHandler.func1({0x1487640, 0xc00059fb00}, {0x12284a0, 0xc0005934a0})
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1163 +0xb2
github.com/openfga/openfga/cmd/run.(*ServerContext).Run.NewLoggingInterceptor.UnaryServerInterceptor.func71({0x1487640, 0xc00059fb00}, {0x12284a0, 0xc0005934a0}, 0xc0007aa3c0?, 0xc00022ae00)
	/home/runner/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware/v2@v2.0.1/interceptors/server.go:22 +0x28a
google.golang.org/grpc.getChainUnaryHandler.func1({0x1487640, 0xc00059fb00}, {0x12284a0, 0xc0005934a0})
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1163 +0xb2
github.com/openfga/openfga/cmd/run.(*ServerContext).Run.NewUnaryInterceptor.UnaryServerInterceptor.func69({0x1487640, 0xc00059fad0}, {0x12284a0, 0xc0005934a0}, 0xc0007aa3c0?, 0xc00022ad00)
	/home/runner/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware/v2@v2.0.1/interceptors/server.go:22 +0x28a
google.golang.org/grpc.getChainUnaryHandler.func1({0x1487640, 0xc00059fad0}, {0x12284a0, 0xc0005934a0})
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1163 +0xb2
github.com/grpc-ecosystem/go-grpc-middleware/tags.UnaryServerInterceptor.func1({0x1487640?, 0xc00059fa70?}, {0x12284a0, 0xc0005934a0}, 0xc0007aa3c0, 0xc00022acc0)
	/home/runner/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.4.0/tags/interceptors.go:23 +0x9c
google.golang.org/grpc.getChainUnaryHandler.func1({0x1487640, 0xc00059fa70}, {0x12284a0, 0xc0005934a0})
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1163 +0xb2
github.com/openfga/openfga/pkg/middleware/validator.UnaryServerInterceptor.func1.1({0x1487640, 0xc00059f9e0}, {0x12284a0, 0xc0005934a0})
	/home/runner/work/openfga/openfga/pkg/middleware/validator/validator.go:32 +0x86
github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors/validator.UnaryServerInterceptor.func1({0x1487640, 0xc00059f9e0}, {0x12284a0, 0xc0005934a0}, 0xc0007b56f0?, 0xc000596ce0)
	/home/runner/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware/v2@v2.0.1/interceptors/validator/interceptors.go:23 +0x6d
github.com/openfga/openfga/pkg/middleware/validator.UnaryServerInterceptor.func1({0x1487640, 0xc00059f9e0}, {0x12284a0, 0xc0005934a0}, 0xc0007aa3c0?, 0xc00022ac80)
	/home/runner/work/openfga/openfga/pkg/middleware/validator/validator.go:31 +0x98
google.golang.org/grpc.getChainUnaryHandler.func1({0x1487640, 0xc00059f9e0}, {0x12284a0, 0xc0005934a0})
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1163 +0xb2
github.com/openfga/openfga/cmd/run.(*ServerContext).Run.NewUnaryInterceptor.UnaryServerInterceptor.func65({0x1487640, 0xc00059f9b0}, {0x12284a0, 0xc0005934a0}, 0xc0007aa3c0?, 0xc00022ac00)
	/home/runner/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware/v2@v2.0.1/interceptors/server.go:22 +0x28a
google.golang.org/grpc.NewServer.chainUnaryServerInterceptors.chainUnaryInterceptors.func1({0x1487640, 0xc00059f9b0}, {0x12284a0, 0xc0005934a0}, 0xc000ab69f8?, 0x10dc380?)
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1154 +0x85
github.com/openfga/api/proto/openfga/v1._OpenFGAService_Write_Handler({0x125ca60?, 0xc0002ea000}, {0x1487640, 0xc00059f9b0}, 0xc0007ba200, 0xc00041d700)
	/home/runner/go/pkg/mod/github.com/openfga/api/proto@v0.0.0-20231201195548-7ad5c05e75ca/openfga/v1/openfga_service_grpc.pb.go:373 +0x135
google.golang.org/grpc.(*Server).processUnaryRPC(0xc0003de960, {0x1487640, 0xc00059f920}, {0x148f980, 0xc000500680}, 0xc0007d4480, 0xc000318120, 0x1e2def8, 0x0)
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1343 +0xe03
google.golang.org/grpc.(*Server).handleStream(0xc0003de960, {0x148f980, 0xc000500680}, 0xc0007d4480)
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:1737 +0xc4c
google.golang.org/grpc.(*Server).serveStreams.func1.1()
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:986 +0x86
created by google.golang.org/grpc.(*Server).serveStreams.func1 in goroutine 45
	/home/runner/go/pkg/mod/google.golang.org/grpc@v1.59.0/server.go:997 +0x145
```

The query which caused this was:
```
+ timeout --foreground 120 /home/stgraber/data/code/go/bin/incus storage delete test-pool --verbose
ERROR  [2023-12-05T02:01:44Z] stgraber: writes=&[] deletions=&[{Object:storage_pool:test-pool Relation:server User:server:incus}] 
ERROR  [2023-12-05T02:01:44Z] Failed to remove storage pool from authorizer  error=""Failed to delete tuple from OpenFGA store (user: \""server:incus\""; relation: \""server\""; object: \""storage_pool:test-pool\""): Post \""http://172.17.0.111:51589/stores/01HGVVBCJR9QWJSR6SZ83PATB8/write\"": EOF"" name=test-pool
```

This appears to hit the first time we send a write request with a deletion but no writes through the API endpoint.

Looking at our testsuite, all requests up till that point had something in writes.",性能问题,前端,未指定,未指定,False,0.0
1181,Assertions with context,closed,2023-11-28 12:47:36,2023-11-29 07:19:09,ofeksher,['bug'],1,Is it possible to write Assertions with context? ,其他,其他,未指定,未指定,False,0.0
1177,MySQL Changelog Timestamps are not precise enough (seconds),open,2023-11-27 21:32:27,,jon-whit,"['bug', 'Stale', 'storage-adapter']",2,"**Summary**

Describe the bug here.

- Steps to reproduce

Write a tuple, sleep, and write another tuple.

```
Write(document:1#viewer@user:jon)
time.Sleep(10 * time.Millisecond)
Write(document:2#viewer@user:bob)
```

- What did you expect to happen?

ReadChanges should return a changelog with two items, and the second item should have a timestamp that is about 10ms later than the first.

- What actually happened?
The second changelog item had a timestamp with the same second resolution/precision as the first.

**OpenFGA version or commit**
<= v1.3.7

**Store data**

If applicable, provide information about your authorization model, tuples, and the Check or ListObjects calls you're making. For example:

```yaml
model_file: |
  model
    schema 1.1
  type user
  type document
    relations
      define viewer: [user]
```

**Other data**

- How are you running OpenFGA? (As a binary, in Docker, in Kubernetes)

Binary, but the others are impacted as well.

- What datastore are you using? (In memory, MySQL, Postgres)

MySQL

- Are you running OpenFGA with any configuration overrides or with any of the flags mentioned in `./openfga run --help`?

Using the defaults.

- Do you have any logs or traces that could help us debug the problem?

N/A


Relevant links:
* https://github.com/openfga/openfga/blob/main/pkg/storage/mysql/mysql.go#L195
* https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_now (`NOW()` is second precision)",功能错误,前端,未指定,未指定,True,
1174,Cannot self-host playground in internal network,closed,2023-11-27 08:40:12,2024-10-30 18:20:56,mesudip,"['bug', 'duplicate', 'Stale']",4,"**Summary**
The playground is hosted at `http://172.31.6.0`, with nginx reverse proxy.

When I try to access the openfga playground, I get the following error


**Error message on browser console**
```
Refused to frame 'https://play.fga.dev/' because an ancestor violates the following 
Content Security Policy directive: ""frame-ancestors http://localhost:*"".
```

### Other details
- How are you running OpenFGA? (As a binary, in Docker, in Kubernetes)
On Docker
- What datastore are you using? (In memory, MySQL, Postgres)
Postgres
- Do you have any logs or traces that could help us debug the problem?
<img width=""447"" alt=""image"" src=""https://github.com/openfga/openfga/assets/11131298/b7d8b1fc-cbc7-44ab-9dcc-37103163d723"">
",性能问题,数据库,未指定,未指定,False,338.0
1164,WriteAuthorizationModel API accepts a JSON that is missing a key,open,2023-11-20 23:58:26,,miparnisari,"['bug', 'Stale']",2,"**Summary**

Create a model:

```shell
curl --location 'http://localhost:8080/stores/01HFPWH0EJRYQ0H9RQ8HXMXSDN/authorization-models' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data '{
  ""schema_version"": ""1.1"",
  ""type_definitions"": [
    {
        ""type"": ""user""
    },
    {
        ""type"": ""folder"",
        ""relations"": {
            ""viewer"": {""this"": {}},
            ""parent"": {""this"": {}}
        },
        ""metadata"": {
            ""relations"": {
                ""viewer"": {
                    ""directly_related_user_types"": [{""type"": ""user""}]
                },
                ""parent"": {
                    ""directly_related_user_types"": [{""type"": ""folder""}]
                }
            }
        }
    },
    {
        ""type"": ""document"",
        ""relations"": {
            ""parent"": {""this"": {}},
            ""viewer"": {
                ""union"": {
                    ""child"": [
                        {
                            ""intersection"": {
                                ""tupleToUserset"": {
                                    ""tupleset"": {
                                        ""relation"": ""parent""
                                    },
                                    ""computedUserset"": {
                                        ""relation"": ""viewer""
                                    }
                                }
                            }
                        },
                        {""this"": {}}
                    ]
                }
            }
        },
        ""metadata"": {
            ""relations"": {
                ""parent"": {
                    ""directly_related_user_types"": [{""type"": ""folder"", ""relation"": ""parent""}]
                },
                ""viewer"": {
                    ""directly_related_user_types"": [{""type"": ""user""}]
                }
            }
        }
    }
  ]
}'
```

This JSON is accepted by the WriteAuthModel API but it is malformed. The intersection definition in the `document#viewer` relation is malformed. It’s missing a `child: […]` nested block.

**OpenFGA version or commit**

1.3.7 and prior
",兼容性问题,后端,未指定,未指定,False,
1102, Docker-compose.override.yaml  broken with latest Jaeger release,closed,2023-11-01 21:24:49,2023-11-08 17:29:55,miparnisari,['bug'],1,"https://github.com/openfga/openfga/blob/17c7f7bde7224482dca9355e5d473f24ba557696/docker-compose.override.yaml#L28-L29

Docker-compose.override.yaml is broken with the latest version of Jaeger. See https://github.com/jaegertracing/jaeger/issues/4906

We could pin to v1.49 as a workaround.",功能错误,构建系统,未指定,未指定,False,6.0
1078,Changes pagination some requests returning a tuple from previous request,closed,2023-10-24 12:21:53,2023-10-26 20:34:25,collisj1996,['bug'],4,"**Summary**

Testing pagination on the changes endpoint I chose a page size of 2, some of the subsequent requests would have duplicate values from the previous request

- Steps to reproduce
  - Using the Python openfga_sdk
  - Using a page size of 2
  - Using 5 tuples (see below)
  - calling the change endpoint 3 times in succession each using the previous requests continuation token
  - The second request has a duplicate tuple
  - This results in 6 tuples in total with one duplicate
  
- What did you expect to happen?

That each request using the previous request continuation token would have newer distinct tuples

- What actually happened?

Some subsequent request using the previous requests continuation token would include the duplicate values

**OpenFGA version or commit**

Latest OpenFga docker image as of 24th Oct

**Store data**

If applicable, provide information about your authorization model, tuples, and the Check or ListObjects calls you're making. For example:

```yaml
model_file: |
model
  schema 1.1
type user
type domain
  relations
    define member: [user] or admin
    define admin: [user]
    define can_create_folder: member or admin
    define can_create_playlist: member or admin
    define can_view_item_type: member or admin
    define can_view_tag: member or admin
    define can_check_action: member or admin
    define can_create_item_type: admin
    define can_delete_item_type: admin
    define can_rename_item_type: admin
    define can_view_role: admin
    define can_edit_role: admin
    define can_create_tag: admin
    define can_update_tag: admin
    define can_delete_tag: admin
type playlist
  relations
    define can_view: base_can_view and member from domain
    define can_update_description: base_can_update_description and member from domain
    define can_delete: base_can_delete and member from domain
    define can_change_item_type: base_can_change_item_type and member from domain
    define can_rename: base_can_rename and member from domain
    define can_update_items: base_can_update_items and member from domain
    define base_can_view: view from policy or owner
    define base_can_update_description: edit from policy or owner
    define base_can_delete: delete from policy or owner
    define base_can_change_item_type: admin from policy or owner
    define base_can_rename: admin from policy or owner
    define base_can_update_items: admin from policy or owner
    define policy: [policy]
    define owner: [user]
    define domain: [domain]
type folder
  relations
    define can_view_in_list: base_can_view_in_list and member from domain
    define can_view: base_can_view and member from domain
    define can_edit_content: base_can_edit_content and member from domain
    define can_delete: base_can_delete and member from domain
    define can_change_item_type: base_can_change_item_type and member from domain
    define can_move: base_can_move and member from domain
    define can_rename: base_can_rename and member from domain
    define base_can_view_in_list: any from policy or owner
    define base_can_view: view from policy or owner
    define base_can_edit_content: edit from policy or owner
    define base_can_delete: delete from policy or owner
    define base_can_change_item_type: admin from policy or owner
    define base_can_move: admin from policy or owner
    define base_can_rename: admin from policy or owner
    define policy: [policy]
    define owner: [user]
    define parent: [folder]
    define domain: [domain]
type file
  relations
    define can_view_in_list: base_can_view_in_list and member from domain
    define can_view: base_can_view and member from domain
    define can_view_notes: base_can_view_notes and member from domain
    define can_add_notes: base_can_add_notes and member from domain
    define can_modify_notes: base_can_modify_notes and member from domain
    define can_delete_notes: base_can_delete_notes and member from domain
    define can_export_notes: base_can_export_notes and member from domain
    define can_update_description: base_can_update_description and member from domain
    define can_create_subclip: base_can_create_subclip and member from domain
    define can_download_clear: base_can_download_clear and member from domain
    define can_download_restricted: base_can_download_restricted and member from domain
    define can_delete: base_can_delete and member from domain
    define can_change_item_type: base_can_change_item_type and member from domain
    define can_rename: base_can_rename and member from domain
    define can_move: base_can_move and member from domain
    define can_add_asset: base_can_add_asset and member from domain
    define can_refresh_upload: base_can_refresh_upload and member from domain
    define can_publish_checksums: base_can_publish_checksums and member from domain
    define base_can_view_in_list: any from policy or any from item_type or owner
    define base_can_view: view from policy or view from item_type or owner
    define base_can_view_notes: view from policy or view from item_type or owner
    define base_can_add_notes: view from policy or view from item_type or owner
    define base_can_modify_notes: view from policy or view from item_type or owner
    define base_can_delete_notes: view from policy or view from item_type or owner
    define base_can_export_notes: view from policy or view from item_type or owner
    define base_can_update_description: edit from policy or edit from item_type or owner
    define base_can_create_subclip: edit from policy or edit from item_type or owner
    define base_can_download_clear: download_clear from policy or download_clear from item_type or owner
    define base_can_download_restricted: download_restricted from policy or download_restricted from item_type or owner
    define base_can_delete: delete from policy or delete from item_type or owner
    define base_can_change_item_type: admin from policy or admin from item_type or owner
    define base_can_rename: admin from policy or admin from item_type or owner
    define base_can_move: admin from policy or admin from item_type or owner
    define base_can_add_asset: admin from policy or admin from item_type or owner
    define base_can_refresh_upload: admin from policy or admin from item_type or owner
    define base_can_publish_checksums: admin from policy or admin from item_type or owner
    define policy: [policy]
    define owner: [user]
    define parent: [folder]
    define item_type: [item_type]
    define domain: [domain]
type role
  relations
    define assignee: [user,domain#member]
type item_type
  relations
    define view: [role#assignee]
    define edit: [role#assignee]
    define download_clear: [role#assignee]
    define download_restricted: [role#assignee]
    define delete: [role#assignee]
    define share: [role#assignee]
    define admin: [role#assignee]
    define any: view or edit or download_clear or download_restricted or delete or share or admin
type policy
  relations
    define view: [user,domain#member]
    define edit: [user,domain#member]
    define download_clear: [user,domain#member]
    define download_restricted: [user,domain#member]
    define delete: [user,domain#member]
    define share: [user,domain#member]
    define admin: [user,domain#member]
    define any: view or edit or download_clear or download_restricted or delete or share or admin
    
tuples:
  - user: user:user_one
    relation: owner
    object: file:file_one
  - user: user:user_one
    relation: owner
    object: file:file_two
  - user: user:user_two
    relation: owner
    object: file:file_three
  - user: user:user_one
    relation: admin
    object: domain:domain_one
  - user: user:user_two
    relation: admin
    object: domain:domain_one
```

**Other data**

- NOTE:

  - The tuples are being added transactionally in one write request, I'm not sure if this is relevant but might cause a bug to the pagination logic when fetching??

- How are you running OpenFGA?

  - Docker (latest image)

- What datastore are you using? (In memory, MySQL, Postgres)

  - Postgres

- Are you running OpenFGA with any configuration overrides or with any of the flags mentioned in `./openfga run --help`?

  - No

- Do you have any logs or traces that could help us debug the problem?

  - Not that I know of
",性能问题,后端,未指定,未指定,True,2.0
1058,Check with contextual tuple exhibits non-deterministic behavior while running openfga with query cache enabled ,closed,2023-10-10 23:00:59,2023-10-17 23:50:17,padhikari-godaddy,['bug'],2,"**Summary**

Check with contextual tuple exhibits non-deterministic behavior while running openfga with query cache enabled 

- Steps to reproduce
   - Run openfga with check query cache enabled
      `./openfga run  --experimentals check-query-cache --check-query-cache-enabled=true`
   -  Use the model and tuples provided from the Store data section below.
   - Run those three checks in order.


- What did you expect to happen?
    - The `check-1` request should respond with `allowed`: `true`
    - The `check-2` request should respond with `allowed`: `false`
    - The `check-3` request should respond with `allowed`: `true`

- What actually happened?
    - The `check-1` request should respond with `allowed`: `true`
    - The `check-2` request should respond with `allowed`: `false`
    - The `check-3` request should respond with `allowed`: `false`
   If you wait for some time (basically for the cache to expire) and make `check-3` request again, it responds with  `allowed`: `true`.


**OpenFGA version or commit**

Issue exists in the `2b04c251e5f99ccd5bd39eb0485f987deaa9f9ef` or v1.3.3 release.

**Store data**

If applicable, provide information about your authorization model, tuples, and the Check or ListObjects calls you're making. For example:

```yaml
model_file: |
  model
  schema 1.1
type fga_user
type timeslot
  relations
    define user: [fga_user]
type commerce_store
  relations
    define approved_hourly_access: user from approved_timeslot and hourly_employee
    define approved_timeslot: [timeslot]
    define hourly_employee: [fga_user]

tuples:
  - user: fga_user:anne
    relation: hourly_employee
    object: commerce_store:0
  - user: fga_user:anne
    relation: hourly_employee
    object: commerce_store:1
  - user: timeslot:11_12
    relation: approved_timeslot
    object: commerce_store:0
   - user: timeslot:12_13
    relation: approved_timeslot
    object: commerce_store:1
tests: # remove this if not a bug in Check or ListObjects API
  - name: check-1
    check:
      {
        ""tuple_key"": {
          ""user"": ""fga_user:anne"",
          ""relation"": ""approved_hourly_access"",
          ""object"": ""commerce_store:0""
        },
        ""contextual_tuples"": {
          ""tuple_keys"": [
            {
              ""user"": ""fga_user:anne"",
              ""relation"": ""user"",
              ""object"": ""timeslot:11_12""
            }
          ]
        }
      }
 - name: check-2
    check:
      {
        ""tuple_key"": {
          ""user"": ""fga_user:anne"",
          ""relation"": ""approved_hourly_access"",
          ""object"": ""commerce_store:1""
        },
        ""contextual_tuples"": {
          ""tuple_keys"": [
            {
              ""user"": ""fga_user:anne"",
              ""relation"": ""user"",
              ""object"": ""timeslot:11_12""
            }
          ]
        }
      }
- name: check-3
   check:
      {
        ""tuple_key"": {
          ""user"": ""fga_user:anne"",
          ""relation"": ""approved_hourly_access"",
          ""object"": ""commerce_store:1""
        },
        ""contextual_tuples"": {
          ""tuple_keys"": [
            {
              ""user"": ""fga_user:anne"",
              ""relation"": ""user"",
              ""object"": ""timeslot:12_13""
            }
          ]
        }
      }

   
```

**Other data**

- How are you running OpenFGA? (As a binary, in Docker, in Kubernetes)
    - Building from source with go build](https://github.com/openfga/openfga#building-from-source-with-go-build)
- What datastore are you using? (In memory, MySQL, Postgres)
   - In memory
- Are you running OpenFGA with any configuration overrides or with any of the flags mentioned in `./openfga run --help`?
   -    `./openfga run  --experimentals check-query-cache --check-query-cache-enabled=true`
- Do you have any logs or traces that could help us debug the problem?
Server logs below:
> 
```2023-10-10T15:44:36.252-0700    INFO    grpc_req_complete       {""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""request_id"": ""11eb37a9-713a-4e3f-b128-13a96f88cc0f"", ""user_agent"": ""Thunder Client (https://www.thunderclient.com)"", ""raw_request"": {""store_id"":""01HC34M687XEFK4E0VGGZ3KTY8"",""tuple_key"":{""object"":""commerce_store:0"",""relation"":""approved_hourly_access"",""user"":""fga_user:anne""},""contextual_tuples"":{""tuple_keys"":[{""object"":""timeslot:11_12"",""relation"":""user"",""user"":""fga_user:anne""}]},""authorization_model_id"":"""",""trace"":false}, ""raw_response"": {""allowed"":true,""resolution"":""""}, ""peer.address"": ""127.0.0.1:58363"", ""store_id"": ""01HC34M687XEFK4E0VGGZ3KTY8"", ""authorization_model_id"": ""01HCBEKQHWDHAHZV5FE9F1HB0D"", ""datastore_query_count"": 3, ""grpc_code"": 0}```

>
```2023-10-10T15:44:42.699-0700    INFO    grpc_req_complete       {""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""request_id"": ""a08f488a-44b8-4abb-b05c-5ba22fe1263b"", ""user_agent"": ""Thunder Client (https://www.thunderclient.com)"", ""raw_request"": {""store_id"":""01HC34M687XEFK4E0VGGZ3KTY8"",""tuple_key"":{""object"":""commerce_store:1"",""relation"":""approved_hourly_access"",""user"":""fga_user:anne""},""contextual_tuples"":{""tuple_keys"":[{""object"":""timeslot:11_12"",""relation"":""user"",""user"":""fga_user:anne""}]},""authorization_model_id"":"""",""trace"":false}, ""raw_response"": {""allowed"":false,""resolution"":""""}, ""peer.address"": ""127.0.0.1:58363"", ""store_id"": ""01HC34M687XEFK4E0VGGZ3KTY8"", ""authorization_model_id"": ""01HCBEKQHWDHAHZV5FE9F1HB0D"", ""datastore_query_count"": 3, ""grpc_code"": 0}```

>
```2023-10-10T15:44:50.236-0700    INFO    grpc_req_complete       {""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""request_id"": ""70eb9be6-2de0-4b70-acfb-6eb43e93d5d6"", ""user_agent"": ""Thunder Client (https://www.thunderclient.com)"", ""raw_request"": {""store_id"":""01HC34M687XEFK4E0VGGZ3KTY8"",""tuple_key"":{""object"":""commerce_store:1"",""relation"":""approved_hourly_access"",""user"":""fga_user:anne""},""contextual_tuples"":{""tuple_keys"":[{""object"":""timeslot:12_13"",""relation"":""user"",""user"":""fga_user:anne""}]},""authorization_model_id"":"""",""trace"":false}, ""raw_response"": {""allowed"":false,""resolution"":""""}, ""store_id"": ""01HC34M687XEFK4E0VGGZ3KTY8"", ""authorization_model_id"": ""01HCBEKQHWDHAHZV5FE9F1HB0D"", ""datastore_query_count"": 1, ""peer.address"": ""127.0.0.1:58363"", ""grpc_code"": 0}```
>
```2023-10-10T15:45:07.178-0700    INFO    grpc_req_complete       {""grpc_service"": ""openfga.v1.OpenFGAService"", ""grpc_method"": ""Check"", ""grpc_type"": ""unary"", ""request_id"": ""5f5c66e8-199f-4f69-941e-6f1d1c0401a3"", ""user_agent"": ""Thunder Client (https://www.thunderclient.com)"", ""raw_request"": {""store_id"":""01HC34M687XEFK4E0VGGZ3KTY8"",""tuple_key"":{""object"":""commerce_store:1"",""relation"":""approved_hourly_access"",""user"":""fga_user:anne""},""contextual_tuples"":{""tuple_keys"":[{""object"":""timeslot:12_13"",""relation"":""user"",""user"":""fga_user:anne""}]},""authorization_model_id"":"""",""trace"":false}, ""raw_response"": {""allowed"":true,""resolution"":""""}, ""store_id"": ""01HC34M687XEFK4E0VGGZ3KTY8"", ""authorization_model_id"": ""01HCBEKQHWDHAHZV5FE9F1HB0D"", ""datastore_query_count"": 3, ""peer.address"": ""127.0.0.1:58363"", ""grpc_code"": 0}```
",性能问题,前端,未指定,未指定,True,7.0
1047,Fix README instructions re: docker-compose setup,closed,2023-10-05 21:56:11,2023-10-27 21:07:16,miparnisari,"['bug', 'documentation']",0,"The instructions in the readme regarding `docker-compose.yaml` https://github.com/openfga/openfga#docker-compose

don't work because that YAML depends on files in the `telemetry` folder. The `otel-collector` container can't start without those files, and so `openfga` can't start either.


```shell
C:\Users\mparn\Documents\GitHub                                                                                   
λ docker compose up                                                                                               
[+] Running 7/0                                                                                                   
 ✔ Container otel-collector       Created                                                                    0.0s 
 ✔ Container github-prometheus-1  Created                                                                    0.0s 
 ✔ Container postgres             Created                                                                    0.0s 
 ✔ Container github-grafana-1     Created                                                                    0.0s 
 ✔ Container jaeger               Created                                                                    0.0s 
 ✔ Container migrate              Created                                                                    0.0s 
 ✔ Container openfga              Created                                                                    0.0s 
Attaching to github-grafana-1, github-prometheus-1, jaeger, migrate, openfga, otel-collector, postgres            
                                                                                     
otel-collector       | Error: failed to get config: cannot resolve the configuration: cannot retrieve the configur
ation: unable to read the file file:/etc/otel-collector-config.yaml: read /etc/otel-collector-config.yaml: is a di
rectory                                                                                                           
otel-collector       | 2023/10/05 21:57:38 collector server run finished with error: failed to get config: cannot 
resolve the configuration: cannot retrieve the configuration: unable to read the file file:/etc/otel-collector-con
fig.yaml: read /etc/otel-collector-config.yaml: is a directory

openfga              | panic: failed to establish a connection with the otlp exporter: context deadline exceeded
openfga              |
openfga              | goroutine 1 [running]:
openfga              | github.com/openfga/openfga/pkg/telemetry.MustNewTracerProvider({0xc0002872c0, 0x4, 0xc000571788?})
openfga              |  /home/runner/work/openfga/openfga/pkg/telemetry/tracing.go:87 +0x739
openfga              | github.com/openfga/openfga/cmd/run.(*ServerContext).Run(0xc000603aa0, {0x1215a30, 0x1a38900}, 0xc0000d8b40)
openfga              |  /home/runner/work/openfga/openfga/cmd/run/run.go:310 +0x558
openfga              | github.com/openfga/openfga/cmd/run.run(0xc00011e100?, {0x1a38900?, 0x4?, 0x108166d?})
openfga              |  /home/runner/work/openfga/openfga/cmd/run/run.go:269 +0xce
openfga              | github.com/spf13/cobra.(*Command).execute(0xc000004600, {0x1a38900, 0x0, 0x0})
openfga              |  /home/runner/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:944 +0x863
openfga              | github.com/spf13/cobra.(*Command).ExecuteC(0xc000004300)
openfga              |  /home/runner/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:1068 +0x3a5
openfga              | github.com/spf13/cobra.(*Command).Execute(0xc000004300?)
openfga              |  /home/runner/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:992 +0x13
openfga              | main.main()
openfga              |  /home/runner/work/openfga/openfga/cmd/openfga/main.go:28 +0x12f
openfga exited with code 2

```",崩溃,后端,未指定,未指定,False,21.0
1044,"When OPENFGA_LIST_OBJECTS_MAX_RESULTS=0, 0 results are returned",closed,2023-10-05 18:15:14,2023-10-26 21:58:25,miparnisari,['bug'],3,"Hi @miparnisari  and @jon-whit.

We've been experimenting with OpenFGA at Cochlear and we'd like to appreciate the amazing work you've been doing. It's awesome to see this how this project's evolving.

On a more codebase related question: How are you ensuring you return all data when `OPENFGA_LIST_OBJECTS_MAX_RESULTS` is set to `0`?

I couldn't find any test case that validates that flow.

Also, that setting doesn't seem to work for me. I'm happy to help and contribute with a fix if that's the case.

Thank you!

_Originally posted by @jcbertolucci in https://github.com/openfga/openfga/issues/757#issuecomment-1747893509_
            ",数据问题,数据库,未指定,未指定,False,21.0
1013,"""Add Authentication to your OpenFGA server"" link in Readme directs to a non-existent page",closed,2023-09-21 10:51:56,2023-09-25 14:17:11,sanketrai1,"['bug', 'documentation']",2,The [Add Authentication to your OpenFGA server](https://openfga.dev/docs/getting-started/setup-openfga#configuring-authentication) under the [Next Steps](https://github.com/openfga/openfga#next-steps) section in the project Readme file directs to the webpage https://openfga.dev/docs/getting-started/setup-openfga/#configuring-authentication which shows a `404: Page Not Found` error. It should probably point to the webpage https://openfga.dev/docs/getting-started/setup-openfga/docker#configuring-authentication,安全问题,前端,未指定,未指定,False,4.0
1002,Bug when running OpenFGA tests,closed,2023-09-12 14:27:22,2023-09-27 14:11:33,claraisrael,['bug'],5,"**Summary**
I'm unable to run tests when importing  `github.com/openfga/openfga`. I got a compilation issue which I attach below:
```
# github.com/openfga/openfga/pkg/testfixtures/storage
/golang/pkg/mod/github.com/openfga/openfga@v1.3.1/pkg/testfixtures/storage/mysql.go:153:24: cannot use goose.NopLogger() (value of type goose.Logger) as mysql.Logger value in argument to mysql.SetLogger: goose.Logger does not implement mysql.Logger (missing method Print)
```
The blame line is below https://github.com/openfga/openfga/blob/84c25cf6015f8a604aa87982c7c79d8ea634ca00/pkg/testfixtures/storage/mysql.go#L153

- Steps to reproduce
- Install openfga in your repo v1.3.1 via `go get  github.com/openfga/openfga`
- Have a test suite for openfga which imports`""github.com/openfga/openfga/cmd/run""` and `""github.com/openfga/openfga/tests""`. and include a dummy test:
```
import (
	""context""
	""testing""

	openfga ""github.com/openfga/go-sdk""
	""github.com/openfga/openfga/cmd/run""
	""github.com/openfga/openfga/tests""
	""github.com/stretchr/testify/suite""
	""google.golang.org/grpc""
	""google.golang.org/grpc/credentials/insecure""
)

func TestOpenFGATestSuite(t *testing.T) {
	suite.Run(t, new(OpenFGATestSuite))
}

type OpenFGATestSuite struct {
	suite.Suite

	conn          *grpc.ClientConn
	cancel        context.CancelFunc
	OpenFGAClient *openfga.APIClient
}

func (s *OpenFGATestSuite) SetupSuite() {
	cfg := run.MustDefaultConfigWithRandomPorts()
	cfg.Log.Level = ""none""
	cfg.Datastore.Engine = ""memory""
	s.cancel = tests.StartServer(s.T(), cfg)

	var err error
	s.conn, err = grpc.Dial(cfg.GRPC.Addr,
		grpc.WithBlock(),
		grpc.WithTransportCredentials(insecure.NewCredentials()),
	)
	s.Require().NoError(err)

	cfgOpenfga, err := openfga.NewConfiguration(openfga.Configuration{
		ApiScheme: ""http"",
		ApiHost:   cfg.HTTP.Addr,
		StoreId:   """",
	})
	s.Require().NoError(err)

	s.OpenFGAClient = openfga.NewAPIClient(cfgOpenfga)
}

func (s *OpenFGATestSuite) TearDownSuite() {
	s.cancel()
	s.conn.Close()
}

func (s *OpenFGATestSuite) DummyTest() {
	s.Assert().True(true)
}
```
- What did you expect to happen?
- I expected no errors
- What actually happened?
The code does not compile due to that error
**OpenFGA version or commit**
1.3.1
",性能问题,前端,未指定,未指定,True,14.0
1001,The playground does not respect the service port,open,2023-09-11 19:53:57,,gmartin-flexe,"['bug', 'Stale']",11,"When using the docker image for openfga in a docker compose setup, I tried setting the host port of the service to 8082 to avoid a collision. API calls I made worked fine, and the playground UI also loaded. However, the playground UI's requests to the server are still using 8080, which caused it to fail to load or create a store.

1. Run `docker run -p 8082:8080 -p 8081:8081 -p 3000:3000 openfga/openfga run` (or use 8082:8082 if you want)
2. Navigate to http://localhost:3000 in a browser
3. Click 'New Store' button.
4. Enter a name
5. Click Create

Expected: a new store
Actual: nothing visually; console shows a network request failed

**OpenFGA version or commit**

1.3.1

**Store data**

N/A

**Other data**

- How are you running OpenFGA: Docker
- What datastore are you using?: In memory
- Are you running OpenFGA with any configuration overrides or with any of the flags mentioned in `./openfga run --help`?: just overriding host port
- Do you have any logs or traces that could help us debug the problem?
Not really; this is trivial to reproduce.
",性能问题,前端,未指定,未指定,True,
939,CICD Benchmark test timing out,closed,2023-08-14 17:21:38,2023-08-15 18:34:12,adriantam,"['bug', 'github_actions']",0,Benchmark test in CICD is timing out.  We should only run small set of benchmark test as part of CICD.,其他,构建系统,未指定,未指定,False,1.0
922,Default config prints a warning(?) to straight to STDOUT without logger,closed,2023-08-03 18:03:53,2023-10-12 20:37:30,KlausVii,['bug'],4,"I am confused by these 2 lines, are they meant to return errors or print a warning with the logger? 

https://github.com/openfga/openfga/blob/main/cmd/run/run.go#L474
https://github.com/openfga/openfga/blob/main/cmd/run/run.go#L470

Additionally since the defaults for `MaxConcurrentReadsForCheck` and `Datastore.MaxOpenConns` are `MaxUint32` and `30` respectively, this prints every time the application is run with default options. ",崩溃,前端,未指定,未指定,False,70.0
920,List-Object endpoint returns inconsistent results for relations using usersets,closed,2023-08-03 08:09:44,2023-08-23 18:58:26,rouven-s,['bug'],7,"### Setup

**Build version:** 1.3.0
**Auth Model:**
```
model
  schema 1.1

type user

type test_type
  relations
    define relation1: [user]
    define relation2: [user]
    define relation3: [user]
    define relation4: [user]
    define relation5: [user]
    define relation6: [user]
    define relation7: [user]
    define relation8: [user]

type list_type
  relations
    define list_relation: [test_type#relation1,test_type#relation2,test_type#relation3,test_type#relation4,test_type#relation5,test_type#relation6,test_type#relation7,test_type#relation8]
```

**Tuples in Store:**
```json
[
	{
			""user"": ""user:test_user"",
			""relation"": ""relation1"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""user:test_user"",
			""relation"": ""relation2"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""user:test_user"",
			""relation"": ""relation3"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""user:test_user"",
			""relation"": ""relation4"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""user:test_user"",
			""relation"": ""relation5"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""user:test_user"",
			""relation"": ""relation6"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""user:test_user"",
			""relation"": ""relation7"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""user:test_user"",
			""relation"": ""relation8"",
			""object"": ""test_type:test_type1""
        },
	{
			""user"": ""test_type:test_type1#relation1"",
			""relation"": ""list_relation"",
			""object"": ""list_type:list_type1""
        }
]
```

### Issue
When I use the list-object endpoint with the following body, the endoint sometimes returns one object (as expected) and sometimes an empty list:
```json
{
    ""user"": ""user:test_user"",
    ""relation"": ""list_relation"",
    ""type"": ""list_type""
}
```

I know that there is the limitiation of deadline (3 seconds by default) and maximum tuple result (1000 results by default). In this case neither of them are breached, the request only takes about 5 milliseconds locally and should only return 1 object. Is there any other limitation that I am not aware of or is this a bug?",兼容性问题,前端,未指定,未指定,False,20.0
915,Inconsistent max concurrent reads for check value between running as standalone vs. library,closed,2023-08-02 14:30:59,2023-08-02 18:10:44,adriantam,['bug'],0,"In the case OpenFGA ran as a standalone, the default max concurrent read for check is [4294967295](https://github.com/openfga/openfga/blob/d88474a3871cb50f40476dd8b70ec9f9ea6a870a/.config-schema.json#L18) .

However, if OpenFGA is imported as a library, the default max concurrent read for check is [100](https://github.com/openfga/openfga/blob/d88474a3871cb50f40476dd8b70ec9f9ea6a870a/pkg/server/server.go#L44).

The default configured value should be identical.",其他,后端,未指定,未指定,False,0.0
899,Unable to build when using openfga as library due to buf build migration,closed,2023-08-01 17:34:01,2023-08-01 22:29:45,adriantam,['bug'],1,"For those using openfga as a library, build will fail due to buf.build [migrate from remote generation alpha](https://buf.build/docs/migration-guides/migrate-remote-generation-alpha/).  

You may see messages like 

```
sandcastle/server/server.go:58:9: cannot use s.openfgaServer.Read(ctx, req) (value of type *""go.buf.build/openfga/go/openfga/api/openfga/v1"".ReadResponse) as *""buf.build/gen/go/openfga/api/protocolbuffers/go/openfga/v1"".ReadResponse value in return statement
```",崩溃,前端,未指定,未指定,False,0.0
892,Flaky ListObjects & Check integration tests,closed,2023-07-27 23:37:35,2024-01-03 17:18:33,miparnisari,['bug'],2,"Use this script to try and reproduce:

```
#!/bin/bash

for ((i=1; i<=1000; i++)); do
    echo ""Running test iteration $i""
    go test -race -count=1 ./tests/listobjects/...
done
```

I got this

```
[27/07/23 4:13:30] ~/GitHub/openfga (main) $ sh script.sh     
Running test iteration 1
ok      github.com/openfga/openfga/tests/listobjects    16.199s
Running test iteration 2
ok      github.com/openfga/openfga/tests/listobjects    15.652s
Running test iteration 3
ok      github.com/openfga/openfga/tests/listobjects    18.389s
Running test iteration 4
ok      github.com/openfga/openfga/tests/listobjects    16.651s
Running test iteration 5
ok      github.com/openfga/openfga/tests/listobjects    15.535s
Running test iteration 6
ok      github.com/openfga/openfga/tests/listobjects    15.088s
Running test iteration 7
ok      github.com/openfga/openfga/tests/listobjects    14.015s
Running test iteration 8
ok      github.com/openfga/openfga/tests/listobjects    20.835s
Running test iteration 9
ok      github.com/openfga/openfga/tests/listobjects    15.230s
Running test iteration 10
ok      github.com/openfga/openfga/tests/listobjects    13.769s
Running test iteration 11
ok      github.com/openfga/openfga/tests/listobjects    17.323s
Running test iteration 12
ok      github.com/openfga/openfga/tests/listobjects    20.563s
Running test iteration 13
ok      github.com/openfga/openfga/tests/listobjects    15.386s
Running test iteration 14
ok      github.com/openfga/openfga/tests/listobjects    14.283s
Running test iteration 15
ok      github.com/openfga/openfga/tests/listobjects    14.160s
Running test iteration 16
ok      github.com/openfga/openfga/tests/listobjects    16.574s
Running test iteration 17
ok      github.com/openfga/openfga/tests/listobjects    15.841s
Running test iteration 18
ok      github.com/openfga/openfga/tests/listobjects    14.224s
Running test iteration 19
ok      github.com/openfga/openfga/tests/listobjects    14.627s
Running test iteration 20
ok      github.com/openfga/openfga/tests/listobjects    14.562s
Running test iteration 21
ok      github.com/openfga/openfga/tests/listobjects    14.522s
Running test iteration 22
ok      github.com/openfga/openfga/tests/listobjects    17.121s
Running test iteration 23
ok      github.com/openfga/openfga/tests/listobjects    17.183s
Running test iteration 24
ok      github.com/openfga/openfga/tests/listobjects    16.963s
Running test iteration 25
ok      github.com/openfga/openfga/tests/listobjects    14.359s
Running test iteration 26
ok      github.com/openfga/openfga/tests/listobjects    19.929s
Running test iteration 27
ok      github.com/openfga/openfga/tests/listobjects    17.056s
Running test iteration 28
ok      github.com/openfga/openfga/tests/listobjects    14.579s
Running test iteration 29
ok      github.com/openfga/openfga/tests/listobjects    14.658s
Running test iteration 30
ok      github.com/openfga/openfga/tests/listobjects    15.346s
Running test iteration 31
ok      github.com/openfga/openfga/tests/listobjects    17.512s
Running test iteration 32
ok      github.com/openfga/openfga/tests/listobjects    14.380s
Running test iteration 33
ok      github.com/openfga/openfga/tests/listobjects    19.642s
Running test iteration 34
ok      github.com/openfga/openfga/tests/listobjects    17.852s
Running test iteration 35
ok      github.com/openfga/openfga/tests/listobjects    14.800s
Running test iteration 36
ok      github.com/openfga/openfga/tests/listobjects    18.377s
Running test iteration 37
ok      github.com/openfga/openfga/tests/listobjects    18.134s
Running test iteration 38
ok      github.com/openfga/openfga/tests/listobjects    14.999s
Running test iteration 39
ok      github.com/openfga/openfga/tests/listobjects    18.954s
Running test iteration 40
ok      github.com/openfga/openfga/tests/listobjects    59.876s
Running test iteration 41
ok      github.com/openfga/openfga/tests/listobjects    20.010s
Running test iteration 42
ok      github.com/openfga/openfga/tests/listobjects    17.415s
Running test iteration 43
ok      github.com/openfga/openfga/tests/listobjects    16.429s
Running test iteration 44
ok      github.com/openfga/openfga/tests/listobjects    13.618s
Running test iteration 45
ok      github.com/openfga/openfga/tests/listobjects    18.640s
Running test iteration 46
ok      github.com/openfga/openfga/tests/listobjects    15.671s
Running test iteration 47
ok      github.com/openfga/openfga/tests/listobjects    30.207s
Running test iteration 48
--- FAIL: TestListObjectsPostgres (52.31s)
    --- FAIL: TestListObjectsPostgres/RunAll (0.00s)
        --- FAIL: TestListObjectsPostgres/RunAll/ListObjects (0.00s)
            --- FAIL: TestListObjectsPostgres/RunAll/ListObjects/Schema1_1 (1.37s)
                --- FAIL: TestListObjectsPostgres/RunAll/ListObjects/Schema1_1/list_objects_expands_wildcard_tuple (10.49s)
                    listobjects.go:180: 
                                Error Trace:    /Users/mparnisari/GitHub/openfga/tests/listobjects/listobjects.go:180
                                Error:          elements differ
                                                
                                                extra elements in list A:
                                                ([]interface {}) (len=1) {
                                                 (string) (len=8) ""folder:3""
                                                }
                                                
                                                
                                                listA:
                                                ([]string) (len=3) {
                                                 (string) (len=8) ""folder:1"",
                                                 (string) (len=8) ""folder:2"",
                                                 (string) (len=8) ""folder:3""
                                                }
                                                
                                                
                                                listB:
                                                ([]string) (len=2) {
                                                 (string) (len=8) ""folder:1"",
                                                 (string) (len=8) ""folder:2""
                                                }
                                Test:           TestListObjectsPostgres/RunAll/ListObjects/Schema1_1/list_objects_expands_wildcard_tuple
                                Messages:       ListObject request: type:""folder""  relation:""can_read""  user:""user:anne"". Contextual tuples: []
    postgres.go:105: stopping container postgres-01H6CTZWNAB0TQWXMTVVBS57XS
    postgres.go:114: stopped container postgres-01H6CTZWNAB0TQWXMTVVBS57XS
FAIL
FAIL    github.com/openfga/openfga/tests/listobjects    54.701s
FAIL
```

In another failure, I saw

```
Error Trace:    /Users/mparnisari/GitHub/openfga/tests/listobjects/listobjects.go:180
                                Error:          elements differ
                                                
                                                extra elements in list A:
                                                ([]interface {}) (len=2) {
                                                 (string) (len=8) ""folder:2"",
                                                 (string) (len=8) ""folder:3""
                                                }
                                                
                                                
                                                listA:
                                                ([]string) (len=3) {
                                                 (string) (len=8) ""folder:1"",
                                                 (string) (len=8) ""folder:2"",
                                                 (string) (len=8) ""folder:3""
                                                }
                                                
                                                
                                                listB:
                                                ([]string) (len=1) {
                                                 (string) (len=8) ""folder:1""
                                                }
                                Test:           TestListObjectsPostgres/RunAll/ListObjects/Schema1_1/list_objects_expands_wildcard_tuple
                                Messages:       ListObject request: type:""folder"" relation:""can_read"" user:""user:anne"". Contextual tuples: []
```

Note how the test failing is the same one but the value of `listB` (the response) is different.

---

I saw flakiness in Auth0 FGA too, this time for Check tests:

```
    --- FAIL: TestOpenFGATests/RunAllTests (0.00s)
        --- FAIL: TestOpenFGATests/RunAllTests/Check (0.00s)
            --- FAIL: TestOpenFGATests/RunAllTests/Check/Schema1_1 (0.02s)
                --- FAIL: TestOpenFGATests/RunAllTests/Check/Schema1_1/this (0.74s)
                    check.go:188: 
                                Error Trace:    /Users/mparnisari/go/pkg/mod/github.com/openfga/openfga@v1.2.1-0.20230714181739-6d84cd6df29e/tests/check/check.go:188
                                Error:          Received unexpected error:
                                                rpc error: code = Code(2000) desc = invalid authorization model encountered: an authorization model cannot contain duplicate types
                                Test:           TestOpenFGATests/RunAllTests/Check/Schema1_1/this
```

Since the test code for both APIs is the same, I suspect that the problem is the test parallelization",安全问题,前端,未指定,未指定,True,159.0
828,"If listObjects is called with an overly complex model, it throws 500 instead of 400",closed,2023-06-28 00:05:43,2023-07-07 17:28:14,miparnisari,['bug'],0,"With this model:

```
model
  schema 1.1
type user
type resource
  relations
    define a1: a2
    define a2: a3
    define a3: a4
    define a4: a5
    define a5: a6
    define a6: a7
    define a7: a8
    define a8: a9
    define a9: a10
    define a10: a11
    define a11: a12
    define a12: a13
    define a13: a14
    define a14: a15
    define a15: a16
    define a16: a17
    define a17: a18
    define a18: a19
    define a19: a20
    define a20: a21
    define a21: a22
    define a22: a23
    define a23: a24
    define a24: a25
    define a25: a26
    define a26: a27
    define a27: a28
    define a28: a29
    define a29: a30
    define a30: a31
    define a31: a32
    define a32: a33
    define a33: a34
    define a34: a35
    define a35: a36
    define a36: a37
    define a37: a38
    define a38: a39
    define a39: a40
    define a40: a41
    define a41: a42
    define a42: a43
    define a43: a44
    define a44: a45
    define a45: a46
    define a46: a47
    define a47: a48
    define a48: a49
    define a49: a50
    define a50: a51
    define a51: a52
    define a52: a53
    define a53: a54
    define a54: a55
    define a55: a56
    define a56: a57
    define a57: a58
    define a58: a59
    define a59: a60
    define a60: a61
    define a61: a62
    define a62: a63
    define a63: a64
    define a64: a65
    define a65: a66
    define a66: a67
    define a67: a68
    define a68: a69
    define a69: a70
    define a70: a71
    define a71: a72
    define a72: a73
    define a73: a74
    define a74: a75
    define a75: a76
    define a76: a77
    define a77: a78
    define a78: a79
    define a79: a80
    define a80: a81
    define a81: a82
    define a82: a83
    define a83: a84
    define a84: a85
    define a85: a86
    define a86: a87
    define a87: a88
    define a88: a89
    define a89: a90
    define a90: a91
    define a91: a92
    define a92: a93
    define a93: a94
    define a94: a95
    define a95: a96
    define a96: a97
    define a97: a98
    define a98: a99
    define a99: a100
    define a100: a101
    define a101: a102
    define a102: [user]
```

this Check

```
curl --location 'http://localhost:8080/stores/01H3ZKV2RMXWD908XFTV29FJC3/check' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data '{
    ""tuple_key"": {
        ""user"": ""user:maria"",
        ""relation"": ""a1"",
        ""object"": ""resource:abc""
    }
}'
```

gives HTTP 400:

```
{
    ""code"": ""authorization_model_resolution_too_complex"",
    ""message"": ""Authorization Model resolution required too many rewrite rules to be resolved. Check your authorization model for infinite recursion or too much nesting""
}
```

but this ListObjects call

```
curl --location 'http://localhost:8080/stores/01H3ZKV2RMXWD908XFTV29FJC3/list-objects' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data '{
  ""type"": ""resource"",
  ""relation"": ""a1"",
  ""user"": ""user:maria""
}'
```

gives HTTP 500:

```
{
    ""code"": ""internal_error"",
    ""message"": ""Internal Server Error""
}
```

The problem is this code https://github.com/openfga/openfga/blob/d674627b0c4072a42be5801015456e6acf4d9f78/pkg/server/commands/list_objects.go#L285-L288

and this https://github.com/openfga/openfga/blob/d674627b0c4072a42be5801015456e6acf4d9f78/pkg/server/commands/list_objects.go#L341-L343

which are masking all errors as internal errors, but in this case it shouldn't.",安全问题,前端,未指定,未指定,False,9.0
814,Fix error message,closed,2023-06-13 22:27:35,2023-06-21 02:30:59,miparnisari,"['bug', 'good first issue']",1,"https://github.com/openfga/openfga/blob/61864b6fa8d8acaf79162b462e6785fb2fce276e/pkg/typesystem/typesystem.go#L727

This is adding a new line to the error message:

```json
{
""code"":""invalid_authorization_model"",
""message"":""undefined relation\nadmin does not appear as a relation in any of the directly related user types [type:\""org\""]""
}
```

",安全问题,认证,未指定,未指定,False,7.0
804,Add more model validation test cases,closed,2023-06-05 18:16:29,2024-07-24 15:55:56,rhamzeh,['bug'],2,"Right now we have some model validations in place that should protect users from some mistakes, but there's quite a few (unlikely) cases that are not covered.",UI问题,前端,未指定,未指定,False,414.0
801,Models with self-referencing type restrictions and non-empty entrypoints should be valid,closed,2023-06-02 22:05:52,2023-06-05 20:32:29,jon-whit,"['bug', 'help wanted']",1,"I get a validation error from the `WriteAuthorizationModel` endpoint when trying to write the model:

```
type user

type document
  relations
    define editor: [user]
    define viewer: [document#viewer] or editor
```
Consider the following tuples:
```
document:1#viewer@document:2#viewer
document:2#editor@user:jon
```
`Check(document:1#viewer@user:jon)` should return `{allowed: true}`, because `user:jon` is an editor of `document:2`.

The model above should be valid becuase there is _at least one_ entry point that can lead to a possible evaluation path.",安全问题,后端,未指定,未指定,False,2.0
724,Write internal Error when authorization model ID valid but not found,closed,2023-05-03 04:44:22,2023-05-09 21:06:47,adriantam,['bug'],0,Write results in 500 internal error if request's auth model id is valid but not found.,安全问题,认证,未指定,未指定,False,6.0
714,Enforce existence of the provided `store_id` in every API endpoint that requires one.,open,2023-04-25 17:23:58,,jon-whit,['bug'],1,"We have many endpoints that require a `store_id` field, and yet we treat the store_id opaquely. That is, we don't actually require the provided store_id to exist. We merely require the store_id be well formed.

The objective of this issue is to fix this and enforce validation not only on the format of the provided store_id, but also on the existance of it. Care should be taken in the implementation that addresses this issue to do this check in a transaction so that we don't have a race on the existence of the store.

",UI问题,前端,未指定,未指定,False,
703,Internal server error of `context deadline exceeded` for list object with `but not` relationship under load,closed,2023-04-20 13:59:00,2023-04-25 15:19:02,adriantam,['bug'],0,"While running performance test with the following model

```
model
  schema 1.1
type user
type folder
  relations
    define viewer: [user]
type group
  relations
    define member: [user]
type document
  relations
    define allowed: [user]
    define editor: [user] or owner
    define editor_and_allowed: editor and allowed
    define editor_not_restricted: editor but not restricted
    define owner: [user]
    define parent: [folder]
    define restricted: [user]
    define viewer: [user,group#member] or editor or viewer from parent
    define viewer_and_allowed: viewer and allowed
    define viewer_not_restricted: viewer but not restricted
```

List object query of 
```
{
   authorization_model_id: ""..."",
   type: ""document"",
   relation: ""viewer_not_restricted"",
   user: ""user:C-0-0""
}
```
occasionally results in 500 Internal Error.  The benchmark tool shows the OpenFGA response as 

```
time=""2023-04-20T13:20:26Z"" level=info msg=""Response not 200  {\""remote_ip\"":\""10.100.210.44\"",\""remote_port\"":8080,\""url\"":\""http://openfga-benchmark.default.svc.cluster.local:8080/stores/01GYFBPK79GPBQTRE2EB915NST/list-objects\"",\""status\"":500,\""status_text\"":\""500 Internal Server Error\"",\""proto\"":\""HTTP/1.1\"",\""headers\"":{\""Date\"":\""Thu, 20 Apr 2023 13:20:26 GMT\"",\""Content-Length\"":\""60\"",\""Openfga-Store-Id\"":\""01GYFBPK79GPBQTRE2EB915NST\"",\""Vary\"":\""Origin\"",\""X-Request-Id\"":\""d0f8ae31-8cc3-4eeb-8c3b-8dcb00d5e0f0\"",\""Content-Type\"":\""application/json\"",\""Openfga-Authorization-Model-Id\"":\""01GYFBPK7FD935RZW962GC4AWR\""},\""cookies\"":{},\""body\"":\""{\\\""code\\\"":\\\""internal_error\\\"",\\\""message\\\"":\\\""Internal Server Error\\\""}\\n\"",\""timings\"":{\""duration\"":3021.279025,\""blocked\"":0.004671,\""looking_up\"":0,\""connecting\"":0,\""tls_handshaking\"":0,\""sending\"":0.030669,\""waiting\"":3021.166974,\""receiving\"":0.081382},\""tls_version\"":\""\"",\""tls_cipher_suite\"":\""\"",\""ocsp\"":{\""produced_at\"":0,\""this_update\"":0,\""next_update\"":0,\""revoked_at\"":0,\""revocation_reason\"":\""\"",\""status\"":\""\""},\""error\"":\""\"",\""error_code\"":1500,\""request\"":{\""method\"":\""POST\"",\""url\"":\""http://openfga-benchmark.default.svc.cluster.local:8080/stores/01GYFBPK79GPBQTRE2EB915NST/list-objects\"",\""headers\"":{\""Content-Type\"":[\""application/json\""],\""User-Agent\"":[\""k6/0.43.1 (https://k6.io/)\""]},\""body\"":\""{\\\""authorization_model_id\\\"":\\\""01GYFBPK7FD935RZW962GC4AWR\\\"",\\\""type\\\"":\\\""document\\\"",\\\""relation\\\"":\\\""viewer_not_restricted\\\"",\\\""user\\\"":\\\""user:C-0-0\\\""}\"",\""cookies\"":{}}}"" source=console
```

The logs of OpenFGA shows 
```
...
{""level"":""error"",""timestamp"":1681996914.5234468,""msg"":""rpc error: code = Code(4000) desc = Internal Server Error"",""build.version"":""v1.0.1"",""build.commit"":""ead6ceacfa6ee83248c306d56c2b3b451d66894d"",""grpc_service"":""openfga.v1.OpenFGAService"",""grpc_method"":""ListObjects"",""grpc_type"":""unary"",""request_id"":""1f1970d3-c592-41b7-ac3f-610bb7447ff4"",""raw_request"":{""store_id"":""01GYFBPK79GPBQTRE2EB915NST"",""authorization_model_id"":""01GYFBPK7FD935RZW962GC4AWR"",""type"":""document"",""relation"":""viewer_not_restricted"",""user"":""user:C-0-0"",""contextual_tuples"":null},""raw_response"":{""objects"":[]},""peer.address"":""127.0.0.1:41386"",""store_id"":""01GYFBPK79GPBQTRE2EB915NST"",""authorization_model_id"":""01GYFBPK7FD935RZW962GC4AWR"",""grpc_code"":4000,""internal_error"":""context deadline exceeded""}
{""level"":""error"",""timestamp"":1681996914.52374,""msg"":""check_error"",""build.version"":""v1.0.1"",""build.commit"":""ead6ceacfa6ee83248c306d56c2b3b451d66894d"",""error"":""context deadline exceeded""}
{""level"":""error"",""timestamp"":1681996914.5239062,""msg"":""check_error"",""build.version"":""v1.0.1"",""build.commit"":""ead6ceacfa6ee83248c306d56c2b3b451d66894d"",""error"":""context deadline exceeded""}
{""level"":""error"",""timestamp"":1681996914.5240443,""msg"":""check_error"",""build.version"":""v1.0.1"",""build.commit"":""ead6ceacfa6ee83248c306d56c2b3b451d66894d"",""error"":""context deadline exceeded""}
...
```

Note that the internal error is an occasional and there are list object requests that does not have 500 Internal Error.  In addition, for the above model, only list objects request for `viewer_not_restricted` exhibits this issue and other list objects such as `viewer` returns successfully.

## System Info
----------

### helm list
NAME             	NAMESPACE	REVISION	UPDATED                             	STATUS  	CHART          	APP VERSION
openfga-benchmark	default  	1       	2023-04-20 08:54:06.757642 -0400 EDT	deployed	benchmark-0.0.9	v1.0.1

### Database
Database: Postgresql
Memory: 2Gi
CPU: 1.0
Number of rows in database: 1964926

### OpenFGA
Version: 1.0.1
Memory: 1Gi
CPU: 500m
Number of replica: 1

## Detailed technical Information

### Benchmark Runner

```
Name:             openfga-benchmark-benchrunner
Namespace:        default
Priority:         0
Service Account:  default
Node:             ip-192-168-86-40.us-west-2.compute.internal/192.168.86.40
Start Time:       Thu, 20 Apr 2023 08:54:09 -0400
Labels:           app.kubernetes.io/managed-by=Helm
Annotations:      meta.helm.sh/release-name: openfga-benchmark
                  meta.helm.sh/release-namespace: default
Status:           Succeeded
IP:               192.168.74.157
IPs:
  IP:  192.168.74.157
Init Containers:
  wait-for-openfga:
    Container ID:  containerd://e8f472125c2441eb81f4a3a457694cb716d1d2ce452b8f461232fc35c60d7bba
    Image:         groundnuty/k8s-wait-for:v1.6
    Image ID:      docker.io/groundnuty/k8s-wait-for@sha256:84edcf79626796e7432f3fe2a905ef47b5476037afc2f5eb67e9e40ac61ff086
    Port:          <none>
    Host Port:     <none>
    Args:
      pod
      -lapp.kubernetes.io/name=openfga
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Thu, 20 Apr 2023 08:54:09 -0400
      Finished:     Thu, 20 Apr 2023 08:54:30 -0400
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-cngvc (ro)
Containers:
  k6:
    Container ID:  containerd://686a6efdaa990f03f5174b597e5bec3025a30f7ad2adcc4cf703a92ca89f4ce9
    Image:         grafana/k6:0.43.1
    Image ID:      docker.io/grafana/k6@sha256:11f8f63625b20177719f4ac5682ffc28564da7adac47fd90838a7e024836406c
    Port:          <none>
    Host Port:     <none>
    Args:
      run
      /etc/scripts/app.bundle.js
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Thu, 20 Apr 2023 08:54:31 -0400
      Finished:     Thu, 20 Apr 2023 09:22:09 -0400
    Ready:          False
    Restart Count:  0
    Environment:
      API_BASE_URI:         http://openfga-benchmark.default.svc.cluster.local:8080
      N:                    17544
      M:                    5
      K:                    3
      TEST_CASE:            4_not_restricted
      TEST_LIST_OBJECT:     true
      K6_CLOUD_PROJECT_ID:
      K6_CLOUD_TOKEN:       <set to the key 'token' in secret 'k6-cloud-token'>  Optional: false
      K6_SETUP_TIMEOUT:     12000000
    Mounts:
      /etc/scripts from benchmark-script (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-cngvc (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             False
  ContainersReady   False
  PodScheduled      True
Volumes:
  benchmark-script:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      openfga-benchmark-script
    Optional:  false
  kube-api-access-cngvc:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:                      <none>
```

### Database

```
Name:             openfga-benchmark-postgresql-0
Namespace:        default
Priority:         0
Service Account:  default
Node:             ip-192-168-86-40.us-west-2.compute.internal/192.168.86.40
Start Time:       Thu, 20 Apr 2023 08:54:13 -0400
Labels:           app.kubernetes.io/component=primary
                  app.kubernetes.io/instance=openfga-benchmark
                  app.kubernetes.io/managed-by=Helm
                  app.kubernetes.io/name=postgresql
                  controller-revision-hash=openfga-benchmark-postgresql-5b457fdf7
                  helm.sh/chart=postgresql-12.2.3
                  statefulset.kubernetes.io/pod-name=openfga-benchmark-postgresql-0
Annotations:      checksum/extended-configuration: 5bd877e6c4a2d5dfdbc1c6fcfc9ed54d91359bcfaed70073290439cf2cc13dce
Status:           Running
IP:               192.168.80.76
IPs:
  IP:           192.168.80.76
Controlled By:  StatefulSet/openfga-benchmark-postgresql
Containers:
  postgresql:
    Container ID:   containerd://416765352d9bcf521d1334251828f5eac97dd517cb9e83317db915c4929d26b0
    Image:          docker.io/bitnami/postgresql:15.2.0-debian-11-r11
    Image ID:       docker.io/bitnami/postgresql@sha256:3e65a6b89e3824d5ffcae4041b2508987b81582b7c800a66a75942ea3823cfdd
    Port:           5432/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Thu, 20 Apr 2023 08:54:17 -0400
    Ready:          True
    Restart Count:  0
    Requests:
      cpu:      1
      memory:   2Gi
    Liveness:   exec [/bin/sh -c exec pg_isready -U ""postgres"" -d ""dbname=postgres"" -h 127.0.0.1 -p 5432] delay=30s timeout=5s period=10s #success=1 #failure=6
    Readiness:  exec [/bin/sh -c -e exec pg_isready -U ""postgres"" -d ""dbname=postgres"" -h 127.0.0.1 -p 5432
[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
] delay=5s timeout=5s period=10s #success=1 #failure=6
    Environment:
      BITNAMI_DEBUG:                        false
      POSTGRESQL_PORT_NUMBER:               5432
      POSTGRESQL_VOLUME_DIR:                /bitnami/postgresql
      PGDATA:                               /bitnami/postgresql/data
      POSTGRES_PASSWORD:                    <set to the key 'postgres-password' in secret 'openfga-benchmark-postgresql'>  Optional: false
      POSTGRES_DB:                          postgres
      POSTGRESQL_ENABLE_LDAP:               no
      POSTGRESQL_ENABLE_TLS:                no
      POSTGRESQL_LOG_HOSTNAME:              false
      POSTGRESQL_LOG_CONNECTIONS:           false
      POSTGRESQL_LOG_DISCONNECTIONS:        false
      POSTGRESQL_PGAUDIT_LOG_CATALOG:       off
      POSTGRESQL_CLIENT_MIN_MESSAGES:       error
      POSTGRESQL_SHARED_PRELOAD_LIBRARIES:  pgaudit
    Mounts:
      /bitnami/postgresql from data (rw)
      /bitnami/postgresql/conf/conf.d/ from postgresql-extended-config (rw)
      /dev/shm from dshm (rw)
      /docker-entrypoint-initdb.d/ from custom-init-scripts (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-x5llm (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  data:
    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)
    ClaimName:  data-openfga-benchmark-postgresql-0
    ReadOnly:   false
  postgresql-extended-config:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      openfga-benchmark-postgresql-extended-configuration
    Optional:  false
  custom-init-scripts:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      psql-extensions
    Optional:  false
  dshm:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:     Memory
    SizeLimit:  <unset>
  kube-api-access-x5llm:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   Burstable
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:                      <none>
```

### OpenFGA Server

```
Name:             openfga-benchmark-8dc76b8cd-qqn6g
Namespace:        default
Priority:         0
Service Account:  openfga-benchmark
Node:             ip-192-168-12-206.us-west-2.compute.internal/192.168.12.206
Start Time:       Thu, 20 Apr 2023 08:54:09 -0400
Labels:           app.kubernetes.io/instance=openfga-benchmark
                  app.kubernetes.io/name=openfga
                  pod-template-hash=8dc76b8cd
Annotations:      prometheus.io/path: /metrics
                  prometheus.io/port: 2112
                  prometheus.io/scrape: true
Status:           Running
IP:               192.168.9.179
IPs:
  IP:           192.168.9.179
Controlled By:  ReplicaSet/openfga-benchmark-8dc76b8cd
Init Containers:
  wait-for-migration:
    Container ID:  containerd://736b3c98797508287da43ebcdeb5f14b9ad74253ee3574993fea5611e73ddcd9
    Image:         groundnuty/k8s-wait-for:v1.6
    Image ID:      docker.io/groundnuty/k8s-wait-for@sha256:84edcf79626796e7432f3fe2a905ef47b5476037afc2f5eb67e9e40ac61ff086
    Port:          <none>
    Host Port:     <none>
    Args:
      job
      openfga-benchmark-migrate
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Thu, 20 Apr 2023 08:54:10 -0400
      Finished:     Thu, 20 Apr 2023 08:54:10 -0400
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qvrlr (ro)
Containers:
  openfga:
    Container ID:  containerd://249ac44c3a755dd81aa971429bf94e90a4502d7c97b9250e8f7dd64bc9d6ce4c
    Image:         openfga/openfga:v1.0.1
    Image ID:      docker.io/openfga/openfga@sha256:b442e1f128a487aa245742928179c00fa05dbc319c93caa1703b60d547804a97
    Ports:         8081/TCP, 8080/TCP, 3001/TCP, 3000/TCP, 2112/TCP
    Host Ports:    0/TCP, 0/TCP, 0/TCP, 0/TCP, 0/TCP
    Args:
      run
    State:          Running
      Started:      Thu, 20 Apr 2023 08:54:11 -0400
    Ready:          True
    Restart Count:  0
    Readiness:      exec [grpc_health_probe -addr=0.0.0.0:8081] delay=5s timeout=1s period=10s #success=1 #failure=3
    Environment:
      OPENFGA_DATASTORE_ENGINE:           postgres
      OPENFGA_DATASTORE_URI:              postgres://postgres:password@openfga-benchmark-postgresql.default.svc.cluster.local:5432/postgres?sslmode=disable
      OPENFGA_GRPC_ADDR:                  0.0.0.0:8081
      OPENFGA_HTTP_ENABLED:               true
      OPENFGA_HTTP_ADDR:                  0.0.0.0:8080
      OPENFGA_HTTP_CORS_ALLOWED_ORIGINS:  *
      OPENFGA_HTTP_CORS_ALLOWED_HEADERS:  *
      OPENFGA_PLAYGROUND_ENABLED:         true
      OPENFGA_PLAYGROUND_PORT:            3000
      OPENFGA_LOG_FORMAT:                 json
      OPENFGA_LOG_LEVEL:                  info
      OPENFGA_METRICS_ENABLED:            true
      OPENFGA_METRICS_ADDR:               0.0.0.0:2112
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qvrlr (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  kube-api-access-qvrlr:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:                      <none>
```",性能问题,前端,未指定,未指定,False,5.0
690,Writing Authorization Models to a non-existent store returns 201,open,2023-04-12 22:34:10,,aaguiarz,['bug'],2,"When you call POST to `/stores/{store_id}/authorization-models` with a non-existent store_id you get back a 201 and a new model_id.  

We should return an error.

The way to do this is by introducing a foreign key where StoreID is used.

This includes:
- [ ] Creating a migration script that would create stores if they do not already exist for the distinct store_ids in the authorization models table, with a the store name being an empty string. An N+1 would be if we set the created_at and updated_at to the earliest relevant entry in the authorization model table.
- [ ] Create a migration script that would make all the store_ids across all the tables foreign keys pointing to the Stores table
- [ ] Catch the DB errors to expose our own errors
- [ ] Tests to ensure that the writes are not succeeding

The main reason to do this via a Foreign Key constraint in the DB vs extra DB call on each API call to ensure the existence of the store is b/c the latter has a much more drastic  adverse affect on latency, and it is something we can get for free (or as close to it as we can get while still satisfying the constraint) by using the DB.

",安全问题,后端,未指定,未指定,False,
678,Server emits 500 internal error for invalid store name on Streamed List Object,closed,2023-04-04 21:37:36,2024-07-24 15:57:14,adriantam,['bug'],5,"POST 

`http://localhost:8080/stores/ZAP%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%25n%25s%0A/streamed-list-objects`

(note the encoded `\n` at the end of the store_id path parameter)

will return 500 internal error with body 

```json
{
    ""code"": ""internal_error"",
    ""message"": ""invalid header field value for \""openfga-store-id\""""
}
```

It looks like the [streamserver interceptor](https://pkg.go.dev/github.com/grpc-ecosystem/go-grpc-middleware/validator#StreamServerInterceptor) does not guarantee that the validation will happen before the mux tries to read the header.  It only guarantees that it will happen before reaching userspace handler.

---

NOTE: this error only happens in streamed list object API.  Non-streamed API returns 400 bad request:

```jon
{
    ""code"": ""validation_error"",
    ""message"": ""invalid ListObjectsRequest.StoreId: value does not match regex pattern \""^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\""""
}
```",崩溃,后端,未指定,未指定,False,476.0
648,Fix update docker description,closed,2023-03-17 18:17:47,2023-03-28 14:45:46,adriantam,['bug'],2,"See https://github.com/openfga/openfga/actions/runs/4450363964/jobs/7815732438 

We should remove/fix docker description as it causes `Error: Forbidden`",崩溃,文档,未指定,未指定,False,10.0
640,TLS certificate requires `grpc.addr` to be include as SAN,closed,2023-03-16 20:36:46,2024-07-24 16:01:43,kdubb,['bug'],2,"Given that the HTTP server makes an immediate upstream connection to the gRPC server using `grpc.addr`, if the gRPC TLS certificate doesn't have the `grpc.addr` added as a `SubjectAlternativeName` (aka SAN) then the TLS connection fails and the startup fails.

The error that is reported is ver vague, `context deadline exceeded`. When you enable GRPC debug logging you can see the `tls: bad certificate` failure.

Most of the time, `grpc.addr` will be `0.0.0.0:<port>`, which essentially means currently the TLS cert must have `0.0.0.0` added as an IP SAN for TLS to be enabled along with HTTP.

The HTTP server needs to allow disabling host verification or, probably preferably, an `http.upstreamServerName` configuration options needs to be added and used as the server name when making the upstream connection.",崩溃,前端,未指定,未指定,False,495.0
639,HTTP upstream connection to gRPC uses `grpc.addr` incorrectly,closed,2023-03-16 20:30:01,2023-05-11 17:05:51,kdubb,['bug'],0,"The HTTP server immediately make an upstream connection to the gRPC server with the `grpc.addr`; most of the time this will be the default value of `0.0.0.0:<port>`.

Strictly speaking, this isn't a valid address to use for connections. It's only valid as a source address; although in practice it is basically equivalent to `localhost` or `127.0.0.1`. This should be translated to `127.0.0.1` before attempting the connection.",功能错误,前端,未指定,未指定,False,55.0
602,Bug: Computed userset not evaluated properly for listobject,closed,2023-03-02 23:19:39,2023-03-08 00:07:53,adriantam,['bug'],1,"For the following model
```
model
  schema 1.1
type folder
  relations
    define can_view: viewer
    define parent: [folder]
    define viewer: [user] or viewer from parent
type user
```

With the following tuples
```
folder:a#viewer@user:anne
folder:b#parent@folder:a
```

The call `ListObjects( type: folder, relation: can_view, user: user:anne )` returns only `[folder:a]`

We expect `[folder:a,folder:b]`

Note that this is isolated to be in the reverseExpand implementation as 
```
model
  schema 1.1
type folder
  relations
    define banned: [user]
    define can_view: viewer but not banned
    define parent: [folder]
    define viewer: [user] or viewer from parent
type user
``` 
produces the correct result.

Note that the the call `ListObjects( type: folder, relation: viewer, user: user:anne )` returns `[folder:a, folder:b]` as expected
",其他,其他,未指定,未指定,False,5.0
597,ListObjects throws 500 when the input auth model ID is not found,closed,2023-03-02 00:04:05,2023-05-10 00:47:31,miparnisari,['bug'],1,"With this model

```json
{
  ""type_definitions"": [
    {
      ""type"": ""user"",
      ""relations"": {},
      ""metadata"": null
    },
    {
      ""type"": ""team"",
      ""relations"": {
        ""member"": {
          ""this"": {}
        }
      },
      ""metadata"": {
        ""relations"": {
          ""member"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""team"",
                ""relation"": ""member""
              }
            ]
          }
        }
      }
    },
    {
      ""type"": ""repo"",
      ""relations"": {
        ""admin"": {
          ""union"": {
            ""child"": [
              {
                ""this"": {}
              },
              {
                ""tupleToUserset"": {
                  ""tupleset"": {
                    ""object"": """",
                    ""relation"": ""owner""
                  },
                  ""computedUserset"": {
                    ""object"": """",
                    ""relation"": ""repo_admin""
                  }
                }
              }
            ]
          }
        },
        ""maintainer"": {
          ""union"": {
            ""child"": [
              {
                ""this"": {}
              },
              {
                ""computedUserset"": {
                  ""object"": """",
                  ""relation"": ""admin""
                }
              }
            ]
          }
        },
        ""owner"": {
          ""this"": {}
        },
        ""reader"": {
          ""union"": {
            ""child"": [
              {
                ""this"": {}
              },
              {
                ""computedUserset"": {
                  ""object"": """",
                  ""relation"": ""triager""
                }
              },
              {
                ""tupleToUserset"": {
                  ""tupleset"": {
                    ""object"": """",
                    ""relation"": ""owner""
                  },
                  ""computedUserset"": {
                    ""object"": """",
                    ""relation"": ""repo_reader""
                  }
                }
              }
            ]
          }
        },
        ""triager"": {
          ""union"": {
            ""child"": [
              {
                ""this"": {}
              },
              {
                ""computedUserset"": {
                  ""object"": """",
                  ""relation"": ""writer""
                }
              }
            ]
          }
        },
        ""writer"": {
          ""union"": {
            ""child"": [
              {
                ""this"": {}
              },
              {
                ""computedUserset"": {
                  ""object"": """",
                  ""relation"": ""maintainer""
                }
              },
              {
                ""tupleToUserset"": {
                  ""tupleset"": {
                    ""object"": """",
                    ""relation"": ""owner""
                  },
                  ""computedUserset"": {
                    ""object"": """",
                    ""relation"": ""repo_writer""
                  }
                }
              }
            ]
          }
        }
      },
      ""metadata"": {
        ""relations"": {
          ""admin"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""team"",
                ""relation"": ""member""
              }
            ]
          },
          ""maintainer"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""team"",
                ""relation"": ""member""
              }
            ]
          },
          ""owner"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""organization""
              }
            ]
          },
          ""reader"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""team"",
                ""relation"": ""member""
              }
            ]
          },
          ""triager"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""team"",
                ""relation"": ""member""
              }
            ]
          },
          ""writer"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""team"",
                ""relation"": ""member""
              }
            ]
          }
        }
      }
    },
    {
      ""type"": ""organization"",
      ""relations"": {
        ""member"": {
          ""union"": {
            ""child"": [
              {
                ""this"": {}
              },
              {
                ""computedUserset"": {
                  ""object"": """",
                  ""relation"": ""owner""
                }
              }
            ]
          }
        },
        ""owner"": {
          ""this"": {}
        },
        ""repo_admin"": {
          ""this"": {}
        },
        ""repo_reader"": {
          ""this"": {}
        },
        ""repo_writer"": {
          ""this"": {}
        }
      },
      ""metadata"": {
        ""relations"": {
          ""member"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              }
            ]
          },
          ""owner"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              }
            ]
          },
          ""repo_admin"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""organization"",
                ""relation"": ""member""
              }
            ]
          },
          ""repo_reader"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""organization"",
                ""relation"": ""member""
              }
            ]
          },
          ""repo_writer"": {
            ""directly_related_user_types"": [
              {
                ""type"": ""user""
              },
              {
                ""type"": ""organization"",
                ""relation"": ""member""
              }
            ]
          }
        }
      }
    }
  ],
  ""schema_version"": ""1.1""
}
```

This call 

```shell
curl --location 'http://localhost:8080/stores/01GR7A9GJPEHPSR95JBE1BV56V/list-objects' \
--header 'Content-Type: application/json' \
--data '{
    ""user"": ""user:bob"",
    ""relation"": ""member"",
    ""type"": ""team"",
    ""authorization_model_id"": ""01GK2Z8MD8CF9F620PPR3KBAFV"" <---------- non-existent
}'
```

throws

```
{
    ""code"": ""internal_error"",
    ""message"": ""Internal Server Error""
}
```

and the logs show ""not found""

> openfga  | 2023-03-02T00:03:21.629Z     ERROR   grpc_error      {""method"": ""/openfga.v1.OpenFGAService/ListObjects"", ""took"": ""844.462µs"", ""error"": ""not found"", ""public_error"": ""rpc error: code = Code(4000) desc = Internal Server Error""}
",兼容性问题,后端,未指定,未指定,False,69.0
586,synchronize concurrent access to `memory` storage iterators,closed,2023-03-01 18:11:36,2023-04-03 16:54:46,jon-whit,['bug'],0,"There exist iterators defined in the `pkg/storage/memory` package that are not safe for concurrent use.

https://github.com/openfga/openfga/blob/main/pkg/storage/memory/memory.go#L50-L58 - is one example

If multiple goroutines use an iterator then one goroutine will mutate the underlying iterators tuples, and this will cause a Go runtime data race.",性能问题,数据库,未指定,未指定,False,32.0
576,One of the response objects in ListObjects returns Check->false,closed,2023-02-27 19:27:03,2023-03-01 22:21:21,miparnisari,['bug'],0,"With the following model

```python
model
  schema 1.1
type user
type folder
  relations
    define owner: [user]
    define viewer: [user,user:*] or owner
type document
  relations
    define can_read: viewer from parent
    define parent: [document,folder]
    define viewer: [user,user:*]
```

The following list objects request  

```json
{
    ""type"": ""document"",
    ""relation"": ""can_read"",
    ""user"": ""user:anne"",
    ""contextual_tuples"": {
        ""tuple_keys"": [
            {
                ""object"": ""folder:a"",
                ""relation"": ""owner"",
                ""user"": ""user:anne""
            },
            {
                ""object"": ""document:c"",
                ""relation"": ""parent"",
                ""user"": ""folder:a""
            },
            {
                ""object"": ""document:d"",
                ""relation"": ""parent"",
                ""user"": ""document:c""
            }
        ]
    }
}
```

will return `{document:c, document:d}`. 

But `document:d` should not be returned as `Check(document:d#can_read@user:anne)` returns `false`.  

_Originally posted by @adriantam in https://github.com/openfga/openfga/issues/571#issuecomment-1442288119_
            ",其他,文档,未指定,未指定,False,2.0
571,runtime error: invalid memory address or nil pointer dereference,closed,2023-02-23 09:40:57,2023-03-15 17:11:53,wemod123,['bug'],6,"Version: 0.3.7

When call the `../list-objects` API, get below errors in console
```
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xd54520]
goroutine 161 [running]:
github.com/openfga/openfga/pkg/typesystem.RewriteContainsSelf.func1(0x30?)
/home/runner/work/openfga/openfga/pkg/typesystem/typesystem.go:909
github.com/openfga/openfga/pkg/typesystem.WalkUsersetRewrite(0x0, 0x11127a8)
/home/runner/work/openfga/openfga/pkg/typesystem/typesystem.go:1101 +0x2d
github.com/openfga/openfga/pkg/typesystem.RewriteContainsSelf(0xc00071ba60?)
/home/runner/work/openfga/openfga/pkg/typesystem/typesystem.go:908 +0x25
github.com/openfga/openfga/pkg/typesystem.(*TypeSystem).IsDirectlyAssignable(...)
/home/runner/work/openfga/openfga/pkg/typesystem/typesystem.go:901
github.com/openfga/openfga/internal/graph.(*ConnectedObjectGraph).findIngressesWithRewrite(0xc00071ba60, 0xc00071a530, 0xc00071bd38, 0xc0006ce140?, 0xf?)
/home/runner/work/openfga/openfga/internal/graph/graph.go:202 +0xdad
github.com/openfga/openfga/internal/graph.(*ConnectedObjectGraph).findIngressesWithRewrite(0xc00071ba60, 0xc00071a530, 0xc00071bd38, 0xc0006170f8?, 0x5?)
/home/runner/work/openfga/openfga/internal/graph/graph.go:233 +0xbaa
...
...
...
/home/runner/work/openfga/openfga/internal/graph/graph.go:129 +0x1cf
github.com/openfga/openfga/internal/graph.(*ConnectedObjectGraph).RelationshipIngresses(...)
/home/runner/work/openfga/openfga/internal/graph/graph.go:113
github.com/openfga/openfga/pkg/server/commands.(*ConnectedObjectsCommand).streamedConnectedObjects(0xc00061cc00, {0x1245370, 0xc000795d80}, 0xc000516780, 0xc0000a4240, 0xc000792450, 0xc00061736c)
/home/runner/work/openfga/openfga/pkg/server/commands/connected_objects.go:158 +0xcb7
github.com/openfga/openfga/pkg/server/commands.(*ConnectedObjectsCommand).reverseExpandTupleToUserset.func1()
/home/runner/work/openfga/openfga/pkg/server/commands/connected_objects.go:390 +0x1e6
golang.org/x/sync/errgroup.(*Group).Go.func1()
/home/runner/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 +0x64
created by golang.org/x/sync/errgroup.(*Group).Go
/home/runner/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:72 +0xa5
```

Seems just simply assigns the value of pointer with nil.

This fatal error will cause downtime and restart server.
",性能问题,后端,未指定,未指定,False,20.0
557,[v0.3.6] ListObjects endpoint not working correctly after new version.,closed,2023-02-18 12:22:59,2023-02-23 11:02:05,xXAvoraXx,['bug'],6,"Hello, I've described the problem here https://github.com/orgs/openfga/discussions/113#discussioncomment-5017936 before, I'm moving this issue to a topic.

In v0.3.4 before the update, the ListObjects endpoint was returning a list as expected, but with the new update (v0.3.6) the ListObjects endpoint is returning empty. Below are all scenarios and requirements.

The scenario of the diagram above is:

plan-> feature -> permission
plan -> feature -> page
plan -> feature -> page -> component

businesses subscribe to a plan_group type.
`plan_group:businessId/planId`

Each resource_access_groub has a business parent.
`resource_access_group:businessId`

Each resource_access_group is associated with a permission_access.
`permission_access:businessId/permissionName`
`resource_access_group:businessId`

Each permission_access type is associated with a permission type.
`permission_access:businessId/permissionName`

The access of the permission_access type is restricted according to some scenarios with;

- `business_member`: The person who wants to access the permission type in the context context must be a business member.

- `can_member_access`: Must be a member of the business and have access to the feature type of the business.

- `can_owner_access`: It must be the owner of the business and have access to the feature type of the business.

- `business_role_member`: Must be both a business member and have a role.

- `can_access_individual_or_role`: It must be able to access the role or directly.

- `can_access_member_and_individual_or_role`: Must be both a member of the business and have access to the feature type of the business, and must be able to access or directly access the Role.

- `can_access`: Must be both a business member and able to access the business's feature type and be able to access or directly access the Role, or Both should be a business owner and have access to the business's feature type.


The purpose is;

We offer plans to our businesses that are associated with a feature. Properties are related to permissions. Permissions keep our endpoints, for example;
`permission:UserService.GetUser`

Every business has its own user pool. Businesses can reduce and increase the authorizations of their users. I'm using the permission_access type for this. But businesses' access to permissions for plans must be managed by system administrators. The point that provides this is permission and feature.

Businesses can assign or reduce permissions to their users based on the plans they have. Businesses can both authorize individually and authorize by role.

A user can be a user in more than one business.

The business owner can access directly if the user has the owner relationship with the business type.

75 permissions are registered in permission_repo.

If the business has the highest plan: 75 permission_accesses are registered for the business.

Every registered permission_access type is registered in resource_access_group. 75 more relationships are registered.

For permissions if the owner defines their user individual access rather than role. 75 permission_accesses are registered with the [user] relationship for the user it defines.

Roughly, a business has about 255 to 350 relationship tuples. This number will increase as business users are added.

---------

This is my schema.

```
model
  schema 1.1

type business
  relations
    define owner_member: [user] and member from user_repo and user_in_context
    define business_member: [user] and member from user_repo and user_in_context
    define user_in_context: [user] but not blocked
    define user_repo: [user_repo]
    define blocked: [user]
    
type plan
  relations
    define associated_plan_group: [plan_group]
    define subscriber_member: member from associated_plan_group
    define subscriber_owner_member: owner from associated_plan_group
    define subscriber_business: subscriber from associated_plan_group
type plan_group
  relations
    define member: business_member from subscriber
    define subscriber: [business]
    define owner: owner_member from subscriber

type plan_repo
  relations
    define associated_plan: [plan]

type feature
  relations
    define associated_plan: [plan]
    define feature_member: subscriber_member from associated_plan or associated_business
    define feature_owner_member: subscriber_owner_member from associated_plan or associated_business
    
    define associated_business: [business]
    
    define subscriber_business: subscriber_business from associated_plan or associated_business

type feature_repo
  relations
    define associated_feature: [feature]

type resource_access_group
  relations
    define parent_business: [business]
    define member: business_member from parent_business or owner_member from parent_business

type permission
  relations
    define associated_feature: [feature]
    define feature_access: feature_member from associated_feature
    define feature_owner_access: feature_owner_member from associated_feature
    define subscriber_business: subscriber_business from associated_feature
    
type permission_repo
  relations
    define associated_permission: [permission]

type permission_access
  relations
    define associated_permission: [permission]
    define associated_resource_access_group: [resource_access_group]
    define blocked: [user] and member from associated_resource_access_group
    define access: [user] and business_member
    
    define business_member: member from associated_resource_access_group but not blocked
    
    define can_member_access: business_member and feature_access from associated_permission

    define can_owner_access: business_member and feature_owner_access from associated_permission
    
    define associated_business_role: [business_role#business_role_member] 
    define business_role_member: associated_business_role and business_member
    define can_access_individual_or_role: access or business_role_member
    
    define can_access_member_and_individual_or_role: can_member_access and can_access_individual_or_role
    
    define can_access: can_access_member_and_individual_or_role or can_owner_access
    
    define permission_from_plan: subscriber_business from associated_permission
    
    define permission_from_resource: parent_business from associated_resource_access_group
    
    define permission_business: permission_from_plan and permission_from_resource
    
type page
  relations
    define associated_feature: [feature]
    define feature_access: feature_member from associated_feature
    define feature_owner_access: feature_owner_member from associated_feature
    define subscriber_business: subscriber_business from associated_feature

type page_repo
  relations
    define associated_page: [page] 
    
type page_access
  relations
    define associated_page: [page]
    define associated_resource_access_group: [resource_access_group]
    define blocked: [user] and member from associated_resource_access_group
    define access: [user] and business_member
    
    define business_member: member from associated_resource_access_group but not blocked
    
    define can_member_access: business_member and feature_access from associated_page

    define can_owner_access: business_member and feature_owner_access from associated_page
    
    define associated_business_role: [business_role#business_role_member] 
    define business_role_member: associated_business_role and business_member
    define can_access_individual_or_role: access or business_role_member
    
    define can_access_member_and_individual_or_role: can_member_access and can_access_individual_or_role
    
    define can_access: can_access_member_and_individual_or_role or can_owner_access
    
    define page_from_plan: subscriber_business from associated_page
    
    define page_from_resource: parent_business from associated_resource_access_group
    
    define page_business: page_from_plan and page_from_resource

type component
  relations
    define associated_page: [page]
    define feature_access: feature_access from associated_page
    define feature_owner_access: feature_owner_access from associated_page
    define subscriber_business: subscriber_business from associated_page

type component_repo
  relations
    define associated_component: [component]
    
type component_access
  relations
    define associated_component: [component]
    define associated_resource_access_group: [resource_access_group]
    define blocked: [user] and member from associated_resource_access_group
    define access: [user] and business_member
    
    define business_member: member from associated_resource_access_group but not blocked
    
    define can_member_access: business_member and feature_access from associated_component

    define can_owner_access: business_member and feature_owner_access from associated_component
    
    define associated_business_role: [business_role#business_role_member] 
    define business_role_member: associated_business_role and business_member
    define can_access_individual_or_role: access or business_role_member
    
    define can_access_member_and_individual_or_role: can_member_access and can_access_individual_or_role
    
    define can_access: can_access_member_and_individual_or_role or can_owner_access
    
    define component_from_plan: subscriber_business from associated_component
    
    define component_from_resource: parent_business from associated_resource_access_group
    
    define component_business: component_from_plan and component_from_resource

type business_role
  relations
    define member: [user]
    define business_role_member: member and business_member from parent
    define parent: [business]

    
type user
type user_repo
  relations
    define integrity: [integrity]
    define member: [user] and member from integrity
    
type integrity
  relations
    define member: [user] and member_in_context
    define member_in_context: [user]
```

------

Below you can find the code that creates the test data in c# language.

The check endpoint below should return true. This endpoint returns true when I test it.

stores/01GSJ49S8KE94F4KX1S94PTKYS/check

check endpoint is working correctly.
```
{
    ""tuple_key"": {
        ""user"": ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"",
        ""relation"": ""can_access"",
        ""object"": ""permission_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/PermissionService.TEST79""
    },
    ""contextual_tuples"": {
        ""tuple_keys"": [
            {
                ""user"": ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"",
                ""relation"": ""member_in_context"",
                ""object"": ""integrity:b4da2325-4e2c-40dd-a971-f6184496c7eb""
            },
            {
                ""user"": ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"",
                ""relation"": ""user_in_context"",
                ""object"": ""business:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1""
            }
        ]
    },
    ""authorization_model_id"": ""01GSJ4A085K0KS8SS014Y1TXES""
}
```

The following ListObjects endpoint should return full. It returns empty when I test it.
stores/01GSJ49S8KE94F4KX1S94PTKYS/list-objects
Listobjects endpoint is not working correctly.
```
{
    ""authorization_model_id"": ""01GSJ4A085K0KS8SS014Y1TXES"",
    ""type"": ""permission_access"",
    ""relation"": ""can_access"",
    ""user"": ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"",
    ""contextual_tuples"": {
        ""tuple_keys"": [
            {
                ""user"": ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"",
                ""relation"": ""member_in_context"",
                ""object"": ""integrity:b4da2325-4e2c-40dd-a971-f6184496c7eb""
            },
            {
                ""user"": ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"",
                ""relation"": ""user_in_context"",
                ""object"": ""business:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1""
            }
        ]
    }
}
```

Below you can find the code that creates the test data in c# language.

```
public static async Task CreateTestTuples(this IApplicationBuilder app)
        {
            using (var scope = app.ApplicationServices.CreateScope())
            {
                var fgaManager = (IFgaHelper)scope.ServiceProvider.GetRequiredService(typeof(IFgaHelper));

                //configuration.GetSection(""FgaOptions"").Get<FgaOptions>();
                var configuration = (IConfiguration)scope.ServiceProvider.GetService(typeof(IConfiguration));

                var fgaOptions = configuration.GetSection(""FgaOptions"").Get<FgaOptions>();

                var plans = new List<string>()
                {
                    ""plan:basic"",
                    ""plan:pro"",
                    ""plan:extreme""
                };

                var features = new List<string>()
                {
                    ""feature:receipt"",
                    ""feature:tariff"",
                    ""feature:order-track"",
                    ""feature:multi-user"",
                    ""feature:report"",
                    ""feature:business-person"",
                    ""feature:kitchen"",
                    ""feature:product-stock"",
                    ""feature:multi-business"",
                    ""feature:product"",
                };

                var pages = new List<string>()
                {
                    ""page:welcome"",
                    ""page:hall"",
                    ""page:business"",
                    ""page:business/users"",
                    ""page:business/users/user"",
                    ""page:business/roles"",
                    ""page:business/roles/role"",
                    ""page:business/settings"",
                    ""page:people"",
                    ""page:products"",
                    ""page:tables"",
                    ""page:tariffs"",
                    ""page:kitchen"",
                    ""page:reports"",
                    ""page:reports/receipts"",
                    ""page:reports/product"",
                    ""page:reports/person"",
                    ""page:receipt"",
                    ""page:receipt/orders""
                };

                var tupleKeys = new List<TupleKey>();

                foreach (var feature in features)
                {
                    tupleKeys.Add(new() { User = feature, Relation = ""associated_feature"", Object = ""feature_repo:BUSINESS"" });
                }

                foreach (var plan in plans)
                {
                    tupleKeys.Add(new() { User = plan, Relation = ""associated_plan"", Object = ""plan_repo:GLOBAL"" });
                }

                foreach (var page in pages)
                {
                    tupleKeys.Add(new() { User = page, Relation = ""associated_page"", Object = ""page_repo:BUSINESS"" });
                }

                // TEST PERMISSIONS
                for (int index = 0; index < 80; index++)
                {
                    tupleKeys.Add(new() { User = ""permission:PermissionService.TEST"" + index, Relation = ""associated_permission"", Object = ""permission_repo:BUSINESS"" });

                }

                //plan:basic
                for (int index = 0; index < 4; index++)
                {
                    tupleKeys.Add(new() { User = plans[0], Relation = ""associated_plan"", Object = features[index] });
                }

                //plan:pro
                for (int index = 0; index < 8; index++)
                {
                    tupleKeys.Add(new() { User = plans[1], Relation = ""associated_plan"", Object = features[index] });
                }

                //plan:extreme
                for (int index = 0; index < 10; index++)
                {
                    tupleKeys.Add(new() { User = plans[2], Relation = ""associated_plan"", Object = features[index] });
                }

                int permInitCount = 0;
                int permFinish = 8;
                foreach (var feature in features)
                {
                    for (int b = permInitCount; b < permFinish; b++)
                    {
                        tupleKeys.Add(new() { User = feature, Relation = ""associated_feature"", Object = ""permission:PermissionService.TEST"" + b });
                    }

                    permInitCount += 8;
                    permFinish += 8;
                }

                tupleKeys.Add(new() { User = ""feature:multi-user"", Relation = ""associated_feature"", Object = ""page:business/users"" });
                tupleKeys.Add(new() { User = ""feature:multi-user"", Relation = ""associated_feature"", Object = ""page:business/users/user"" });
                tupleKeys.Add(new() { User = ""feature:multi-user"", Relation = ""associated_feature"", Object = ""page:business/roles"" });
                tupleKeys.Add(new() { User = ""feature:multi-user"", Relation = ""associated_feature"", Object = ""page:business/roles/role"" });
                tupleKeys.Add(new() { User = ""feature:business"", Relation = ""associated_feature"", Object = ""page:business/settings"" });
                tupleKeys.Add(new() { User = ""feature:business-person"", Relation = ""associated_feature"", Object = ""page:people"" });
                tupleKeys.Add(new() { User = ""feature:kitchen"", Relation = ""associated_feature"", Object = ""page:kitchen"" });
                tupleKeys.Add(new() { User = ""feature:report"", Relation = ""associated_feature"", Object = ""page:reports"" });
                tupleKeys.Add(new() { User = ""feature:report"", Relation = ""associated_feature"", Object = ""page:reports/receipts"" });
                tupleKeys.Add(new() { User = ""feature:report"", Relation = ""associated_feature"", Object = ""page:reports/product"" });
                tupleKeys.Add(new() { User = ""feature:business-person"", Relation = ""associated_feature"", Object = ""page:reports/person"" });



                for (int index = 0; index < 20; index++)
                {
                    var businessId = Guid.NewGuid().ToString();
                    var ownerId = Guid.NewGuid().ToString();
                    tupleKeys.Add(new() { User = ""user:"" + ownerId, Relation = ""member"", Object = ""user_repo:GLOBAL"" });
                    tupleKeys.Add(new() { User = ""user:"" + ownerId, Relation = ""owner_member"", Object = ""business:"" + businessId });
                    tupleKeys.Add(new() { User = ""business:"" + businessId, Relation = ""parent_business"", Object = ""resource_access_group:"" + businessId });
                    tupleKeys.Add(new() { User = ""user_repo:GLOBAL"", Relation = ""user_repo"", Object = ""business:"" + businessId });
                }

                // users without business
                for (int index = 0; index < 10; index++)
                {
                    var userId = Guid.NewGuid().ToString();
                    tupleKeys.Add(new() { User = ""user:"" + userId, Relation = ""member"", Object = ""user_repo:GLOBAL"" });
                }

                // scenerio business
                tupleKeys.Add(new() { User = ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"", Relation = ""member"", Object = ""user_repo:GLOBAL"" });
                tupleKeys.Add(new() { User = ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"", Relation = ""owner_member"", Object = ""business:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"" });
                tupleKeys.Add(new() { User = ""business:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""parent_business"", Object = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"" });
                tupleKeys.Add(new() { User = ""user_repo:GLOBAL"", Relation = ""user_repo"", Object = ""business:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"" });

                tupleKeys.Add(new() { User = ""user:d1ce1fdd-c013-44cb-b4c8-d5088b70bfd2"", Relation = ""member"", Object = ""integrity:b4da2325-4e2c-40dd-a971-f6184496c7eb"" });
                tupleKeys.Add(new() { User = ""integrity:b4da2325-4e2c-40dd-a971-f6184496c7eb"", Relation = ""integrity"", Object = ""user_repo:GLOBAL"" });

                //subscribe to plan
                tupleKeys.Add(new() { User = ""business:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""subscriber"", Object = ""plan_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/extreme"" });
                tupleKeys.Add(new() { User = ""plan_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/extreme"", Relation = ""associated_plan_group"", Object = ""plan:extreme"" });

                // permissions
                for (int index = 0; index < 80; index++)
                {
                    tupleKeys.Add(new() { User = ""permission:PermissionService.TEST"" + index, Relation = ""associated_permission"", Object = ""permission_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/PermissionService.TEST"" + index });
                    tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""permission_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/PermissionService.TEST"" + index });
                }


                //pages
                tupleKeys.Add(new() { User = ""page:welcome"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/welcome"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/welcome"" });



                tupleKeys.Add(new() { User = ""page:hall"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/hall"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/hall"" });


                tupleKeys.Add(new() { User = ""page:business"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business"" });


                tupleKeys.Add(new() { User = ""page:business/users"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/users"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/users"" });


                tupleKeys.Add(new() { User = ""page:business/users/user"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/users/user"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/users/user"" });

                tupleKeys.Add(new() { User = ""page:business/roles"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/roles"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/roles"" });

                tupleKeys.Add(new() { User = ""page:business/roles/role"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/roles/role"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/roles/role"" });

                tupleKeys.Add(new() { User = ""page:business/settings"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/settings"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/business/settings"" });

                tupleKeys.Add(new() { User = ""page:people"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/people"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/people"" });


                tupleKeys.Add(new() { User = ""page:products"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/products"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/products"" });

                tupleKeys.Add(new() { User = ""page:tables"", Relation = ""associated_page"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/tables"" });
                tupleKeys.Add(new() { User = ""resource_access_group:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1"", Relation = ""associated_resource_access_group"", Object = ""page_access:6a7ffbcb-2296-49ac-80da-b0e237a5c5a1/tables"" });



                var initialTuplesPartition = tupleKeys.Partition(100);

                foreach (var tuples in initialTuplesPartition)
                {
                    await fgaManager.Write(new WriteRequest
                    {
                        AuthorizationModelId = fgaOptions.AuthorizationModelId,
                        Writes = new TupleKeys(tuples)
                    });
                }
            }
        }
```
Env vars.
OPENFGA_DATASTORE_ENGINE postgres
OPENFGA_DATASTORE_URI postgres://postgres:password@postgres:5432/postgres?sslmode=disable
OPENFGA_PLAYGROUND_ENABLED false
OPENFGA_AUTHN_METHOD preshared
OPENFGA_AUTHN_PRESHARED_KEYS keys1
OPENFGA_RESOLVE_NODE_LIMIT 120
OPENFGA_LIST_OBJECTS_DEADLINE 100s
OPENFGA_HTTP_UPSTREAM_TIMEOUT 110s",功能错误,前端,未指定,未指定,False,4.0
540,Check internal error when Authorization Model is valid but no such model,closed,2023-02-14 16:32:08,2023-02-14 18:51:47,adriantam,['bug'],0,"When I call check with an authorization model ID that is valid (i.e., that fits the format) but there is no such model, check will return 500 Internal Error

For example:
POST http://localhost:8080/stores/{{store_id}}/check with 
```
{
    ""tuple_key"": {
        ""object"": ""doc:X"",
        ""relation"": ""can_read"",
        ""user"": ""user:1""
    }, 
     ""authorization_model_id"": ""01G5JAVJ41T49E9TT3SKVS7X1J""
}
```

Note that this issue only happens with check, but not expand.",安全问题,认证,未指定,未指定,False,0.0
531,Internal error for check in certain model with schema 1.0 ,closed,2023-02-13 15:55:24,2023-02-13 19:32:36,adriantam,['bug'],4,"For the following model

```
type rule
  relations
    define assigned as self
    define has_assigned as u1 from assigned or u2 from assigned
type parent1
  relations
    define role as self
    define u1 as role
type parent2
  relations
    define role as self
    define u2 as role
type user
```

the following check will result in internal error
```

{
    ""tuple_key"": {
        ""object"": ""rule:X"",
        ""relation"": ""has_assigned"",
        ""user"": ""user:1""
    },
    ""contextual_tuples"": {
        ""tuple_keys"": [
            {
                ""user"":""user:1"",
                ""relation"": ""role"",
                ""object"": ""parent2:a""
            },
            {
                ""user"": ""parent2:a"",
                ""relation"": ""assigned"",
                ""object"": ""rule:X""
            }
        ]
    }
}

```

Note that we cannot reproduce the issue in schema 1.1 as the following model is invalid due to type restriction validation

```
model
  schema 1.1
type rule
  relations
    define assigned: [parent1, parent2]
    define has_assigned: u1 from assigned or u2 from assigned
type parent1
  relations
    define role: [user]
    define u1: role
type parent2
  relations
    define role: [user]
    define u2: role
type user

```

",崩溃,其他,未指定,未指定,False,0.0
524,bug: unoptimized ListObjects fails to report permitted objects,closed,2023-02-09 17:02:40,2023-02-09 23:11:33,jon-whit,['bug'],0,"## Steps to Reproduce
`docker compose up`

Write the following authorization model:
```
model
  schema 1.0

type document
  relations
    define viewer as self
```

Write the following tuples:
`document:1#viewer@jon`

Call `ListObjects(document#viewer, jon)`

Notice you get an empty result set instead of an error:
```
{
    ""objects"": []
}
```

We need to change the behavior implemented here https://github.com/openfga/openfga/blob/main/pkg/server/commands/list_objects.go#L330-L333 to return an error promptly in the event that `ResolveCheck` fails. Ignoring an error and trying to complete the request despite the error is not in the best interest of consistency, because at best it leads to potential false reports. If you have access to an object and that object's Check fails, then you'll get an empty object list back, and that's not correct.

OpenFGA, as a system, should prioritize correctness over the attempt to fulfill the request at any cost. If an error happens during the lifetime of a request, and the system cannot correctly guarantee the results it returns as a result of it, then the server should return an error. I'll create a ticket for this.",安全问题,后端,未指定,未指定,True,0.0
505,list-objects API crashes under parent-child model,closed,2023-02-03 04:11:52,2023-02-03 19:49:48,wonderbeyond,['bug'],2,"I am using openfga v0.3.3 together with postgres:14.

The model is

```
model
  schema 1.1
type user
type node
  relations
    define parent: [node]
    define creator: [user]
    define editor: [user] or creator or editor from parent
    define viewer: [user] or editor or viewer from parent
```

With any relation tuples or not, such a `list-objects` request

```
{
  ""authorization_model_id"": ""{{authorization_model_id}}"",
  ""type"": ""node"",
  ""relation"": ""editor"",
  ""user"": ""user:wonder""
}
```

results

```
[500] {
    ""code"": ""deadline_exceeded"",
    ""message"": ""context deadline exceeded""
}
```

BTW, the `check` API works through ""parent""s exactly as I expect.",安全问题,后端,未指定,未指定,False,0.0
499,authorization model id is not available in some traces,closed,2023-02-02 14:35:39,2023-02-03 12:12:33,adriantam,['bug'],0,"The authorization model id is not available in some traces, such as ListObject.",安全问题,认证,未指定,未指定,False,0.0
497,OpenFGA v0.3.3: New environment variables are not being respected,closed,2023-02-01 20:37:30,2023-02-02 20:04:39,rhamzeh,['bug'],0,"**OpenFGA version**: `v0.3.3`
**Reporter**: @xXAvoraXx
**Details**:
The user updated their env variables to our new ones (see [config-schema.json](https://github.com/openfga/openfga/blob/main/.config-schema.json), openfga/openfga#472), e.g.:
- `OPENFGA_RESOLVE_NODE_LIMIT` instead of `OPENFGA_RESOLVENODELIMIT`
- `OPENFGA_LIST_OBJECTS_DEADLINE` instead of `OPENFGA_LISTOBJECTSDEADLINE`

But that caused OpenFGA to ignore those config values and use the default ones instead.",兼容性问题,其他,未指定,未指定,False,0.0
456,Type restrictions not respected in Write API for object types,closed,2023-01-17 17:32:54,2023-01-17 19:55:24,adriantam,['bug'],0,"For the following model

```
model
  schema 1.1
type user
type group
  relations
    define member: [user]
type resource
  relations
    define writer: [user,user:*,group#member]
```

I am allowed to write tuples `{resource:bad#writer@group:fga}`

I expect write to fail because only `group#member`, `user`, or `user:*` are the allowed type restrictions.",崩溃,后端,未指定,未指定,False,0.0
449,mysql: migrations fail to apply when sql_mode set to NO_ZERO_IN_DATE,closed,2023-01-06 20:23:09,2024-02-26 19:14:26,easyCZ,['bug'],7,"With a MySQL database, which has the `sql_mode`[[ref](https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_no_zero_date)] set to `NO_ZERO_IN_DATE` the migrations will fail because they do not specify a default value for TIMESTAMP.

```
2023/01/06 20:13:24 ERROR 001_initialize_schema.sql: failed to run SQL migration: failed to execute SQL query ""CREATE TABLE store (\n\tid CHAR(26) PRIMARY KEY,\n    name VARCHAR(64) NOT NULL,\n\tcreated_at TIMESTAMP NOT NULL,\n\tupdated_at TIMESTAMP,\n\tdeleted_at TIMESTAMP\n);\n"": Error 1067 (42000): Invalid default value for 'updated_at'
```

I believe a possible fix for this is to set the TIMESTAMP fields with a default value, which could be Unix 0 timestamp.",崩溃,前端,未指定,未指定,False,415.0
447,"mysql: ""driver bad connection"" build failures",closed,2023-01-05 21:53:25,2023-01-10 22:41:35,jon-whit,['bug'],0,"Occasionally our CI builds fail with this error

<img width=""813"" alt=""Screen Shot 2023-01-05 at 2 51 41 PM"" src=""https://user-images.githubusercontent.com/2899204/210887015-0439aba5-6c54-4d19-bf60-a50cec19dc9b.png"">

We should fix this issue to avoid test flakes.",崩溃,前端,未指定,未指定,False,5.0
442,HTTP status 400 when relation not found,closed,2023-01-02 11:02:06,2023-11-06 20:26:55,psadovsky,"['bug', 'good first issue', 'help wanted']",6,"First of all, there has been changed error ""relation_not_found"" to ""validation_error"", I am not sure if this concept is correct because ""relation_not_found"" makes more sense than ""validation_error"". The ""validation_error"" seems more general and it can encapsulate much more errors.",崩溃,其他,未指定,未指定,False,308.0
421,Configuration property: maxTuplesPerWrite does not work,closed,2022-12-19 13:06:34,2022-12-19 23:36:48,psadovsky,['bug'],5,"The default value according to this file https://github.com/openfga/openfga/blob/main/.config-schema.json is **100**. When I try to write more than 25 tuples within Postgres as storage, then I get:

`
{
    ""code"": ""tuple_keys_too_many_or_too_few_items"",
    ""message"": ""invalid TupleKeys.TupleKeys: value must contain between 1 and 25 items, inclusive""
}
`",数据问题,数据库,未指定,未指定,False,0.0
415,`user` values such as `user:*#viewer` should be invalid,closed,2022-12-15 22:50:05,2023-01-05 22:29:52,jon-whit,['bug'],1,"Using OpenFGA `v0.3.0` and noticed the user value `user:*#viewer` is treated as a valid user for 1.1 models.

To reproduce

```
export STORE_ID=$(curl -s --request POST ""http://localhost:8080/stores"" \
--header 'Content-Type: application/json' \
--data-raw '{
    ""name"": ""openfga-demo""
}' | jq --raw-output '.id')
```

```
curl -s --request POST ""http://localhost:8080/stores/$STORE_ID/authorization-models"" \
--header 'Content-Type: application/json' \
--data-raw '{
  ""schema_version"": ""1.1"",
  ""type_definitions"": [
    {
      ""type"": ""user"",
      ""relations"": {
          ""viewer"": {
              ""this"": {}
          }
      },
      ""metadata"": {
          ""relations"": {
              ""viewer"": {
                  ""directly_related_user_types"": [
                      {""type"": ""user""}
                  ]
              }
          }
      }
    },
    {
      ""type"": ""document"",
      ""relations"": {
          ""viewer"": {
              ""this"": {}
          }
      },
      ""metadata"": {
          ""relations"": {
              ""viewer"": {
                  ""directly_related_user_types"": [
                      {""type"": ""user""}
                  ]
              }
          }
      }
    }
  ]
}'
```

```
curl -s --request POST ""http://localhost:8080/stores/$STORE_ID/check"" \
--header 'Content-Type: application/json' \
--data-raw '{
    ""tuple_key"": {
        ""object"": ""document:roadmap"",
        ""relation"": ""viewer"",
        ""user"": ""user:*#viewer""
    }
}'
```
I expected a validation error but didn't receive one.",兼容性问题,数据库,未指定,未指定,True,20.0
411,`v0.3.0`: Write validation is being performed on assertions,closed,2022-12-15 01:12:41,2022-12-15 15:56:39,rhamzeh,['bug'],2,"### Affected Version
`v0.3.0`

### Model Used
```py
model
  schema 1.1
type user
type doc
  relations
    define owner: [user]
    define can_share: owner
```

### Steps To Reproduce
```sh
curl -X PUT 'http://127.0.0.1:8080/stores/01GM9JTY114HWA8XRCDG46K3PY/assertions/01GM9R4RGBPQC66CGPYA499G93' \
  -H 'Content-Type: application/json' \
  -d '{""assertions"":[{""tuple_key"":{""user"":""user:henry"",""relation"":""can_share"",""object"":""doc:roadmap""},""expectation"":true}]}'
```

### Response Expected
204 No Content

### Response Received
400 Bad Request
```json
{
  ""code"": ""validation_error"",
  ""message"": ""Invalid tuple 'doc:roadmap#can_share@user:henry'. Reason: type 'user' is not an allowed type restriction for 'doc#can_share'""
}

```


Reported by [kdubb on Discord](https://discord.com/channels/759188666072825867/1052745870786973726) ",兼容性问题,文档,未指定,未指定,True,0.0
404,docker image v0.2.5 logs errors occasionally,closed,2022-12-13 12:37:46,2023-03-02 18:30:25,MidasLamb,"['bug', 'waiting-for-feedback']",12,"I've just checked the openfga logs in our k8s cluster, and I noticed the following error being logged quite a few times:
```
2022-12-13T12:33:26.532Z	ERROR	check_error	{""error"": ""rpc error: code = Code(4000) desc = Internal Server Error""}
github.com/openfga/openfga/pkg/logger.(*ZapLogger).ErrorWithContext
	/home/runner/work/openfga/openfga/pkg/logger/logger.go:75
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).internalCheck
	/home/runner/work/openfga/openfga/server/commands/list_objects.go:309
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).performChecks.func1
	/home/runner/work/openfga/openfga/server/commands/list_objects.go:277
golang.org/x/sync/errgroup.(*Group).Go.func1
	/home/runner/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75
```

I'm not entirely sure why, because functionally everything seems fine as far as we can tell.
Making this issue more in a ""heads-up"" kind of way.",功能错误,前端,未指定,未指定,False,79.0
380,Postgres connections are created and closed for each request,closed,2022-12-06 20:16:45,2023-03-27 17:57:17,OysteinVesth,"['bug', 'waiting-for-feedback']",20,"## Bug/issue

After upgrading from `v0.2.2` to `v0.2.3` we've noticed some weird behaver, an increased amount of calls against OpenFGA have become slow (over 800ms, our client times out after that).

The postgres logs in our AWS Aurora instance shows that OpenFGA is creating and closing connections _very_ often, looks like it connects and disconnects on every request.

We first saw this problem when we went from `v0.2.1` to `v0.2.5`, but after some testing it looks like the change happened in version `v0.2.3`, might be related to the pgx upgrade.

I suspect that the decrease in performance comes from creating the connection/authenticating each time. Is there an issue with connection pooling?

### Logs and connection URI

The postgres disconnection logs for `v0.2.2` looks like this:
```sh
LOG:  disconnection: session time: 1:13:33.121 user=postgres database=openfga host=10.1.1.252 port=43411
```

After deploying `v0.2.3` we get a bunch of these in the postgres logs, with connections closing in milliseconds (often one digit ms): 
```sh
LOG:  disconnection: session time: 0:00:00.110 user=postgres database=openfga host=10.1.1.22 port=28235
```

We've made no other changes than the upgrade, and when I revert back to `v0.2.2` the issue is gone.

We use a plain postgres URI without any params/options: 
```sh
postgres://XXX:XXX@XXX.rds.amazonaws.com:5432/openfga
```

Just let me know if you need any more details. We are currently running OpenFGA in production, so hoping this will be fixed - or that we can change this through config.",性能问题,数据库,未指定,未指定,False,110.0
365,ListObjects: Errors are being swallowed,closed,2022-11-28 18:03:08,2022-12-12 21:06:27,rhamzeh,['bug'],0,"Tested with: `v0.2.5`, ran through docker.
Tests:

```sh
# user empty
curl  -X POST 'http://localhost:8080/stores/01GJZNM5ETC4YK34ZZST97R39X/list-objects' \
-H ""Content-Type: application/json"" \
-d '{""user"": """", ""relation"":""reader"",""type"":""resource""}' | jq
# user invalid (note valid on schema 1.0)
curl  -X POST 'http://localhost:8080/stores/01GJZNM5ETC4YK34ZZST97R39X/list-objects' \
-H ""Content-Type: application/json"" \
-d '{""user"": ""as"", ""relation"":""reader"",""type"":""resource""}' | jq
# user type not found
curl  -X POST 'http://localhost:8080/stores/01GJZNM5ETC4YK34ZZST97R39X/list-objects' \
-H ""Content-Type: application/json"" \
-d '{""user"": ""as:asdadsa"", ""relation"":""reader"",""type"":""resource""}' | jq
# user not sent
curl  -X POST 'http://localhost:8080/stores/01GJZNM5ETC4YK34ZZST97R39X/list-objects' \
-H ""Content-Type: application/json"" \
-d '{""relation"":""reader"",""type"":""resource""}' | jq
```

In all these cases, the response was:
```json
{
  ""object_ids"": []
}
```

Internally, GRPC errors were being (sometimes) thrown and swallowed
```
{""error"": ""rpc error: code = Code(2009) desc = Invalid input. Make sure you provide a user, object and relation""}
github.com/openfga/openfga/pkg/logger.(*ZapLogger).ErrorWithContext
        /home/runner/work/openfga/openfga/pkg/logger/logger.go:75
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).internalCheck
        /home/runner/work/openfga/openfga/server/commands/list_objects.go:309
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).performChecks.func1
        /home/runner/work/openfga/openfga/server/commands/list_objects.go:277
golang.org/x/sync/errgroup.(*Group).Go.func1
        /home/runner/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75

```",崩溃,后端,未指定,未指定,False,14.0
354,ListObjects returning IDs not from the chosen type when contextual tuples are involved,closed,2022-11-18 22:20:18,2022-12-13 22:37:16,rhamzeh,['bug'],2,"To reproduce:

```py
type user
type resource
  relations
    define parent as self
    define viewer as viewer from parent 
type folder
  relations
    define allowed as self
    define viewer as allowed
```

With the following tuples:
```yaml
- user: folder:folder-1
  relation: parent
  object: resource:resource-1
```

Note that this issue does not appear when the relation definition is `define viewer as self or allowed` or `define viewer as self`, and it would appear if the relation definition is `define viewer as self and allowed`

To try this out, the sample store: https://play.fga.dev/stores/create/?id=01GJ41921A4W4A3DCN9A5JQEJ8

```sh
curl  -X POST 'https://api.playground.fga.dev/stores/01GJ41921A4W4A3DCN9A5JQEJ8/list-objects' \
-H ""Content-Type: application/json"" \
-d '{""user"": ""user:emily"", ""relation"":""viewer"",""type"":""resource"",""contextual_tuples"":{""tuple_keys"":[{""user"":""user:emily"", ""relation"":""allowed"", ""object"":""folder:folder-1""}]}}' | jq
```

Thanks to Suresh for raising this issue [on discord](https://discord.com/channels/759188666072825867/1042596768031973466)

<img width=""641"" alt=""Screen Shot 2022-11-18 at 5 15 02 PM"" src=""https://user-images.githubusercontent.com/536147/202812120-ae2a7df3-931d-4c15-bb81-26db4536ae59.png"">
",其他,后端,未指定,未指定,True,25.0
352,Incorrect build instruction in README.md,closed,2022-11-18 15:15:55,2022-11-18 15:47:38,adriantam,['bug'],0,"The current README suggests that building openfga involves

```
go build cmd/openfga/openfga.go
```

However, there is no `cmd/openfga/openfga.go`.  Instead, it is `cmd/openfga/main.go`

Instead of asking user to run `go build`, we can ask them to run `make build` for which we already configure the filename and output binary name.",功能错误,前端,未指定,未指定,False,0.0
338,Running playground locally tries to reference https://play.fga.dev causing CORS errors,open,2022-11-08 12:53:08,,jaymcguinness,['bug'],26,"Hi,

Just trying to run locally via Docker (both 0.2.4 and 0.2.5) and am getting this:

![image](https://user-images.githubusercontent.com/11387911/200567576-545cf7bb-584b-43e5-8d91-347658503711.png)

Btw - love this project!",崩溃,文档,未指定,未指定,False,
314,[Bug] OpenFGA returning 500 on ListObjects,closed,2022-10-26 19:55:17,2022-11-01 15:45:41,fschulte-eiwa,['bug'],5,"Hello, we are testing OpenFGA for a project and had some issues with the list_objects (normal) endpoint. Not missing data but server error.
Our tested model is as follows:

```py
type organization
  relations
    define admin as self
    define editor as self or admin
    define member as self or viewer
    define viewer as self or editor
type type_1
  relations
    define owner as self
    define editor as self or owner
    define viewer as self or editor
type type_2
  relations
    define owner as self
    define editor as self or owner or editor from parent
    define viewer as self or editor or viewer from parent
    define parent as self
```

Server setup as the documentation shows for postgres engine:

```sh
docker network create openfga
docker run -d --name postgres --network=openfga -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password postgres:14
docker run --rm --network=openfga openfga/openfga migrate --datastore-engine postgres --datastore-uri 'postgres://postgres:password@postgres:5432/postgres?sslmode=disable'
docker run --name openfga --network=openfga -p 3000:3000 -p 8080:8080 -p 8081:8081 openfga/openfga run --datastore-engine postgres --datastore-uri 'postgres://postgres:password@postgres:5432/postgres?sslmode=disable' --listObjects-max-results 50000  --listObjects-deadline 360s
```

First we added a user as admin of an organization ORG1: `{""user"": ""user_1"",""relation"": ""admin"",""object"": ""organization:ORG1""}`

We then performed 600 iterations of adding 25 tuples: `{""user"": ""type_1: UUID_1"",""relation"": ""parent"",""object"": ""type_2:UUID_n""}`
and 1 tuple giving members of ORG1 ""editor"" relation to each type_1 element: `{""user"": ""organization:ORG1#member"", ""relation"": ""editor"", ""object"": ""type_1:UUID_1""}`.

This created 600 type_1 elements and 15000 type_2 elements where each type_1 element is parent of 25 type_2 elements

When we tried listing the objects of type_2 that some user has by using the list_objects endpoint with `{""type"": type_2,""relation"": ""editor"",""user"": ""user_1""}` we get the 15000 ids but if we try listing with a ""viewer"" relation rather than ""editor"" `{""type"": type_2,""relation"": ""viewer"",""user"": ""user_1""}` we get a 500 response.

In the server we get the error:

```sh
2022-10-26T15:50:17.700Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 50, ""writes"": 0}
2022-10-26T15:50:17.700Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 38, ""writes"": 0}
2022-10-26T15:50:17.701Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 50, ""writes"": 0}
2022-10-26T15:50:17.702Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 32, ""writes"": 0}
2022-10-26T15:50:17.702Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 50, ""writes"": 0}
2022-10-26T15:50:17.702Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 29, ""writes"": 0}
2022-10-26T15:50:17.703Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 38, ""writes"": 0}
2022-10-26T15:50:17.710Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 38, ""writes"": 0}
2022-10-26T15:50:17.710Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 26, ""writes"": 0}
2022-10-26T15:50:17.710Z        ERROR   check_error     {""error"": ""postgres error: context deadline exceeded""}
github.com/openfga/openfga/pkg/logger.(*ZapLogger).ErrorWithContext
        /home/runner/work/openfga/openfga/pkg/logger/logger.go:80
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).internalCheck
        /home/runner/work/openfga/openfga/server/commands/list_objects.go:233
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).performChecks.func1
        /home/runner/work/openfga/openfga/server/commands/list_objects.go:207
golang.org/x/sync/errgroup.(*Group).Go.func1
        /home/runner/go/pkg/mod/golang.org/x/sync@v0.0.0-20220601150217-0de741cfad7f/errgroup/errgroup.go:75
2022-10-26T15:50:17.710Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 11, ""writes"": 0}
2022-10-26T15:50:17.710Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 11, ""writes"": 0}
2022-10-26T15:50:17.710Z        INFO    db_stats        {""method"": ""Check"", ""reads"": 32, ""writes"": 0}
2022-10-26T15:50:17.710Z        ERROR   check_error     {""error"": ""rpc error: code = Code(4000) desc = Internal Server Error""}
github.com/openfga/openfga/pkg/logger.(*ZapLogger).ErrorWithContext
        /home/runner/work/openfga/openfga/pkg/logger/logger.go:80
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).internalCheck
        /home/runner/work/openfga/openfga/server/commands/list_objects.go:233
github.com/openfga/openfga/server/commands.(*ListObjectsQuery).performChecks.func1
        /home/runner/work/openfga/openfga/server/commands/list_objects.go:207
golang.org/x/sync/errgroup.(*Group).Go.func1
```

Second step by step population of the database and listing:

- With 50 type_1 worked returning 1250 type_2 ids
- With 100 type_1 worked returning 2500 type_2 ids
- With 150 type_1 worked returning 3750 type_2 ids
- With 200 type_1 worked returning 5000 type_2 ids
- With 250 type_1 worked returning 6250 type_2 ids
- With 300 type_1 worked returning 7500 type_2 ids
- With 350 type_1 worked returning 8750 type_2 ids
- With 400 type_1 stoped working for viewer relation but for ""editor"" relation returned the 10000 ids.
- Then we jumped to 750 type_1 elements and the ""editor"" listing failed too.",崩溃,前端,未指定,未指定,False,5.0
300,Sporadic authorization_model_resolution_too_complex error,closed,2022-10-19 22:53:51,2023-02-07 15:04:13,ghstahl,['bug'],14,"Docker on Windows
OpenFGA v.0.2.2

I have a reproducible model, [dataset](https://github.com/openfga/openfga/files/9824865/complex_error_reproducible.zip), and check that gives me the following sporadic error;
```json
{
    ""code"": ""authorization_model_resolution_too_complex"",
    ""message"": ""Authorization Model resolution required too many rewrite rules to be resolved. Check your authorization model for infinite recursion or too much nesting""
}
```  

I make the following Check call via POSTMAN
```json
{
    ""tuple_key"": {
      ""object"": ""org:f708c725-b072-4678-87d1-7fc47c52ffd3"",
      ""relation"": ""member"",
      ""user"": ""a2226717-7702-480a-a4ce-4608d0dcaea5""
    },
    ""contextual_tuples"": {
      ""tuple_keys"": [
        {
          ""object"": ""org:f708c725-b072-4678-87d1-7fc47c52ffd3"",
          ""relation"": ""user_in_context"",
          ""user"": ""a2226717-7702-480a-a4ce-4608d0dcaea5""
        }
      ]
    } 
  }
```
or Curl
```curl
curl --location --request POST 'http://localhost:3601/stores/01GFS6AQP6WTBCHNNQR7YSA9AW/check' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data-raw '{
    ""tuple_key"": {
      ""object"": ""org:f708c725-b072-4678-87d1-7fc47c52ffd3"",
      ""relation"": ""member"",
      ""user"": ""a2226717-7702-480a-a4ce-4608d0dcaea5""
    },
    ""contextual_tuples"": {
      ""tuple_keys"": [
        {
          ""object"": ""org:f708c725-b072-4678-87d1-7fc47c52ffd3"",
          ""relation"": ""user_in_context"",
          ""user"": ""a2226717-7702-480a-a4ce-4608d0dcaea5""
        }
      ]
    } 
  }'
```

My Authorization Model
```
type feature
  relations
    define access as subscriber_member from associated_plan
    define associated_plan as self
    define subscriber as subscriber from associated_plan
type feature_repo
  relations
    define feature as self
type integrity
  relations
    define member as self
type org
  relations
    define admin as self and member
    define member as self and member from user_repo and user_in_context
    define plan_provider as self
    define user_in_context as self
    define user_repo as self
type permission
  relations
    define access as access from associated_feature and member from associated_permission_group
    define associated_feature as self
    define associated_permission_group as self
    define org_access as subscriber from associated_feature
type permission_group
  relations
    define member as self or admin from owner
    define owner as self
type plan
  relations
    define subscriber as self
    define subscriber_member as member from subscriber
type plan_provider
  relations
    define plan as self and plan from plan_repo and plan_in_context
    define plan_in_context as self
    define plan_repo as self
type plan_repo
  relations
    define plan as self
type user_repo
  relations
    define integrity as self
    define member as self and member from integrity

```
[complex_error_reproducible.zip](https://github.com/openfga/openfga/files/9824865/complex_error_reproducible.zip)
",功能错误,前端,未指定,未指定,False,110.0
274,Latest release (v0.2.3) is crashing when http or grpc add is provided in configuration,closed,2022-10-10 19:26:06,2022-10-10 22:27:08,rhamzeh,['bug'],1,"Removing these two configs (`OPENFGA_HTTP_ADDR` and `OPENFGA_GRPC_ADDR`) allows the service to start.

The configuration is passed through docker compose, like so:

```yaml
services:
  openfga:
    image: openfga/openfga
    # ...
    environment:
      OPENFGA_HTTP_ADDR: "":${OPENFGA_HTTP_PORT}""
      OPENFGA_GRPC_ADDR: "":${OPENFGA_GRPC_PORT}""
```

Note: This used to work on `v0.2.2`

### More info
- Run through: official docker image & docker-compose
- OpenFGA version: `v0.2.3`

### Logs

```
{""level"":""info"",""ts"":1665181651.7706127,""caller"":""logger/logger.go:48"",""msg"":""using 'postgres' storage engine"",""build.version"":""v0.2.3"",""build.commit"":""07a7a1a7eaa4d04f2c9e7efed40072ae2f3560b4""}
{""level"":""warn"",""ts"":1665181651.7706547,""caller"":""logger/logger.go:52"",""msg"":""grpc TLS is disabled, serving connections using insecure plaintext"",""build.version"":""v0.2.3"",""build.commit"":""07a7a1a7eaa4d04f2c9e7efed40072ae2f3560b4""}
{""level"":""warn"",""ts"":1665181651.7706614,""caller"":""logger/logger.go:52"",""msg"":""HTTP TLS is disabled, serving connections using insecure plaintext"",""build.version"":""v0.2.3"",""build.commit"":""07a7a1a7eaa4d04f2c9e7efed40072ae2f3560b4""}
{""level"":""warn"",""ts"":1665181651.7706642,""caller"":""logger/logger.go:52"",""msg"":""authentication is disabled"",""build.version"":""v0.2.3"",""build.commit"":""07a7a1a7eaa4d04f2c9e7efed40072ae2f3560b4""}
{""level"":""fatal"",""ts"":1665181651.7706723,""caller"":""logger/logger.go:64"",""msg"":""failed to initialize openfga server"",""build.version"":""v0.2.3"",""build.commit"":""07a7a1a7eaa4d04f2c9e7efed40072ae2f3560b4"",""error"":""failed to parse the 'grpc.addr' config: no IP"",""stacktrace"":""github.com/openfga/openfga/pkg/logger.(*ZapLogger).Fatal\n\t/home/runner/work/openfga/openfga/pkg/logger/logger.go:64\ngithub.com/openfga/openfga/pkg/cmd.run\n\t/home/runner/work/openfga/openfga/pkg/cmd/run.go:55\ngithub.com/spf13/cobra.(*Command).execute\n\t/home/runner/go/pkg/mod/github.com/spf13/cobra@v1.5.0/command.go:876\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/home/runner/go/pkg/mod/github.com/spf13/cobra@v1.5.0/command.go:990\ngithub.com/spf13/cobra.(*Command).Execute\n\t/home/runner/go/pkg/mod/github.com/spf13/cobra@v1.5.0/command.go:918\nmain.main\n\t/home/runner/work/openfga/openfga/cmd/openfga/openfga.go:18\nruntime.main\n\t/opt/hostedtoolcache/go/1.18.6/x64/src/runtime/proc.go:250""}
```

Reported by @ghstahl",兼容性问题,前端,未指定,未指定,False,0.0
260,Wildcard's involved in a tupleset relation of a TupleToUserset rewrite don't get evaluated,closed,2022-10-03 15:48:42,2022-10-03 16:08:27,jon-whit,['bug'],0,,其他,其他,未指定,未指定,False,0.0
250,"Read API: ""type not found"" is thrown when in fact the authorization model id was not found",closed,2022-09-22 23:26:20,2022-10-25 15:25:59,miparnisari,"['bug', 'good first issue']",3,"To reproduce:

1. Create an authorization model

```
curl --location --request POST 'http://localhost:8080/stores/01GCJB1DJ88RJ1KA5TMG5PJXQ4/authorization-models' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data-raw '{
    ""type_definitions"": [
        {
            ""type"": ""document"",
            ""relations"": {
                ""owner"": {
                    ""this"": {}
                }
            }
        },
        {
            ""type"": ""group"",
            ""relations"": {
                ""member"": {
                    ""this"": {}
                }
            }
        }
    ]
}'
```

2. Call read with an incorrect auth model id

```
curl --location --request POST 'http://localhost:8080/stores/01GCJB1DJ88RJ1KA5TMG5PJXQ4/read' \
--header 'Content-Type: application/json' \
--header 'Accept: application/json' \
--data-raw '{
  ""tuple_key"": {
    ""object"": ""document:2021-budget"",
    ""relation"": ""owner"",
    ""user"": ""anne""
  },
  ""authorization_model_id"": ""01GDKQT51EGCGAAAAAAAAAAAAA""
}'
````

You get this:

```
{
    ""code"": ""type_not_found"",
    ""message"": ""Type 'document' not found""
}
```

But I expected ""auth model id not found""


https://github.com/openfga/openfga/blob/7cbd9aadf38cc2c722f176c02969bd5fa6b2ee55/server/commands/read.go#L91-L94",功能错误,后端,未指定,未指定,True,32.0
235,bug: conflicting authorization models cause unexpected errors,closed,2022-09-14 16:26:01,2022-11-10 23:44:35,jon-whit,['bug'],0,"Consider the following two authorization models.

**model1**
```
type group
  relations
    define member as self

type document
  relations
    define viewer as self
```

**model2**
```
type team
  relations
    define member as self

type document
  relations
    define viewer as self
```

The following writes are allowed by OpenFGA.
```
write(document:doc1, viewer, group:eng#member, model1)
write(group:eng, member, jon, model1)

write(document:doc1, viewer, team:buzz#member, model2)
write(team:buzz, member, et, model2)
```
But, when evaluating `Check(document:doc1, viewer, someuser, model1)`, I get a `400 Bad Request` error with message
```
{
    ""code"": ""type_not_found"",
    ""message"": ""Type 'team' not found""
}
```

I would expect a 200 OK with `{""allowed"": false}`, because the Check is issued as of model1 and the 'team' type definition does not pertain whatsoever to model1.
",安全问题,认证,未指定,未指定,False,57.0
189,bug: validate type and relations in userset values,closed,2022-08-26 18:03:16,2022-11-18 18:36:52,jon-whit,['bug'],1,"Given the following authorization model:

```
type document
  relations
    define viewer as self
```

I can write the following relationship tuple `Write(""document:doc1"", ""viewer"", ""group:engineering#member"")`.

I shouldn't be able to do this because the `group` type does not exist in the authorization model.",安全问题,认证,未指定,未指定,False,84.0
176,bug: open fga crashes for no apparent reason,closed,2022-08-17 20:59:21,2022-10-12 15:01:21,tnipri,['bug'],23,"Hey,

I'm using open fga using docker (I'm using the latest version - 0.2.0). The docker works fine, but after some time - sending a request to openfga (using SDK) returns a 500 error with the following message:
`""FGA API Internal Error: post check : Error Internal Server Error""`

Logs from docker container:
`2022-08-17T20:55:47.861Z        ERROR   grpc error      {""error"": ""rpc error: code = Unknown desc = rpc error: code = Code(4000) desc = Internal Server Error"", ""request_url"": ""/stores/01G9TE715A51EDP84Q7S9VH9CX/check""}
github.com/openfga/openfga/pkg/logger.(*ZapLogger).ErrorWithContext
        /home/runner/work/openfga/openfga/pkg/logger/logger.go:80
github.com/openfga/openfga/server.New.func1
        /home/runner/work/openfga/openfga/server/server.go:143
github.com/grpc-ecosystem/grpc-gateway/v2/runtime.HTTPError
        /home/runner/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway/v2@v2.11.2/runtime/errors.go:81
go.buf.build/openfga/go/openfga/api/openfga/v1.RegisterOpenFGAServiceHandlerClient.func3
        /home/runner/go/pkg/mod/go.buf.build/openfga/go/openfga/api@v1.2.27/openfga/v1/openfga_service.pb.gw.go:1591
github.com/grpc-ecosystem/grpc-gateway/v2/runtime.(*ServeMux).ServeHTTP
        /home/runner/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway/v2@v2.11.2/runtime/mux.go:386
github.com/rs/cors.(*Cors).Handler.func1
        /home/runner/go/pkg/mod/github.com/rs/cors@v1.8.2/cors.go:231
net/http.HandlerFunc.ServeHTTP
        /opt/hostedtoolcache/go/1.18.5/x64/src/net/http/server.go:2084
net/http.serverHandler.ServeHTTP
        /opt/hostedtoolcache/go/1.18.5/x64/src/net/http/server.go:2916
net/http.(*conn).serve
        /opt/hostedtoolcache/go/1.18.5/x64/src/net/http/server.go:1966
`

I can't seem to reproduce it. The only thing that solves this is restarting the docker container.
",兼容性问题,前端,未指定,未指定,True,55.0
163,Migrate does not respect the same configuration methods as openfga,closed,2022-08-12 19:39:55,2022-08-26 19:29:32,rhamzeh,['bug'],0,"## To Reproduce
```shell
docker run --env OPENFGA_DATASTORE_ENGINE=postgres --env OPENFGA_DATASTORE_URI=postgres://postgres:postgres@localhost:5432/openfga openfga/openfga:v0.1.7 migrate
```

## Expected Result(s)
- An error connecting to postgres if postgres is not running or the uri is invalid
- A successful migration

## Actual Result
- Complaint about datastore params not being passed
<img width=""1213"" alt=""Screen Shot 2022-08-12 at 3 22 49 PM"" src=""https://user-images.githubusercontent.com/536147/184431181-6d55afc8-d290-4095-8a12-5847e037851c.png"">
",崩溃,数据库,未指定,未指定,True,13.0
132,Invalid tuple deletes not flagged as invalid tuple error,closed,2022-07-28 13:50:07,2022-07-29 21:19:59,adriantam,"['bug', 'good first issue', 'go']",0,"If I try to delete by writing http://localhost:8080/stores/01G0CECAB4TT41TKN3E7D7J27Q/write with the body

```
{
  ""deletes"": {
    ""tuple_keys"": [
      {
        ""user"": """",
        ""relation"": ""writer"",
        ""object"": ""document:2021-budget""
      }
    ]
  }
}
```

It only fails due to tuples do not exist.
```
{
    ""code"": ""write_failed_due_to_invalid_input"",
    ""message"": ""cannot delete a tuple which does not exist: user: '', relation: 'writer', object: 'document:2021-budget': invalid write input""
}
```

Note that when I try to write the same tuples (with no user)
```
{
  ""writes"": {
    ""tuple_keys"": [
      {
        ""user"": """",
        ""relation"": ""writer"",
        ""object"": ""document:2021-budget""
      }
    ]
  }
}
```

It will fail with
```
{
    ""code"": ""invalid_tuple"",
    ""message"": ""Invalid tuple 'object:\""document:2021-budget\"" relation:\""writer\""'. Reason: missing user""
}
```

Thus, it looks like we validate against write but not read",崩溃,文档,未指定,未指定,False,1.0
105,bug: unauthenticated/unauthorized requests return 500 status code instead of 401/403,closed,2022-07-13 18:12:58,2022-08-26 20:34:27,jon-whit,['bug'],0,"When we introduced authn into OpenFGA we didn't introduce the corresponding API error codes for authn related API errors in [openfga/api](https://github.com/openfga/api), so every 401 or 403 (unauthenticated or unauthorized) ends up returning a 500 (internal) error code.

Steps to reproduce (for example):
```
➜ ./openfga run --authn-method preshared --authn-preshared-keys key1

➜ curl --request POST -d '{""name"":""openfga-demo""}' http://localhost:8080/stores

{""code"":""internal_error"",""message"":""missing bearer token""}

➜ curl --header ""Authorization: Bearer key2"" --request POST -d '{""name"":""openfga-demo""}' http://localhost:8080/stores

{""code"":""internal_error"",""message"":""unauthorized""}
```

To fix this we need to introduce authn errors into [openfga/api](https://github.com/openfga/api) and encode authn errors to the appropriate error code herein.",安全问题,后端,未指定,未指定,True,44.0
94,Unable to connect to an Azure-hosted Postgres instance,closed,2022-07-09 02:08:01,2022-07-09 03:12:23,thisisxvr,['bug'],2,"I'm experimenting with connecting OpenFGA to an Azure managed Postgres instance by running the OpenFGA docker container locally, and passing the `postgres://` connection URI as the `OPENFGA_DATASTORE_CONNECTION_URI` env var. I've verified that I can connect to the Postgres instance through other means, but when I make a cURL request to create a new store in OpenFGA I get the following error:

```bash
ERROR   grpc error      {""error"": ""rpc error: code = Unknown desc = rpc error: code = Code(4000) desc = Internal Server Error"", ""request_url"": ""/stores""}
github.com/openfga/openfga/pkg/logger.(*ZapLogger).ErrorWithContext
        /home/runner/work/openfga/openfga/pkg/logger/logger.go:80
github.com/openfga/openfga/server.New.func1
        /home/runner/work/openfga/openfga/server/server.go:134
github.com/grpc-ecosystem/grpc-gateway/v2/runtime.HTTPError
        /home/runner/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway/v2@v2.10.3/runtime/errors.go:81
go.buf.build/openfga/go/openfga/api/openfga/v1.RegisterOpenFGAServiceHandlerClient.func12
        /home/runner/go/pkg/mod/go.buf.build/openfga/go/openfga/api@v1.1.16/openfga/v1/openfga_service.pb.gw.go:1639
github.com/grpc-ecosystem/grpc-gateway/v2/runtime.(*ServeMux).ServeHTTP
        /home/runner/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway/v2@v2.10.3/runtime/mux.go:386
github.com/rs/cors.(*Cors).Handler.func1
        /home/runner/go/pkg/mod/github.com/rs/cors@v1.8.2/cors.go:231
net/http.HandlerFunc.ServeHTTP
        /opt/hostedtoolcache/go/1.18.3/x64/src/net/http/server.go:2084
net/http.serverHandler.ServeHTTP
        /opt/hostedtoolcache/go/1.18.3/x64/src/net/http/server.go:2916
net/http.(*conn).serve
        /opt/hostedtoolcache/go/1.18.3/x64/src/net/http/server.go:1966
```

**Steps to reproduce:**
1. Populate `.openfga.env` with:
```
OPENFGA_DATASTORE_ENGINE=postgres
OPENFGA_DATASTORE_CONNECTION_URI=postgres://<username>:<password>@<server_name>.postgres.database.azure.com/<database_name>
OPENFGA_GRPC_TLS_ENABLED=false
OPENFGA_HTTP_TLS_ENABLED=false
```
2. Run `docker run --env-file ./openfga.env -p 8080:8080 openfga/openfga run`
3. Run ```curl -X POST 'localhost:8080/stores' \
--header 'Content-Type: application/json' \
--data-raw '{
    ""name"": ""openfga-demo""
}'``` in a separate terminal",崩溃,前端,未指定,未指定,True,0.0
